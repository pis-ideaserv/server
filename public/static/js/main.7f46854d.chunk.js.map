{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Services/Requests/MasterCodes.ts","Services/Requests/Category.ts","Middleware/ComponentMiddleware.tsx","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Redux/Actions/MasterCodes.ts","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Summary/Category.tsx","Components/Main/Summary/Add.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/Upload.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/Upload.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Components/Main/Summary/Edit.tsx","Components/Main/Summary/Upload.tsx","Components/Main/Summary/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/MasterCodes.ts","Redux/Reducers/Category.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","prefix","Url","login","logout","refresh","user","products","suppliers","productMasterList","category","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","data","stop","_x2","_handle_error","_callee2","b","_context2","params","retry","callback","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","Promise","resolve","setTimeout","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","MasterCodes","up","pml","Category","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","react_default","createElement","component","react_router","to","pathname","state","from","location","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","Filter","extra_params","keys","forEach","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","submitForm","jwt","preventDefault","jwt_decode","sub","checkUser","users","returnUrl","activated","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","index_es","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","styles","hidden","visibility","inherited","shadowed","boxShadow","icon","backgroundColor","borderRadius","padding","useStyles","makeStyles","theme","createStyles","root","list","&:hover","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Dropbox","ProgressWrench","VanUtility","Account","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","removeEventListener","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","href","navigate","Navigation_SidebarDesktop","Backdrop","children","ref","useRef","product_description","serial_number","warranty","warranty_start","warranty_end","_useState","_useState2","popper","setPopper","reset","controller","Filter_objectSpread","setText","setFilter","setFilterControl","submitFilter","Filterer","onKey","e","length","current","blur","TableRow","TableCell","align","onFocus","onKeyDown","inputRef","Popper","FormControl","Select","MenuItem","selected","allowKeyboardControl","animateYearScrolling","moment","setMessage","setCategory","Close_default","handleClose","setOpen","handleOption","meta","opti","opt","total","setOption","disableBackdropClick","InputLabelProps","shrink","container","flexWrap","textField","marginRight","marginBottom","dense","spacing","menu","dialog","select","background","left","zIndex","addCategory","right","transform","outline","&:focus","categoryError","fontSize","Add","initError","product_code","product_name","classes","option","input","setInput","categoryHandle","setCategoryHandler","categoryParams","queryCategory","handleChangeText","Add_objectSpread","_a","Summary_Category","paperScrollPaper","react_select_browser_esm","options","Fab","Add_default","buttonStyle","productCode","productOption","setProductOption","openAddProduct","setOpenAddProduct","modalAdd","initProduct","handleProductAdd","supplierState","supplier_code","supplier_name","Summary_Add","setModalAdd","isDisabled","productInput","delivery_date","reference_delivery_document","remarks","Show","modalShow","setModalShow","Table","TableBody","setFullYear","getFullYear","created_by","initModalEdit","Edit","defaultValue","find","element","Upload","setUpload","Upload_objectSpread","upload","skipped","maxHeight","size","TableHead","result","hover","success","initErrroMessage","initProductInput","setParams","setProduct","_React$useState13","uploading","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","productCodeParam","setProductCodeParam","_React$useState19","_React$useState20","setProductInput","_React$useState21","_React$useState22","productState","getMasterCode","supplierRedux","uploadSheet","Products_objectSpread","togglePointerEvents","productRedux","stat","Products_Edit","Products_Add","Products_Show","Products_Upload","Products_Filter","onDoubleClick","productInfo","console","log","tableCell","Skeleton","height","i","skeletonTable","TableFooter","today","initModalAdd","accept","files","selectedFile","filename","split","pop","click","CloudUpload","TablePagination","rowsPerPageOptions","colSpan","count","rowsPerPage","onChangePage","newPage","pams","onChangeRowsPerPage","paran","ActionsComponent","TablePaginationActions","Reports","Settings","address","contact_person","contact_number","Suppliers_Filter_objectSpread","supplierInput","tin","Suppliers_Upload_objectSpread","initSupplierError","initSupplier","setSupplier","setSupplierInput","Suppliers_objectSpread","supplierAction","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Upload","Suppliers_Filter","param","Users_Filter_objectSpread","initUsers","setUsers","usersState","Users_objectSpread","modaledit","modaladd","Users_Filter","initModalShow","NotFound","Edit_objectSpread","Summary_Upload_objectSpread","Summary","masterCode","Summary_objectSpread","openEdit","setOpenEdit","handleAdd","Summary_Edit","Summary_Upload","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","exact","Navigations","initialized","setInitialized","checkToken","react_router_dom","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f46854d.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n    master      : 'product-master-list/',\n    category    : 'category/',\n\n}\n\nconst Url = {\n    //auth\n    login     :   server_url+prefix.auth+'login',\n    logout    :   server_url+prefix.auth+'logout',\n    refresh   :   server_url+prefix.auth+'refresh',\n    check     :   server_url+prefix.auth+'check',\n\n    //user\n    user       : server_url+prefix.user,\n    products   : server_url+prefix.products,\n    suppliers  : server_url+prefix.supplier,\n    productMasterList : server_url+prefix.master,\n    category   : server_url+prefix.category,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        // if(a.error.response.status === 401){\n        //     await new Promise( resolve => setTimeout(resolve, 6000) );\n        //     if(a.params){\n        //         return a.callback(a.params);\n        //     }\n\n        //     return a.callback();\n        // }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product                     : string,\n    // product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface showMasterCodes{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass MasterCodes extends StaticMethods{\n\n    static async show(user:showMasterCodes){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(up:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.productMasterList+up.id,\n            headers :   header,\n            params  :   up,\n        }).then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : up\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.productMasterList,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.productMasterList,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default MasterCodes;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\ninterface add{\n    name : string\n}\n\n\n\n\nclass Category extends StaticMethods{\n\n    static async show(user:show){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.category+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.category+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.get,\n    //             format : format,\n    //             params : id\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    // static async update(up:any){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     const header = super.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"PATCH\",\n    //         url     :   Url.category+up.id,\n    //         headers :   header,\n    //         params  :   up,\n    //     }).then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.update,\n    //             format : format,\n    //             params : up\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:add){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.category,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    // static async addFile(file:File){\n        \n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n        \n    //     const token = Token.get();\n    //     const formData = new FormData();\n    //     formData.append('file',file);\n\n    //     await axios.post(Url.suppliers,formData,{\n    //         headers: {\n    //             'Content-Type'         :    'application/x-www-form-urlencoded',\n    //             'Accept'               :    'application/json',\n    //             'Authorization'        :    'Bearer '+token\n    //         }})\n    //     .then( (response:any) => {\n    //         format.status = response.status; \n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.addFile,\n    //             format : format,\n    //             params : file\n    //         });\n          \n    //     })\n    //     return format;\n    // }\n\n    // static async filter(filter:any){\n\n    //     let params = new URLSearchParams(filter).toString();\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n        \n    //     const header = this.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.productMasterList+'?filter=true&'+params,\n    //         headers :   header,\n    //     }).then( this.sleeper(1000))\n    //     .then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.filter,\n    //             format : format,\n    //             params : filter\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Category;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            // if(await Token.valid()){\n    \n            //     const id:any = jwt_decode(Token.get());\n            //     const user:Requests.Format = await Requests.User.get(id.sub);\n            //     if(user.status === 200){\n            //         updateUser(User(user.data));\n    \n            //         setToken(true);\n            //     }\n            // }\n\n            if(Token.exist()){\n                setToken(true);\n            }\n            \n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const MasterCodes        = \"MasterCodes\";\nexport const Category           = \"Category\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us, MasterCodes as ma } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\" | \"master\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n        let params = '';\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n\n        params = params+\"&page=\"+extra_params.page+\"&per_page=\"+extra_params.per_page;\n        \n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(params),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(params),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(params),\n                    });\n                }\n            case \"master\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : ma,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : ma,\n                        payload : await Requests.MasterCodes.filter(params),\n                    });\n                }\n        }\n\n        \n}\n","import { MasterCodes as MC } from './Types';\n\nexport const MasterCodes = (a:any) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : MC,\n                payload : a\n            });\n        }\n}\n","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const updateUser = useDispatch();\n    \n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = async (user:Requests.Format) => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            \n            const id:any = jwt_decode(Token.get());\n            const users:Requests.Format = await Requests.User.get(id.sub);\n            if(users.status === 200){\n                updateUser(User(users.data));\n            }\n\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            \n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\n// import { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n\n\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div> */}\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><Account className=\"home-icon\" /></div>\n                            <div className=\"col\">Account</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div> */}\n                        \n                    \n                        {/* <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div> */}\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    {/* <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div> */}\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover, makeStyles, Theme, createStyles } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\n\n\n\nconst styles = {\n    hidden : {\n        visibility:'hidden',\n    },\n    inherited : {\n        position : 'inherit',\n    },\n    shadowed : {\n        boxShadow : '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\n    },\n    icon : {\n        backgroundColor : '#3f50b5',\n        color           : 'white',\n        borderRadius    : '20px',\n        padding         : '2px',\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position : 'inherit'\n        },\n        list : {\n            root : {\n                visibility : 'hidden',\n                '&:hover' : {\n                    visibility : 'visible'\n                }\n            }\n        }\n\n    }),\n);\n\nconst SidebarList = (props:any) => {\n    const classes = useStyles(props);\n\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List /*className={!props.sidebar ? classes.root : ''}*/>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}\n                    >\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon style={styles.icon} />}</ListItemIcon>\n                                    <ListItemText /*className={classes.list}*/>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings, List} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token, Requests} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search,MasterCodes} from 'Redux/Actions';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\n\nconst Navigation = (props:any) => {\n\t\n\tconst logo = \"/img/ideaserv.png\";\n\tlet sidebar_properties = [\n\t\t{\n\t\t\tname : \"Home\",\n\t\t\ticon : Home,\n\t\t\turl  : \"/\" \n\t\t},{\n\t\t\tname : \"Products\",\n\t\t\ticon : Dropbox,\n\t\t\turl  : '/products',\n\t\t},{\n\t\t\tname :\t\"Product Maintenance\",\n\t\t\ticon :  ProgressWrench,\n\t\t\turl  :  '/summary'\n\t\t},{\n\t\t\tname : \"Suppliers\",\n\t\t\ticon :  VanUtility,\n\t\t\turl  : \"/suppliers\", \n\t\t},{\n\t\t\tname : \"Users\",\n\t\t\ticon :  Account,\n\t\t\turl  : \"/users\", \n\t\t\tprops: '',\n\t\t}\n\t];\n\n\n\n\n\n\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[reduxUser]);\n\t\n\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Dropbox,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  VanUtility,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\t// window.location.reload();\n\t\tToken.remove();\n\n\t\t// if(!Token.exist){\n\t\t\twindow.location.href = \"/login\";\n\t\t\treturn\n\t\t// \treturn;\n\t\t// }\n\t\t// props.history.push('/login');\n\n\t\t\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n \n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\" | \"status\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product             : React.useRef(null),\n        product_description : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null),\n        status              : React.useRef(null),\n    };\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product             : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n        status              : null,\n    });\n\n    // const [filter, setFilter] = useState({\n    //     supplier            : {filter:'iet',key:''},\n    //     product_code        : {filter:'iet',key:''},\n    //     product_description : {filter:'iet',key:''},\n    //     serial_number       : {filter:'iet',key:''},\n    //     warranty            : {filter:'iet',key:''},\n    //     warranty_start      : {filter:'iet',key:''},\n    //     warranty_end        : {filter:'iet',key:''}\n    // });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product               = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        a.status                = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        \n        // setPopper({\n        //     ...popper,\n        //     [control] : null,\n        // })\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {props.filter.supplier.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            {props.filter.supplier.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={props.filter.supplier.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product\"\n                    value = {props.filter.product.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product)? \"simple-popper\" : undefined} open={Boolean(popper.product)} anchorEl={popper.product}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product.filter}\n                                onChange={setFilterControl}\n                                name = \"product\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product\")}>\n                            {props.filter.product.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product\")} disabled={props.filter.product.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {props.filter.product_description.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_description}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_description.filter}\n                                onChange={setFilterControl}\n                                name = \"product_description\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            {props.filter.product_description.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={props.filter.product_description.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {props.filter.serial_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.serial_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.serial_number.filter}\n                                onChange={setFilterControl}\n                                name = \"serial_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            {props.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={props.filter.serial_number.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {props.filter.warranty.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.warranty}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            {props.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={props.filter.warranty.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_start: {\n                                ...props.filter['warranty_start'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_start.key == '' ? null : moment(props.filter.warranty_start.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_start.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_start\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            {props.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={props.filter.warranty_start.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_end:{\n                                ...props.filter['warranty_end'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_end.key == '' ? null : moment(props.filter.warranty_end.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_end.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_end\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            {props.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={props.filter.warranty_end.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.status.key}\n                        onChange={setText}\n                        name=\"status\"\n                        onFocus = {(event)=>controller(event,\"status\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>New</MenuItem>\n                        <MenuItem value={2}>Replaced</MenuItem>\n                        <MenuItem value={3}>Returned</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.status)? \"simple-popper\" : undefined} open={Boolean(popper.status)} anchorEl={popper.status}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,status:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"status\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport { useSnackbar } from 'notistack';\nimport Close from '@material-ui/icons/Close';\n\ninterface Category{\n    \n    params : any,\n    open : any,\n\n    setOption : any,\n    setOpen : any,\n}\n\nconst Category = (props:Category) => {\n\n\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ error, setError ] = React.useState(false);\n    const [ message, setMessage ] = React.useState('');\n    const [category, setCategory ] = React.useState('');\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleClose = () => {\n        props.setOpen(!props.open);\n    }\n\n\n    const handleOption = async () => {\n        const a = await Requests.Category.show(props.params);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            opti = b.data.data;\n            props.params.page = 1;\n            props.params.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        props.setOption(opt);\n    }\n\n    const submitForm = async () => {\n        setError(false);\n        setSubmit(true);\n        if(category === ''){\n            setSubmit(false);\n            setError(true);\n            setMessage('Category name is required');\n            return;\n        }\n\n        let a = await Requests.Category.add({name:category});\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                handleOption();\n                handleClose();\n                enqueueSnackbar(\"Product category successfull added\",{variant:\"success\",action:actions});\n            }else{\n \n                if(a.status === 406){\n                    setSubmit(false);\n                    setError(true);\n                    setMessage('Category name already exists');\n                    return;\n                }else{\n                    enqueueSnackbar(\"Something went wrong. Please try again.\",{variant:\"error\",action:actions});\n                }\n            }\n        }\n\n        setSubmit(false);\n        setError(false);\n        setMessage('');\n    }\n\n    return(\n        <React.Fragment>\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Category</DialogTitle>\n                <DialogContent >\n                    <TextField\n                        id=\"outlined-email-input\"\n                        label=\"Category Name\"\n                        // className={classes.textField}\n                        type=\"text\"\n                        name=\"category\"\n                        value = {category}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange = {(event) => setCategory(event.target.value)}\n                        error = {error}\n                        helperText = {message}\n                        disabled={submit}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n\n                    <Button disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>        \n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nexport default Category;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none',\n\n            \"&:focus\": {\n                outline: 'none'\n            }\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Add = (props:Add) => {\n\n    const initError = {\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    }\n\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    const [input, setInput] = React.useState({\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState(initError);\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        setInput({\n            ...input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError(initError); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.add(input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully added Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Add new product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Product</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                \n                                // defaultValue = {options[0]}\n                                // onChange = {props.updateInput}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n    params                      :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Add = (props:Add) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    React.useEffect( () => {\n        if(productCode && props.modalAdd){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n       \n    //    console.log(productCode.data);\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    if(props.modalAdd){\n        let options;\n\n        if(props.supplierState){\n            options = props.supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        let status = [\n            {\n                label : 'New',\n                value : 1,\n                target: {\n                    name : 'status',\n                    value : 1,\n                }\n            },{\n                label : 'Replaced',\n                value : 2,\n                target: {\n                    name : 'status',\n                    value : 2,\n                }\n            },{\n                label : 'Returned',\n                value : 3,\n                target: {\n                    name : 'status',\n                    value : 3,\n                }\n            }\n        ];\n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalAdd}\n                    onClose={ () =>props.setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.supplier.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} style = {styles.select}>{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.product_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Category</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.category.name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                        <TableCell align=\"left\">{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                        <TableCell align=\"left\">{props.product.warranty > 1 ? props.product.warranty + ' Years ' : props.product.warranty + \" Year\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                        <TableCell align=\"left\">{moment(new Date(props.product.warranty_start).setFullYear(new Date(props.product.warranty_start).getFullYear() + props.product.warranty)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                        <TableCell align=\"left\">{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                        <TableCell align=\"left\">{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Status</TableCell>\n                                        <TableCell align=\"left\">{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  : 'Returned'\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Remarks</TableCell>\n                                        <TableCell align=\"left\">{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\n\ninterface Edit{\n    supplierState   : any,\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n    params          :   any,\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\nconst Edit = (props:Edit) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n\n    React.useEffect( () => {\n        if(productCode && props.modalEdit){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    let options;\n    if(props.supplierState){\n        options = props.supplierState.data.data.map((value:any) => {\n            return {\n                label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                value : value.id,\n                target: {\n                    name  : 'supplier',\n                    value : value.id \n                }\n            }\n        })\n    }else{\n        options = {\n            label : '',\n            value : '',\n            target: {\n                name : 'supplier',\n                value : ''\n            }\n        }\n    }\n\n    let status = [\n        {\n            label : 'New',\n            value : 1,\n            target: {\n                name : 'status',\n                value : 1,\n            }\n        },{\n            label : 'Replaced',\n            value : 2,\n            target: {\n                name : 'status',\n                value : 2,\n            }\n        },{\n            label : 'Returned',\n            value : 3,\n            target: {\n                name : 'status',\n                value : 3,\n            }\n        }\n    ];\n\n    if(props.product && productOption){\n        \n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalEdit}\n                    onClose={ () =>props.setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === props.productInput.supplier)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                defaultValue = {productOption? productOption.find((element:any) => element.value === props.productInput.product): ''}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                defaultValue = {status.find((element:any) => element.value === props.productInput.status)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.data.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.remarks} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.remarks} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Button, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux,Filter as Filterer,NavigationTitle,MasterCodes} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Upload from './Upload';\n\nconst Products = (props:any) =>{\n\n    const initErrroMessage = {\n        id                          : {error:false,message:''},\n        supplier                    : {error:false,message:''},\n        product                     : {error:false,message:''},\n        // product_description         : {error:false,message:''},\n        delivery_date               : {error:false,message:''},\n        reference_delivery_document : {error:false,message:''},\n        serial_number               : {error:false,message:''},\n        warranty                    : {error:false,message:''},\n        warranty_start              : {error:false,message:''},\n        status                      : {error:false,message:''},\n        remarks                     : {error:false,message:''},\n    };\n    \n    const initProductInput = {\n        id                  : '',\n        supplier            : '',\n        product             : '',\n        // product_description : '', \n        delivery_date       : '',\n        reference_delivery_document : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        status              : '',\n        remarks             : '',\n    \n    }\n\n    \n    // const [ page, setPage ] = React.useState(0);\n    const [ params, setParams ] = React.useState({\n        page     : 1,\n        per_page : 10\n    });\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n    const [filter, setFilter] = React.useState({\n        supplier            : {filter:'iet',key:''},\n        product             : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''},\n        status              : {filter:'iet',key:''}\n    });\n    const [ productCodeParam, setProductCodeParam ] = React.useState();\n\n\n\n    // const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n    const dispatch = useDispatch();\n\n\n    const getMasterCode = async () => {\n\t\tconst a = await Requests.MasterCodes.show({page:1,per_page:10});\n\n\t\tlet meta = a.data.meta;\n\n\t\tlet b;\n\n\t\tif(meta.per_page < meta.total){\n            b = await Requests.MasterCodes.show({page:1,per_page:meta.total});\n            setProductCodeParam({\n                page : 1,\n                per_page : meta.total\n            })    \n\t\t}else{\n            b = a;\n            setProductCodeParam({\n                page : 1,\n                per_page : 10\n            });    \n\t\t}\n\n        \n\t\tdispatch(MasterCodes(b));\n\n\t}\n\n\n    useEffect(()=>{\n        getMasterCode();\n\n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));  //for select option\n        dispatch(Filterer(filter,\"product\",params));\n        \n        return () =>{\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    \n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage(initErrroMessage);\n    };\n    \n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"product\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"product\",paran));\n        \n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM/DD/YYYY'),\n            warranty_start     : moment(today).format('MM/DD/YYYY'),\n        });\n\n        // console.log(productInput);\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n\n        console.log(productInfo);\n\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM/DD/YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product                     : product.product.id,\n            // product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n\n        \n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        \n        setResponseMessage(holder);\n    }\n\n    const status = (stat:any) => {\n        switch(stat){\n            case 1 : \n                return \"New\";\n            case 2 :\n                return \"Replace\";\n            case 3 : \n                return \"Returned\";\n        }\n    }\n\n\n    return(\n        <React.Fragment>\n            <Edit\n                supplierState   = {supplierState}\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n                params          = {productCodeParam}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n                params          = {productCodeParam}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>                                     \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params}/>\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_code}>{key.product.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_name}>{key.product.product_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"center\" title={status(key.status)}>{status(key.status)}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                { user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                    \n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n                                            className = \"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                    : ''\n                                }\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={productState ? params.page-1: 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"supplier\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"supplier\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {props.filter.supplier_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_code}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_code.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            {props.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={props.filter.supplier_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {props.filter.supplier_name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_name.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {props.filter.address.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.address}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.address.filter}\n                                onChange={setFilterControl}\n                                name = \"address\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            {props.filter.address.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={props.filter.address.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {props.filter.contact_person.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_person}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_person.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_person\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            {props.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={props.filter.contact_person.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {props.filter.contact_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_number.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            {props.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={props.filter.contact_number.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                        <TableCell align=\"left\" title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>   \n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.email} </TableCell>   \n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.email}</TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Filter as Filterer } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from './Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const [filter, setFilter] = React.useState({\n        supplier_code       : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        address             : {filter:'iet',key:''},\n        contact_person      : {filter:'iet',key:''},\n        contact_number      : {filter:'iet',key:''},\n        email               : {filter:'iet',key:''},\n    });\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    const [params, setParams] = React.useState({page:1,per_page:10});\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        result      : [],\n        open        : false,\n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Filterer(filter,\"supplier\",params));\n        \n\n        return () =>{\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    const uploadFile = () => {\n        togglePointerEvents(false)\n\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n        \n    }\n\n\n    const uploadSheet = async (file:File) => {\n\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"supplier\",params));\n\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n\n                return;\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage(initSupplierError);\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n\n        let param = params;\n        param.page = newPage+1;\n        setParams(param);\n\n        dispatch(Filterer(filter,\"supplier\",param));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"supplier\",paran));\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n\n            {uploadFileModal()}\n\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                {\n                                    user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n\n                                            className=\"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                : null\n                            }\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={supplierState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"user\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"user\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {props.filter.username.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = { ref.username }\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.username.filter}\n                                onChange={setFilterControl}\n                                name = \"username\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            {props.filter.username.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={props.filter.username.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {props.filter.name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.name.filter}\n                                onChange={setFilterControl}\n                                name = \"name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            {props.filter.name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={props.filter.name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {props.filter.company.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.company}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.company.filter}\n                                onChange={setFilterControl}\n                                name = \"company\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            {props.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { props.filter.company.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.level.key}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        <MenuItem value={3}>Viewer</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.activated.key}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={0} >All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={2}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search,Filter as Filterer } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n\n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        username        : {filter:'iet',key:''},\n        name            : {filter:'iet',key:''},\n        company         : {filter:'iet',key:''},\n        email           : {filter:'iet',key:''},\n        level           : {filter:'iet',key:0},\n        activated       : {filter:'iet',key:0},\n    });\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : 1,\n        level               : 1,\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Users'));\n        dispatch(Filterer(filter,\"user\",params));\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"user\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"user\",paran));\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow> */}\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => element.value === usersInput.activated)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={usersState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport { inputCSS } from 'react-select/src/components/Input';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n    input : any,\n    setInput : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none'\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Edit = (props:Add) => {\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    // const [input, setInput] = React.useState({\n    //     product_code : '',\n    //     product_name : '',\n    //     category     : '',\n    // });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        props.setInput({\n            ...props.input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.update(props.input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully Updated Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Update product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        props.open ?\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Edit Product Code</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {props.input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {props.input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n\n        : null\n      );\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.category} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                      \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.category} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {NavigationTitle,MasterCodes,Filter as Filterer} from 'Redux/Actions';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, CircularProgress, DialogContent } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from '../../../Services';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport Upload from './Upload';\n\n\n\nconst Summary = (props:any) => {\n\n    const dispatch = useDispatch();\n    const masterCode = useSelector( (state:any) => state.MasterCodes.data );\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar    \n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        product_code     : {filter:'iet',key:''},\n        product_name     : {filter:'iet',key:''},\n        category         : {filter:'iet',key:''},\n    });\n    const [ open, setOpen ] = React.useState(false);\n    \n    /**for file upload */\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n\n    let file:HTMLInputElement;\n\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.MasterCodes.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    /**********************/\n\n\n\n\n    //************** for edit\n\n    const [input, setInput] = React.useState({\n        id           : '',\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [openEdit, setOpenEdit] = React.useState(false);\n\n    const handleEdit = () => {\n        setOpenEdit(!openEdit)\n    }\n\n    //**************\n\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Product Master File Maintenance'));\n        dispatch(Filterer(filter,\"master\",params));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[])\n\n    const handleAdd = () => {\n        setOpen(!open);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"master\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        setParams(paran);\n        dispatch(Filterer(filter,\"master\",paran));\n    };\n\n    const initEdit = (a:any) => {\n\n        setInput({\n            id : a.id,\n            product_code : a.product_code,\n            product_name : a.product_name,\n            category : a.category.id\n        });\n        setOpenEdit(true);\n    }\n\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"center\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n    \n    return(\n        <React.Fragment>\n            <Add open={open} handleClose={handleAdd} per_page={params.per_page} page={params.page} />\n            <Edit open={openEdit} handleClose={handleEdit} per_page={params.per_page} page={params.page}  input = {input} setInput = {setInput}/>\n           \n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            \n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\">Product Code</TableCell>\n                            <TableCell align=\"left\">Product Name</TableCell>\n                            <TableCell align=\"left\">Category</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        {/* <Filter filter={filter} setFilter={setFilter} params={params} /> */}\n                        {\n                            masterCode ?\n                                masterCode.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initEdit(key)} >\n                                        <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_name}>{key.product_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.category}>{key.category.name}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   \n                            skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () => handleAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={masterCode ? masterCode.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={masterCode ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n\n}\n\nexport default Summary;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.exist()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home,\n        exact : true\n    },{\n        path : \"/products\",\n        component : Component.Products,\n        exact : false\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers,\n        exact : false\n    },{\n        path : \"/users\",\n        component : Component.Users,\n        exact : false\n    },{\n        path : \"/reports\",\n        component : Component.Reports,\n        exact : false\n    },{\n        path : '/settings',\n        component : Component.Settings,\n        exact : false\n    },{\n        path : '/summary',\n        component : Component.Summary,\n        exact : false\n    }\n];\n","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\nimport { Token, Requests } from 'Services';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst Navigations = (props:any) =>{\n\n\n    const [ initialized, setInitialized ] = React.useState(false);\n    const updateUser = useDispatch();\n\n    React.useEffect(()=>{\n        if(!initialized){\n            checkToken();\n        }\n    },[initialized]);\n\n\n    const checkToken = async () => {\n        if(Token.exist()){\n            const id:any = jwt_decode(Token.get());\n            const user:Requests.Format = await Requests.User.get(id.sub);\n            if(user.status === 200){\n                updateUser(User(user.data));\n            }else{\n                Token.remove();\n            }\n        }\n\n        setInitialized(true);\n    }\n\n\n\n    if(!initialized){\n        return null;\n    }\n\n\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n            \n                <Switch>\n                   {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                    \n                    \n                    <Route path =\"/\">\n                            <Component.Navigation>\n                            <Switch>\n                                {\n                                    InsideNav.map((element,index) => \n                                        <Route exact={element.exact} path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                        // <Route exact path ={element.path} component={element.component} key={index} />\n                                    )\n                                }\n                            \n                                {/* <Route exact path =\"/\" render= {(props) => <ComponentMiddleware {...props} component={Component.Home} />}/>\n                                <Route exact path =\"/products\" render= {(props) => <ComponentMiddleware {...props} component={Component.Products} />}/>\n                                <Route exact path =\"/suppliers\" render= {(props) => <ComponentMiddleware {...props} component={Component.Suppliers} />}/>\n                                <Route exact path =\"/users\" render= {(props) => <ComponentMiddleware {...props} component={Component.Users} />}/>\n                                <Route exact path =\"/reports\" render= {(props) => <ComponentMiddleware {...props} component={Component.Reports} />}/>\n                                <Route exact path =\"/settings\" render= {(props) => <ComponentMiddleware {...props} component={Component.Settings} />}/> */}\n                                <Route component={Component.NotFound} />\n                                </Switch>\n\n\n                            </Component.Navigation>\n                            \n                    </Route>\n                    \n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { MasterCodes as MC } from '../Actions/Types';\n\nconst initialState:any = {\n\tdata : ''\n};\n\nconst MasterCodes = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase MC:\n\t\t\treturn {\n\t\t\t\tdata : action.payload,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default MasterCodes;","import { Category as ct } from '../Actions/Types';\n\nconst initialState:any = [];\n\nconst Category = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase ct:\n      \t\treturn state = action.payload;\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Category;","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\nimport MasterCodes from './MasterCodes';\nimport Category from './Category';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search,\n    MasterCodes,\n    Category,\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst a = (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  a ? \n    compose(\n      applyMiddleware(...middleware),a\n    )\n    :\n    compose(\n      applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}