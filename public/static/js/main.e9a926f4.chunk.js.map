{"version":3,"sources":["Services/WithRouterInnerRef.tsx","Services/ServerUrl.ts","Services/Requests/Auth.tsx","Services/Requests/StaticMethods.ts","Services/Token.ts","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Redux/Actions/MasterCodes.ts","Redux/Actions/status.ts","Services/Requests/User.tsx","Services/Requests/Products.tsx","Services/Requests/Suppliers.tsx","Services/Requests/MasterCodes.tsx","Services/Requests/Category.tsx","Services/Requests/Logs.tsx","Services/Requests/Status.tsx","Services/Requests/Notification.tsx","Components/Login/index.tsx","Components/Main/Home/Admin.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Products/Upload.tsx","Components/Main/Suppliers/Upload.tsx","Components/Main/Summary/Upload.tsx","Components/Notification/index.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Summary/Category.tsx","Components/Main/Summary/Add.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/TableOrder.tsx","Components/Upload/index.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/Show.tsx","Components/Main/Users/Edit.tsx","Components/Main/Users/Add.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Components/Main/Summary/Edit.tsx","Components/Main/Summary/index.tsx","Middleware/ComponentMiddleware.tsx","Middleware/LoginMiddleware.tsx","Routes/Navigation.ts","Routes/Error.tsx","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/MasterCodes.ts","Redux/Reducers/Category.ts","Redux/Reducers/status.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["withRouterInnRef","WrappedComponent","ComponentWithRef","withRouter","props","forwardRef","rest","Object","objectWithoutProperties","react_default","a","createElement","assign","ref","React","prefix","Url","login","logout","refresh","check","user","products","suppliers","productMasterList","category","logs","status","notification","withRouterInnerRef","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","action","key","Button","variant","color","onClick","Close","useImperativeHandle","request","_login","asyncToGenerator","regenerator_default","mark","_callee2","credential","format","wrap","_context2","prev","next","network_error","data","axios","method","url","headers","Content-Type","Accept","username","password","then","response","catch","_ref","_callee","error","_context","stop","_x2","apply","this","arguments","dangerouslySetInnerHTML","__html","autoHideDuration","anchorOrigin","vertical","horizontal","abrupt","_x","header","undefined","Authorization","Token","get","params","_ref2","handleError","sent","_ref3","_callee7","recall","_ret","_context7","_ref4","_callee3","ret","_context3","success","_ref5","_callee4","_context4","delegateYield","_callee6","counter","_loop","b","_context6","t0","setTimeout","_callee5","_context5","v","save","token","_x3","_x4","Date","setMinutes","getMinutes","Cookies","set","expires","remove","update","Products","Suppliers","Users","Search","UserAccount","dispatch","type","payload","NavigationTitle","page","per_page","pr","sp","Actions_Search","sr","Filter","filter","component","extra_params","keys","forEach","us","MasterCodes","loggedIn","stat","useDispatch","processData","show","_show","history","push","_get","id","_update","add","_add","search","_search2","_x5","_filter2","URLSearchParams","toString","_x6","product","supplier","up","pml","errorAction","useRef","userRef","_React$useState","useState","_React$useState2","slicedToArray","submit","setSubmit","_React$useState3","_React$useState4","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","value","submitForm","jwt","users","preventDefault","current","jwt_decode","sub","checkUser","returnUrl","activated","User","location","state","from","Container","maxWidth","Requests_namespaceObject","Auth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","disabled","onChange","required","helperText","CircularProgress","logsRequest","statusRequest","useSelector","setStatus","useEffect","requestLog","setData","rowsPerPage","New","Replaced","Returned","Repaired","_React$useState7","_React$useState8","_React$useState9","_React$useState10","open","setOpen","_React$useState11","_React$useState12","modal","setModal","_React$useState13","_React$useState14","setTarget","initModal","Logs","Status","Fragment","Dialog","onClose","aria-labelledby","disablePortal","DialogTitle","DialogContent","Table","size","TableBody","TableRow","TableCell","scope","supplier_code","product_code","product_name","serial_number","moment","delivery_date","warranty","warranty_start","warranty_end","reference_delivery_document","remarks","supplier_name","tin","address","contact_person","contact_number","email","first_name","last_name","company","level","parseInt","ProductMasterList","DialogActions","dataModal","style","marginTop","Paper","index_es","meta","total","ArrowForward","index_esm","width","height","chartType","loader","options","title","is3D","rootProps","data-testid","whiteSpace","Typography","padding","fontWeight","textTransform","overflow","TableHead","map","hover","updated_at","previous","tableCell","align","Skeleton","i","skeletonTable","control","Home_Admin","Topbar","userRequest","initUsersError","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","responseMessage","setResponseMessage","actions","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","fullWidth","textAlign","display","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","sidebar","toggleSidebar","swipeDrawer","noWrap","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","menu_title","styles","hidden","visibility","inherited","shadowed","boxShadow","icon","backgroundColor","borderRadius","makeStyles","theme","createStyles","root","list","&:hover","popperOpen","setPopperOpen","popperAnchor","setPopperAnchor","popperTitle","setPopperTitle","popperActive","setPoppperActive","sidebar_properties","popper","currentTarget","Popper","placement","transition","zIndex","TransitionProps","Fade","timeout","List","paddingTop","text","index","ListItem","onMouseEnter","onMouseLeave","button","setSidebarProps","sidebarProps","pathname","ListItemIcon","ListItemText","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","disablePadding","ArrowRightAlt","Upload","handleClose","setUpload","Upload_objectSpread","upload","skipped","maxHeight","disableBackdropClick","result","errors","length","Suppliers_Upload_objectSpread","Summary_Upload_objectSpread","Notification","notify","setPage","setProduct","masterfile","setMasterFile","setSupplier","Products_Upload","Summary_Upload","Suppliers_Upload","onDoubleClick","Notification_objectSpread","setErrorMessage","Chip","created_at","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","Home","Dropbox","ProgressWrench","VanUtility","Account","Assessment","setSidebar","swipe","setSwipe","window","innerWidth","setWidth","setSearch","setUser","reduxUser","addEventListener","updateBrowserWidth","sidebars","removeEventListener","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","navigate","Navigation_SidebarDesktop","Components_Notification","Backdrop","reset","product_description","created_by","_useState","_useState2","setPopper","controller","Filter_objectSpread","setText","setFilter","setFilterControl","submitFilter","setParams","Filterer","onKey","e","blur","table","onFocus","onKeyDown","inputRef","FormControl","Select","MenuItem","selected","serial","DatePicker","allowKeyboardControl","animateYearScrolling","Category","categoryRequest","setMessage","setCategory","Close_default","console","log","InputLabelProps","shrink","defaultValue","useStyles","container","flexWrap","textField","marginRight","marginBottom","dense","spacing","menu","dialog","select","background","left","addCategory","right","transform","outline","&:focus","categoryError","fontSize","Add","masterCodeRequest","initError","classes","setOption","input","setInput","categoryHandle","setCategoryHandler","categoryValue","setCategoryValue","handleChangeText","Add_objectSpread","loadOption","inputValue","updateErrorState","holder","Summary_Category","paperScrollPaper","dist_react_select_browser_esm","cacheOptions","defaultOptions","loadOptions","onCreateOption","productCodeRequest","supplierRequest","openAddProduct","setOpenAddProduct","modalAdd","inputAsync","model","handleProductAdd","Summary_Add","setModalAdd","async_dist_react_select_browser_esm","classNamePrefix","productInput","react_select_browser_esm","isDisabled","Today","Show","modalShow","setModalShow","initModalEdit","Edit","preProduct","setPreProduct","preSupplier","setPreSupplier","loadPreValues","find","element","TableOrder","handleToggle","TableOrder_objectSpread","anchor","transformOrigin","primary","ListItemSecondaryAction","inputProps","newFileName","dragDiv","uploading","percent","dragAndDrop","processFileList","files","classList","dataTransfer","extension","split","pop","generateRandomFileName","Components_Upload_objectSpread","uploadToServer","file","tus","endpoint","retryDelays","resume","chunkSize","metadata","filename","filetype","onError","onProgress","bytesUploaded","bytesTotal","toFixed","onSuccess","start","slice","lastIndexOf","Math","random","substring","LinearProgress","onDragEnter","onDragLeave","onDragOver","onDrop","click","accept","productsRequest","initErrroMessage","initProductInput","initFilter","initParams","_React$useState15","_React$useState16","_React$useState17","_React$useState18","productCodeParam","_React$useState19","_React$useState20","tableAnchor","setTableAnchor","_React$useState21","_React$useState22","tableOpen","setTableOpen","_React$useState23","_React$useState24","setProductInput","_React$useState25","_React$useState26","supplierState","productRedux","scroll","scrollY","selector","getElementsByClassName","changeAll","top","togglePointerEvents","Products_objectSpread","Products_TableOrder","Products_Edit","Products_Add","Products_Show","Components_Upload","Fab","FilterList","ViewColumn","asc","Products_Filter","today","initModalAdd","CloudUpload","colSpan","pams","onChangeRowsPerPage","paran","ActionsComponent","TablePaginationActions","Reports","setRowsPerPage","Settings","Suppliers_Filter_objectSpread","supplierInput","initSupplierError","initSupplier","setSupplierInput","supplierAction","Suppliers_objectSpread","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Filter","param","Users_Filter_objectSpread","initUsers","setUsers","usersState","toArray","Users_objectSpread","Users_Show","Users_Edit","Users_Add","Users_Filter","initModalShow","NotFound","href","masterCodesRequest","categoryPreValue","setCategoryPreValue","Edit_objectSpread","Summary","masterCode","openEdit","setOpenEdit","handleAdd","Summary_Edit","ComponentMiddleware","finish","setFinish","exist","useraccount","react_router","to","setToken","_check","Components_Login","Navigation","path","Component","middleware","exact","LoginMiddleware","Error","Navigations","react_router_dom","Main_Navigation","render","Routes_Error","initialState","NavigationTitle_objectSpread","Reducers_Products_objectSpread","Reducers_Suppliers_objectSpread","Reducers_Users_objectSpread","Search_objectSpread","status_objectSpread","appReducer","combineReducers","rootReducer","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","compose","applyMiddleware","App","es","build","maxSnack","useUtils_cfb96ac9","Routes","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9a926f4.chunk.js","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\n\n\nconst withRouterInnRef = (WrappedComponent:any) => {\n\n    const InnerComponentWithRef = (props:any) => {\n        const {forwardRef, ...rest} = props;\n        return <WrappedComponent {...rest} ref={forwardRef} />;\n    }\n\n    const ComponentWithRef = withRouter(InnerComponentWithRef);\n\n    return React.forwardRef((props:any,ref:any)=>{\n        return <ComponentWithRef {...props} forwardRef={ref} />;\n    })\n\n}\n\nexport default withRouterInnRef;","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n    master      : 'product-master-list/',\n    category    : 'category/',\n    logs        : 'logs/',\n    status      : 'status/',\n    notification: 'notification/',\n}\n\nconst Url = {\n    //auth\n    login     :   server_url+prefix.auth+'login',\n    logout    :   server_url+prefix.auth+'logout',\n    refresh   :   server_url+prefix.auth+'refresh',\n    check     :   server_url+prefix.auth+'check',\n\n    //user\n    user       : server_url+prefix.user,\n    products   : server_url+prefix.products,\n    suppliers  : server_url+prefix.supplier,\n    productMasterList : server_url+prefix.master,\n    category   : server_url+prefix.category,\n    logs       : server_url+prefix.logs,\n    status     : server_url+prefix.status,\n    notification:server_url+prefix.notification,\n}\n\nexport default Url;\n","import withRouterInnerRef from '../WithRouterInnerRef';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport React from 'react';\nimport {Format} from './StaticMethods';\nimport {useSnackbar} from 'notistack'\nimport { Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\n\n\ninterface credential{\n    username : string,\n    password : string,\n}\n\n\n\nconst Auth = (props:any) => {\n    \n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        async login(credential:credential){\n           \n            let format:Format = {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n\n            await axios({\n                method  :   \"POST\",\n                url     :   Url.login,\n                headers :   {\n                    'Content-Type' :    'application/json',\n                    'Accept'       :    'application/json',\n                },\n                data    :   {\n                    username : credential.username,\n                    password : credential.password,\n                }\n            }).then( response => {\n                format = {\n                    network_error : false,\n                    status        : response.status,\n                    data          : response.data,\n                }\n            }).catch( async (error) =>{\n                if(error.response){\n                    format = {\n                        network_error : false,\n                        status        : error.response.status,\n                        data          : error.response.data,\n                    }\n                }else{\n                    format.network_error = true;\n                }\n            });\n\n            if(format.status !== 200 && format.status !== 401 || format.network_error ){\n                enqueueSnackbar(\n                    <div \n                        dangerouslySetInnerHTML={{\n                            __html: 'Something wrong with the server. Please try again later.<br />'\n                    }} />\n                    ,{\n                    variant:\"error\",\n                    autoHideDuration : 10000,\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action:action\n                });\n            }\n\n            return format;\n        }\n\n    }));\n\n    return \"\";\n}\n\nexport default withRouterInnerRef(Auth);","import axios from 'axios';\nimport Url from 'Services/ServerUrl';\nimport { Token } from 'Services';\n\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface request{\n    url     :   string,\n    header  ?:   any,\n    data    ?:   {},\n    params  :   boolean,\n    method  :   'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE';\n}\n\n\nexport const request = async(data:request) =>{\n\n\n    let header = {};\n    let format:Format = {\n        network_error : false,\n        status        : 0,\n        data          : '',\n    }\n\n    if(data.header !== undefined){\n        header = data.header;\n    }else{\n        header = {\n            'Content-Type'  :   'application/json',\n            'Accept'        :   'application/json',\n            'Authorization' :   'Bearer '+Token.get(),\n        }\n    }\n\n    await axios({\n        method  :   data.method,\n        url     :   data.url,\n        headers :   header,\n        params  :   data.params ? data.data : '',\n    }).then( response => {\n        format.status = response.status;\n        format.data = response.data;    \n    }).catch( async (error) =>{\n        format = await handleError(error,data);\n    });\n    \n    return format;\n\n}\n\n\nconst handleError = async (error:any,request:request) =>{\n    \n    let format:Format = {\n        network_error : false,\n        status        : 0,\n        data          : '',\n    }\n\n    if(!error.response){\n        format.network_error = true;    \n        return format;\n    }\n\n\n    const recall = async() => {\n\n\n        let header = {};   \n        let ret = {};\n        \n        if(request.header !== undefined){\n            header = request.header;\n        }else{\n            header = {\n                'Content-Type'  :   'application/json',\n                'Accept'        :   'application/json',\n                'Authorization' :   'Bearer '+Token.get(),\n            }\n        }\n        await axios({\n            method  :   request.method,\n            url     :   request.url,\n            headers :   header,\n            params  :   request.params ? request.data : '',\n        }).then( response => {\n            ret = {\n                success : true,\n                response: response\n            };\n        }).catch( error =>{\n            ret = {\n                success : false,\n                response: error,\n            };\n        });\n\n        return ret;\n    }\n\n    const refresh = async () =>{\n\n        let ret = {};\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   {\n                'Content-Type'  :   'application/json',\n                'Accept'        :   'application/json',\n                'Authorization' :   'Bearer '+Token.get(),\n            },\n        }).then( response => {\n            ret = {\n                success:true,\n                response :response,\n            }\n        }).catch( error =>{\n            ret = {\n                success:false,\n                response :error,\n            }\n        })\n\n        return ret;\n    }\n\n\n    switch(error.response.status){\n        case 429:\n            let counter = 0;\n            while(counter<3){\n                let a:any;\n                setTimeout(async () => {\n                    a = await recall();\n                    if(a.success){\n                        format.status = a.response.status;\n                        format.data = a.response.data;\n                        return format;\n                    }else{\n                        if(a.response && a.response.response.status === 429)\n                            counter = counter + 1;\n                        else{\n                            format.network_error = false;\n                            return format;\n                        }\n                    }\n                }, 5000);\n            }\n            format.network_error = false;\n            return format;\n        case 401:\n            let a:any = await refresh();\n\n\n            if(a.success){\n\n                // console.log(a.response.data.token);\n                Token.save(a.response.data.token);\n\n                let b:any = await recall();\n                if(b.success){\n                    format.status = b.response.status;\n                    format.data = b.response.data;\n                    return format;\n                }else{\n                    format.network_error = false;\n                    return format;\n                }\n            }else{\n                format.network_error = false;\n                return format;\n            }\n        default : \n            format.data = error.response.data;\n            format.network_error = false;\n            format.status =error.response.status;\n            return format;\n    }\n}","// import Cookies from 'universal-cookie';\n// import { Requests } from 'Services';\n\n// export default class Token{\n    \n//     public static save(token:any):void{\n//         let a = new Date();\n//         a.setMinutes(a.getMinutes() + 120);\n\n//         const cookies = new Cookies();\n//         cookies.set('token',token,{\n//             expires: a,\n//             // maxAge : 1800,\n//         })\n//     }\n\n//     public static update():void{\n//         const cookies = new Cookies();\n\n//         const token = cookies.get('token');\n//         this.save(token);\n//     }\n\n//     public static remove():void{\n//         const cookies = new Cookies();\n//         cookies.remove('token');\n//     }\n\n//     //check and update time expiration of the token\n//     public static get():any{\n\n//         if(Token.exist()){\n//             this.update();\n//             return new Cookies().get('token');\n//         }\n        \n//         return null;\n//     }\n\n//     //check without updating token\n//     public static exist():any{\n//         const cookies = new Cookies();\n//         const token = cookies.get('token');\n \n//         if(token === undefined || token === null || token === ''){\n//             return false;\n//         }\n\n//         return true;\n//     }\n\n//     /**\n//      * Check token's validity and refreshes if invalid\n//      * \n//      * @returns bool\n//      */\n\n//     public static async valid(){\n\n//         if(Token.exist()){ \n//             const a:any = await Requests.Auth.check();\n\n//             if(a.network_error || a.status !== 200 ){\n//                 this.remove();\n//                 return false;\n//             }else{\n//                 this.update();\n//                 return true;\n//             }\n\n//         }\n//         return false;\n//     }\n\n// }\n\n\nimport Cookies from 'universal-cookie';\n// import { Requests } from 'Services';\n\nexport default class Token{\n        \n    public static save(token:any):void{\n        // this.remove();\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 32); //1440 1 day\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    public static get():any{\n        let token = new Cookies().get('token');\n\n        if(token !== '' || token !== null){\n            this.update();\n        }\n        return token;\n    }\n\n    public static exist():any{  \n        const cookies = new Cookies();\n        const token = cookies.get('token');\n\n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n        return true;\n    }\n\n}","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = {\n    data    : 'data',\n    table   : 'table',\n    filter  : 'filter',\n};\nexport const Suppliers          = {\n    data    : \"Suppliers\",\n    table   : \"table\",\n    filter  : \"filter\",\n};\n\n\nexport const Users              = {\n    data    : \"Users\",\n    filter  : \"filter\",\n};\n\n\nexport const MasterCodes        = \"MasterCodes\";\nexport const Category           = \"Category\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\nexport const status = {\n    error       : 'error',\n    loggedIn    : 'loggedIn', \n}","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\ntype control = \"home\" | \"products\" | \"product_master_file_maintenance\" | \"suppliers\" | \"users\" | \"reports\";\n\ninterface Navigation {\n    title   ?: string,\n    control : control,\n}\n\nexport const NavigationTitle = (a:Navigation) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr,status } from './Types';\nimport { Requests, Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr.data,\n                payload : '',\n            });\n\n\n\n            // await Requests.Products.show(params).then((response)=>dispatch({\n            //     type    : pr.data,\n            //     payload : response,\n            // }));\n\n\n\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({\n                    type    : status.loggedIn,\n                    payload : false,\n                })\n                return;\n            }\n\n            const a = await request({\n                url     : Url.products+'?page='+params.page+'&per_page='+params.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n\n\n            if (a.status === 200) {\n                dispatch({\n                    type    : pr.data,\n                    payload : a,\n                });\n                return;\n            }\n\n            if(a.network_error){\n                dispatch({\n                    type    : status.error,\n                    payload : true,\n                });\n\n                return\n            }\n\n        }\n}\n\nexport const ProductsTable = (data:{}) => {\n    return async (dispatch:any) => {\n        dispatch({type    : pr.table,payload : data});\n    }\n}\n\nexport const ProductsFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.filter,payload:filter});\n    }\n}","import { Suppliers as sp,status } from './Types';\nimport { Requests, Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp.data,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            // dispatch({\n            //     type    : sp,\n            //     payload : await Requests.Suppliers.show(params),\n            // });\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({\n                    type    : status.loggedIn,\n                    payload : false,\n                })\n                return;\n            }\n\n            const a = await request({\n                url     : Url.suppliers+'?page='+params.page+'&per_page='+params.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n\n\n            if (a.status === 200) {\n                dispatch({\n                    type    : sp.data,\n                    payload : a,\n                });\n                return;\n            }\n\n            if(a.network_error){\n                dispatch({\n                    type    : status.error,\n                    payload : true,\n                });\n\n                return\n            }\n            \n        }\n}\n\nexport const SuppliersTable = (data:{}) => {\n    return async (dispatch:any) => {\n        dispatch({type    : sp.table,payload : data});\n    }\n}\n\nexport const SuppliersFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:sp.filter,payload:filter});\n    }\n}","import { Users as pr, status } from './Types';\nimport { Token } from '../../Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr.data,\n                payload : '',\n            });\n\n\n\n            // await Requests.User.show(params).then((response)=>dispatch({\n            //     type    : pr,\n            //     payload : response,\n            // }));\n\n            const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({\n                    type    : status.loggedIn,\n                    payload : false,\n                })\n                return;\n            }\n\n            const a = await request({\n                url     : Url.user+'?page='+params.page+'&per_page='+params.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n\n\n            if (a.status === 200) {\n                dispatch({\n                    type    : pr.data,\n                    payload : a,\n                });\n                return;\n            }\n\n            if(a.network_error){\n                dispatch({\n                    type    : status.error,\n                    payload : true,\n                });\n\n                return\n            }\n\n        }\n}\n\nexport const UsersFilter = (filter:boolean) => {\n    return async (dispatch:any) => {    \n        dispatch({type:pr.filter,payload:filter});\n    }\n}","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    // switch (params.target){\n    //     case \"users\" :\n    //         return async (dispatch:any) => {\n\n    //             dispatch({\n    //                 type    : Users,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.User.search(params.query).then((response)=>dispatch({\n    //                 type    : Users,\n    //                 payload : response,\n    //             }));\n    //         }\n\n    //     case \"products\":\n    //         return async (dispatch:any) => {\n    //             dispatch({\n    //                 type    : Products,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.Products.search(params.query).then((response)=>dispatch({\n    //                 type    : Products,\n    //                 payload : response,\n    //             }));\n    //         }\n    //     case \"suppliers\":\n    //         return async (dispatch:any) => {\n    //             dispatch({\n    //                 type    : Suppliers,\n    //                 payload : '',\n    //             });\n\n    //             await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n    //                 type    : Suppliers,\n    //                 payload : response,\n    //             }));\n    //         }\n    // }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us, MasterCodes as ma, status } from './Types';\n// import { Requests } from '../../Services';\nimport {request} from 'Services/Requests/StaticMethods';\nimport { Token } from 'Services';\nimport Url from 'Services/ServerUrl';\n\ntype component = \"supplier\" | \"product\" | \"user\" | \"master\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n    let params = '';\n    Object.keys(filter).forEach( (a:any) => {\n        if(filter[a].key){\n            if(params === ''){\n                params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n            }else{\n                params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n            }\n        }\n    });\n\n    params = params+\"&page=\"+extra_params.page+\"&per_page=\"+extra_params.per_page;\n        \n\n    switch(component){\n        case \"supplier\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : sp.data,\n                    payload : '',\n                });\n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({\n                        type    : status.loggedIn,\n                        payload : false,\n                    })\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.suppliers+'?filter=true&'+params,\n                    method  : 'GET',\n                    params  : false,\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({\n                        type    : sp.data,\n                        payload : a,\n                    });\n                    return;\n                }\n\n                if(a.network_error){\n                    dispatch({\n                        type    : status.error,\n                        payload : true,\n                    });\n\n                    return\n                }\n    \n\n                \n            }\n        case \"product\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : pr.data,\n                    payload : '',\n                });\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({\n                        type    : status.loggedIn,\n                        payload : false,\n                    })\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.products+'?filter=true&'+params,\n                    method  : 'GET',\n                    params  : false,\n                })\n\n                \n                if (a.status === 200) {\n                    dispatch({\n                        type    : pr.data,\n                        payload : a,\n                    });\n                    return;\n                }\n\n                if(a.network_error){\n                    dispatch({\n                        type    : status.error,\n                        payload : true,\n                    });\n\n                    return\n                }\n            }\n        case \"user\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : us.data,\n                    payload : '',\n                });\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({\n                        type    : status.loggedIn,\n                        payload : false,\n                    })\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.user+'?filter=true&'+params,\n                    method  : 'GET',\n                    params  : false,\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({\n                        type    : us.data,\n                        payload : a,\n                    });\n                    return;\n                }\n\n                if(a.network_error){\n                    dispatch({\n                        type    : status.error,\n                        payload : true,\n                    });\n\n                    return\n                }\n            }\n        case \"master\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : ma,\n                    payload : '',\n                });\n    \n\n                const token = Token.get();\n                if(token === '' || token === null){\n                    dispatch({\n                        type    : status.loggedIn,\n                        payload : false,\n                    })\n                    return;\n                }\n\n                const a = await request({\n                    url     : Url.productMasterList+'?filter=true&'+params,\n                    method  : 'GET',\n                    params  : false,\n                })\n\n\n                if (a.status === 200) {\n                    dispatch({\n                        type    : ma,\n                        payload : a,\n                    });\n                    return;\n                }\n\n                if(a.network_error){\n                    dispatch({\n                        type    : status.error,\n                        payload : true,\n                    });\n\n                    return\n                }\n            }\n    }\n\n        \n}\n","import { MasterCodes as MC,status } from './Types';\nimport { Token } from 'Services';\nimport { request } from 'Services/Requests/StaticMethods';\nimport Url from 'Services/ServerUrl';\n\n\ninterface param{\n    per_page ?:number,\n    page     ?:number,\n}\n\n\nexport const MasterCodes = (params:param) => {\n    return async (dispatch:any) => {\n\n\n        dispatch({\n            type    : MC,\n            payload : '',\n        });\n    \n    \n        const token = Token.get();\n            if(token === '' || token === null){\n                dispatch({\n                    type    : status.loggedIn,\n                    payload : false,\n                })\n                return;\n            }\n\n            const a = await request({\n                url     : Url.productMasterList+'?page='+params.page+'&per_page='+params.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n\n\n            if (a.status === 200) {\n                dispatch({\n                    type    : MC,\n                    payload : a,\n                });\n                return;\n            }\n\n            if(a.network_error){\n                dispatch({\n                    type    : status.error,\n                    payload : true,\n                });\n\n                return\n            }\n    }\n}\n","import { status as stat } from './Types';\n\nexport const loggedIn = (a:boolean) => {\n    return (dispatch:any) => {\n        dispatch({\n            type    : stat.loggedIn,\n            payload : a\n        });\n    }\n}\n\nexport const error = (a:boolean) => {\n    return (dispatch:any) => {\n        dispatch({\n            type    : stat.loggedIn,\n            payload : a\n        });\n    }\n}","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\nconst User = (props:any):any => {\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) => {\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async(user?:Show) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?page='+user.page+'&per_page='+user.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n\n        get : async(id:number) => {\n            const token = Token.get();\n\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+id,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n\n        update : async (user:Users) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+user.id,\n                method  : 'PATCH',\n                params  : true,\n                data    : user\n            })\n            return processData(format);\n        },\n\n        add : async (user:Users) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user,\n                method  : 'POST',\n                params  : true,\n                data    : user\n            })\n            return processData(format);\n        },\n\n        search : async(search:string) =>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?search='+search,\n                method  : 'GET',\n                params  : false,\n            })\n        },\n\n        filter : async (filter:any) => {\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.user+'?filter=true&'+params,\n                method  : 'GET',\n                params  : false,\n            })\n        }\n\n    }));\n    return null;\n}\n\nexport default withRouterInnerRef(User);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product                     : string,\n    // product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n    search ?: string,\n}\n\n\nconst Products = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show    : async(user?:showProduct)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.products,\n                method  : 'GET',\n                params  : true,\n                data    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.user+id,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n        update  : async(product:Products) =>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products+product.id,\n                method  : 'PATCH',\n                params  : true,\n                data    : product\n            })\n            return processData(format);\n        },\n\n        add  : async(product:Products) =>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products,\n                method  : 'POST',\n                params  : true,\n                data    : product\n            })\n            return processData(format);\n        },\n\n        search  : async(search:string) =>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     :  Url.products+'?search='+search,\n                method  : 'GET',\n                params  : false\n            })\n            return processData(format);\n        },\n\n\n        filter  : async(filter:any)=>{\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.products+'?filter=true&'+params,\n                method  : 'GET',\n                params  : false,\n            })\n        },\n\n    }));\n    \n    return null;\n    \n}\n\nexport default withRouterInnerRef(Products);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n    search  ?: string\n}\n\n\nconst Suppliers = (props:any):any =>{\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async(user?:showSupplier) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers,\n                method  : 'GET',\n                params  : true,\n                data    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+id,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n\n        update : async (supplier:Supplier) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+supplier.id,\n                method  : 'PATCH',\n                params  : true,\n                data    : supplier\n            })\n            return processData(format);\n        },\n\n        add : async (supplier:Supplier) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers,\n                method  : 'POST',\n                params  : true,\n                data    : supplier\n            })\n            return processData(format);\n        },\n\n        search : async(search:string) =>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+'?search='+search,\n                method  : 'GET',\n                params  : false,\n            })\n        },\n\n\n        filter : async (filter:any) => {\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.suppliers+'?filter=true&'+params,\n                method  : 'GET',\n                params  : false,\n            })\n        }\n\n\n    }));\n\n    return null\n}\n\nexport default withRouterInnerRef(Suppliers);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface showMasterCodes{\n    page : number,\n    per_page : number,\n    search ?: any,\n}\n\nconst MasterCodes = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        show    : async(user:showMasterCodes)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList,\n                method  : 'GET',\n                params  : true,\n                data    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+id,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n        update  : async(up:any)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+up.id,\n                method  : 'PATCH',\n                params  : true,\n                data    : up\n            })\n            return processData(format);\n        },\n        add     : async(pml:any)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList,\n                method  : 'POST',\n                params  : true,\n                data    : pml\n            });\n            return processData(format);\n        },\n        filter  : async(filter:any)=>{\n            const token = Token.get();\n            let params = new URLSearchParams(filter).toString();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.productMasterList+'?filter=true&'+params,\n                method  : 'GET',\n                params  : false,\n            })\n        },\n    }));    \n\n    return null;\n}\n\nexport default withRouterInnerRef(MasterCodes);","import React from 'react';\nimport withRouterInnerRef from '../WithRouterInnerRef';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {request,Format} from './StaticMethods';\nimport {error as errorAction} from 'Redux/Actions';\nimport {useDispatch} from 'react-redux';\n\n\ninterface show{page : number,per_page : number,search?:string};\ninterface add{name : string}\n\n\nconst Category = (props:any):any => {\n    \n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(errorAction(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        show : async(user:show) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category,\n                method  : 'GET',\n                params  : true,\n                data    : user,\n            })\n            return processData(format);\n        },\n\n        get : async(user:number) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category+user,\n                method  : 'GET',\n                params  : false\n            })\n            return processData(format);\n        },\n        add : async(pml:add) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.category,\n                method  : 'POST',\n                params  : true,\n                data    : pml,\n            })\n            return processData(format);\n        },\n    }));\n\n    return null;\n\n}\n\n\nexport default withRouterInnerRef(Category);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\nconst Logs = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        show: async(logs:show) => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.logs+'?page='+logs.page+'&per_page='+logs.per_page,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        }\n    }));\n\n    return null;\n\n\n}\n\n\nexport default withRouterInnerRef(Logs);","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\n\nconst Status = (props:any):any => {\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n\n        show : async() => {\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.status,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        }\n\n    }));\n\n    return null;\n}\n\nexport default withRouterInnerRef(Status);\n\n\n","import React from 'react';\nimport {request,Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport {useDispatch} from 'react-redux';\nimport {error} from 'Redux/Actions';\nimport withRouterInnerRef from '../WithRouterInnerRef';\n\ninterface showMasterCodes{\n    page : number,\n    per_page ?: number,\n}\n\nconst Notification = (props:any):any => {\n\n    const dispatch = useDispatch();\n\n    const processData = (data:Format) =>{\n        if(data.network_error){\n            dispatch(error(true));\n            return;\n        }else{\n            return data;\n        }\n    }\n\n    React.useImperativeHandle(props.request,()=>({\n        \n        show    : async(user:showMasterCodes)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification,\n                method  : 'GET',\n                params  : true,\n                data    : user,\n            })\n            return processData(format);\n        },\n\n        get     : async(id:number)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification+id,\n                method  : 'GET',\n                params  : false,\n            })\n            return processData(format);\n        },\n\n        add     : async(pml:any)=>{\n            const token = Token.get();\n            let format:Format = {\n                network_error : false,\n                status        : 0,\n                data          : '',\n            }\n            if(token === '' || token === null){\n                props.history.push('/login');\n                return;\n            }\n            format = await request({\n                url     : Url.notification,\n                method  : 'POST',\n                params  : true,\n                data    : pml\n            });\n            return processData(format);\n        }\n    }));\n\n    return null;\n}\n\nexport default withRouterInnerRef(Notification);","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch} from 'react-redux';\nimport { UserAccount as User,loggedIn } from 'Redux/Actions';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const request:any = React.useRef();\n    const userRef:any = React.useRef();\n\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const dispatch = useDispatch();\n\n    \n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await request.current.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n\n                    const users =await userRef.current.get(jwt.sub);\n                    checkUser(users);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    // setError({\n                    //     status : true,\n                    //     message: \"Something wrong with the server, please try again later!!!!\"\n                    // });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            // setError({\n            //     status : true,\n            //     message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            // });\n        }\n\n        return;\n    }\n\n\n    const checkUser = async (user:Requests.Format) => {\n\n        if(user.status === 200){\n            if(!user.data.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            \n            const id:any = jwt_decode(Token.get());\n            \n            // const users:Requests.Format = await Requests.User.get(id.sub);\n            const users:any = await userRef.current.get(id.sub);\n        \n\n            if(users.status === 200){\n                dispatch(User(users.data.data));\n                dispatch(loggedIn(true));\n            }\n\n\n            const returnUrl = props.location.state;\n\n            \n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            \n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            \n            <Requests.Auth request={request} />\n            <Requests.User request={userRef} />\n            \n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, Select, MenuItem, FormControlLabel, DialogActions } from '@material-ui/core';\nimport { Dropbox, VanUtility, Account } from 'mdi-material-ui';\nimport { ArrowForward } from '@material-ui/icons';\nimport {withRouter, Switch} from 'react-router-dom';\nimport { Requests } from 'Services';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport moment from 'moment';\nimport {Suppliers,Users,Products} from \"Redux/Actions\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Chart from 'react-google-charts';\n\nconst Admin = ( props :any ) => {\n\n    const logsRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n\n    const dispatch = useDispatch();\n    const users = useSelector((state:any) => state.Users.data); \n    const products = useSelector((state:any) => state.Products.data); \n    const suppliers = useSelector((state:any) => state.Suppliers.data);\n    const [status,setStatus] = React.useState();\n\n    React.useEffect(()=>{\n        requestLog();\n    },[]);\n\n\n    const requestLog = () => {\n\n        dispatch(Suppliers({page:1,per_page:10}));\n        dispatch(Users({page:1,per_page:10}));\n        dispatch(Products({page:1,per_page:10}));\n\n        setData(null);\n        // const a = Requests.Logs.show({per_page:rowsPerPage,page:page}).then((response:any)=>{\n        //     setData(response.data);\n        // });\n\n        const a = logsRequest.current.show({per_page:rowsPerPage,page:page}).then((response:any)=>{\n            setData(response.data);     \n        });\n        \n\n\n        //status\n\n        // Requests.Status.show().then((response:any)=>{\n        //     // setStatus(response.data);\n\n        //     setStatus([\n        //         ['Task','Products Status'],\n        //         ['New',response.data.status.New],\n        //         ['Replaced',response.data.status.Replaced],\n        //         ['Returned',response.data.status.Returned],\n        //         ['Repaired',response.data.status.Repaired],\n        //     ]);\n        // });\n\n        statusRequest.current.show().then((response:any)=>{\n            // setStatus(response.data);\n\n            setStatus([\n                ['Task','Products Status'],\n                ['New',response.data.status.New],\n                ['Replaced',response.data.status.Replaced],\n                ['Returned',response.data.status.Returned],\n                ['Repaired',response.data.status.Repaired],\n            ]);\n        });\n    }\n\n    // console.log(status);\n\n\n    const [page, setPage] = React.useState(1);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [data, setData] = React.useState();\n    const [open, setOpen] = React.useState(false);\n    const [modal,setModal] = React.useState();\n    const [target,setTarget] = React.useState();\n\n\n    const handleChangePage = (event:any, newPage:any) => {\n        setPage(newPage+1);\n        \n        \n\n        //there is a delay when updating state. so instead of {per_page:rowsPerPage,page:page}, we replaced {per_page:rowsPerPage,page:newPage+1} for instant update\n        setData(null);\n        // const a = Requests.Logs.show({per_page:rowsPerPage,page:newPage+1}).then((response:any)=>{\n        //     setData(response.data);\n        // });\n\n        logsRequest.current.show({per_page:rowsPerPage,page:newPage+1}).then((response:any)=>{\n            setData(response.data);\n        });\n\n    };\n    \n    const handleChangeRowsPerPage = (event:any) => {\n        if(event.target.value !== rowsPerPage ){\n            setRowsPerPage(event.target.value);\n            setPage(1);\n\n            setData(null);\n            // const a = Requests.Logs.show({per_page:event.target.value,page:1}).then((response:any)=>{\n            //     setData(response.data);\n            // });\n            logsRequest.current.show({per_page:event.target.value,page:1}).then((response:any)=>{\n                setData(response.data);\n            });\n        }        \n    };\n\n    \n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModal = (data:any,target:any) => {\n        setModal(data);\n        setOpen(true);\n        setTarget(target);\n    }\n\n    const dataModal = () => {\n\n        const ProductMasterList = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.category.name}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n        \n        const user = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">User Name</TableCell>\n                        <TableCell >{data.username}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Name</TableCell>\n                        <TableCell >{data.first_name+\" \"+data.last_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Company</TableCell>\n                        <TableCell >{data.company}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Level</TableCell>\n                        <TableCell >{data.level.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Activated</TableCell>\n                        <TableCell >{parseInt(data.activated) === 1 ? \"Yes\" : \"No\"}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const supplier = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Name</TableCell>\n                        <TableCell >{data.supplier_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">TIN</TableCell>\n                        <TableCell >{data.tin}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Address</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact Person</TableCell>\n                        <TableCell >{data.contact_person}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact No.</TableCell>\n                        <TableCell >{data.contact_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const product = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product.product_name}</TableCell>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Serial Number</TableCell>\n                        <TableCell >{data.serial_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Date</TableCell>\n                        <TableCell >{moment(data.delivery_date).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty</TableCell>\n                        <TableCell >{data.warranty+\" Month(s)\"}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty Start</TableCell>\n                        <TableCell >{moment(data.warranty_start).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">End Date</TableCell>\n                        <TableCell >{moment(data.warranty_end).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Doc</TableCell>\n                        <TableCell >{data.reference_delivery_document}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Status</TableCell>\n                        <TableCell >{data.status.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Remarks</TableCell>\n                        <TableCell >{data.remarks}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n\n        return (\n            <React.Fragment>\n            {\n                modal ?\n                    <Dialog\n                        // fullWidth={fullWidth}\n                        // maxWidth=\"sm\"\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"max-width-dialog-title\"\n                        className=\"modal-history\"\n                        disablePortal = {true}\n                    >\n                        <DialogTitle>History</DialogTitle>\n                        <DialogContent>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {\n                                        target === \"Product\"  ? product(modal)    :\n                                        target === \"Supplier\" ? supplier(modal)   : \n                                        target === \"User\"     ? user(modal)       : \n                                        target === \"ProductMasterList\" ? ProductMasterList(modal) : \"\"\n                                    }\n                                </TableBody>\n                            </Table>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => setOpen(false)}>\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog> \n                :\n\n                ''\n            }\n            </React.Fragment>\n\n            \n        );\n    }\n\n\n    \n\n    \n\n\n\n    return(\n        <div>\n\n            <Requests.Logs request={logsRequest} />\n            <Requests.Status request ={statusRequest} />\n\n            {dataModal()}\n            <div className=\"justify-content-center row\" style={{marginTop:'120px'}}>\n                <div className=\"col-lg text-center iconButton\">\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total Products</div>\n                        <div className=\"amount-box\">{products  ? products.data.meta.total : 0 }</div>\n                        {/* <div className=\"info-box\">more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/products')}>More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\">\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\">Total Suppliers</div>\n                        <div className=\"amount-box\">{suppliers  ? suppliers.data.meta.total : 0 }</div>\n                        {/* <div className=\"info-box\">more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/suppliers')} >More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\" >\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Account className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total User</div>\n                        <div className=\"amount-box\">{users  ? users.data.meta.total : 0 }</div>\n                        {/* <div className=\"info-box\"> more info <ArrowForward /> </div> */}\n                        <Button size=\"small\" className=\"info-box\" variant=\"contained\" color=\"primary\" onClick={ () => props.history.push('/users')}>More Info <ArrowForward /></Button>\n                    </Paper>\n                </div>\n            </div>\n            <Paper className=\"admin-pie-graph col-6 offset-3\">\n                <Chart\n                    width={'100%'}\n                    height={'100%   '}\n                    chartType=\"PieChart\"\n                    loader={<div>Loading Chart</div>}\n                    data={status}\n                    options={{\n                        title: 'Products Status',\n                        // Just add this option\n                        is3D: true,\n                    }}\n                    rootProps={{ 'data-testid': '2' }}\n                />\n            </Paper>\n\n            <Paper style={{whiteSpace:'nowrap'}} className=\"paper\">\n                <Typography variant=\"subtitle1\" component=\"h6\" style={{padding:'10px',fontWeight:'bolder',textTransform:'uppercase'}}>\n                    User Activities\n                </Typography>\n                <div style={{overflow:'auto'}}>\n                    <Table size=\"small\">\n                        <TableHead className=\"user-logs-table-head\">\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell>Name</TableCell>\n                                <TableCell>Action</TableCell>\n                                <TableCell>Target</TableCell>\n                                <TableCell>Previous</TableCell>\n                                <TableCell>Update</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                data ?\n                                data.data.map( (value:any,key:any) =>\n                                    <TableRow key={value.id} hover>\n                                        <TableCell>{moment(value.updated_at).format('ll, h:mm a')}</TableCell>\n                                        <TableCell style={{textTransform:'uppercase'}}>{value.user.first_name+\" \"+value.user.last_name}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.action}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.target}</TableCell>\n                                        <TableCell>\n                                            {\n                                                value.previous ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.previous,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                value.update ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.update,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                \n                                :\n                                skeletonTable()\n                            }\n                            \n                        </TableBody>\n                    </Table>\n                </div>\n                <Button onClick={()=>props.history.push('/reports')} size=\"small\" variant=\"contained\" color=\"primary\" className=\"footer-button\">\n                    More info <ArrowForward />\n                </Button>\n                {/* <TablePagination\n                    rowsPerPageOptions={[10,25,50,100]}\n                    component=\"div\"\n                    count={data ? data.meta.total : 10}\n                    rowsPerPage={rowsPerPage}\n                    page={data ? page-1 : 0}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                /> */}\n            </Paper>\n        </div>\n    );\n} \n\nexport default withRouter(Admin);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\n// import { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\nimport { Paper } from '@material-ui/core';\nimport Admin from './Admin';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle({title:'Home', control:'home'}));\n    },[dispatch])\n\n\n    return(\n        <div>\n            { user.level === 1 ?\n                <Admin />\n            :\n                <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n                    <React.Fragment>\n                        <div className=\"justify-content-center row\">\n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                                <Paper>\n                                    <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                                    <div className=\"col\">Products</div>\n                                </Paper>\n                            </div>\n                            \n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                                <Paper>\n                                    <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                                    <div className=\"col\">Suppliers</div>\n                                </Paper>\n                            </div>\n                            \n                        </div>\n                    </React.Fragment>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\n// import './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n    const userRequest:any = React.useRef();\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await userRequest.current.update(usersInput).then( \n            async (response:any) =>{\n                if(response.status === 200){\n                    enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                    setModalEdit(false);\n\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const users =await userRequest.current.get(jwt.sub);\n                    dispatch(UserAccount(users));\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"xs\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Update Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n                            <form className =\"form-group edit-profile\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"custom-col col-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder title-profile\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8 input-profile\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            <Requests.User request={userRequest} />\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography className=\"nav-title\" variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* {props.menu_title} */}\n\n                        <img src=\"/img/ideaserv.png\" alt=\"Ideaserv System Inc\" />\n                        <div className=\"nav-desc\">Product Inquiry System</div>\n                    </Typography>\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/user.png\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/user.png\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover, makeStyles, Theme, createStyles, Fade, Paper } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\nimport Popper,{ PopperPlacementType } from '@material-ui/core/Popper';\n\n\n\nconst styles = {\n    hidden : {\n        visibility:'hidden',\n    },\n    inherited : {\n        position : 'inherit',\n    },\n    shadowed : {\n        boxShadow : '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\n    },\n    icon : {\n        backgroundColor : '#3f50b5',\n        color           : 'white',\n        borderRadius    : '20px',\n        padding         : '2px',\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position : 'inherit'\n        },\n        list : {\n            root : {\n                visibility : 'hidden',\n                '&:hover' : {\n                    visibility : 'visible'\n                }\n            }\n        }\n\n    }),\n);\n\nconst SidebarList = (props:any) => {\n    const control = useSelector( (state:any) => state.NavigationTitle.control);\n    // const classes = useStyles(props);\n\n    const [popperOpen,setPopperOpen] = React.useState(false);\n    const [popperAnchor, setPopperAnchor] = React.useState<HTMLButtonElement | null>(null);\n    const [popperTitle,setPopperTitle] = React.useState<string>();\n    const [popperActive,setPoppperActive] =  React.useState(false);\n\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    const popper = (title:any,open:boolean) => (\n        event: any,\n      ) => {\n        if(!props.sidebar){\n            // console.log(event);\n            setPopperTitle(title.name);\n            setPopperAnchor(event.currentTarget);\n            setPopperOpen(open);\n            setPoppperActive(open ? title.control === control ? true : false : false);\n        }  \n    };\n\n    return(\n        <React.Fragment>\n            <Popper open={popperOpen} anchorEl={popperAnchor} placement=\"right\" transition style={{zIndex:3}}>\n                {({ TransitionProps }) => (\n                <Fade {...TransitionProps} timeout={0}>\n                    <Paper className={popperActive ? \"sidebar-popper active-nav\" : \"sidebar-popper\" } style={{color:'#020202b5'}}>\n                        {popperTitle}\n                    </Paper>\n                </Fade>\n                )}\n            </Popper>\n\n\n            <List /*className={!props.sidebar ? classes.root : ''}*/ style={{paddingTop:'4px'}}>\n                {list.map((text:any, index:number) => (\n                    <React.Fragment key={index} >\n                        <ListItem onMouseEnter={popper(text,true)} onMouseLeave={popper('',false)} className={text.control === control ? \"active-nav\" : \"\"} button onClick={()=>{\n                            \n                            // if(!props.sidebar){\n                            //     props.toggleSidebar();\n                            // }\n                            if(!text.props){\n                                if(props.location.pathname !== text.url){\n                                    props.history.push(text.url);\n                                }\n                            }else{\n                                \n                                props.setSidebarProps({\n                                    [text.name] : !props.sidebarProps[text.name],\n                                });\n                            \n                            }\n\n                        }}\n                        >\n                            {\n                                (!text.props) ? \n                                    <React.Fragment >\n                                        <ListItemIcon >{<text.icon style={styles.icon} />}</ListItemIcon>\n                                        <ListItemText /*className={classes.list}*/>{text.name}</ListItemText>\n                                    </React.Fragment>\n                                : \n                                    <React.Fragment>\n                                        <ListItemIcon>  \n                                            {<text.icon />}\n                                        </ListItemIcon>\n                                        <ListItemText>{text.name}</ListItemText>\n                                        {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                    </React.Fragment>\n\n                            }\n                        </ListItem>\n\n                        {\n                            (text.props) ? \n                                <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                    <List component=\"div\" disablePadding>\n                                        {\n                                            text.props.map((value:any,key:number)=>(\n                                                <ListItem button key={key} className=\"nestedSidebar\" \n                                                    \n                                                >\n                                                    <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                    <ListItemText >\n                                                        {value.name}\n                                                    </ListItemText>\t\t\t\t\t\t\t\t\n                                                </ListItem>\n                                            ))\n                                        }\n                                    </List>\n                                </Collapse>\n                                : ''\n                        }\n                    </React.Fragment>\n                ))}\n            </List>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(SidebarList);","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.data.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.remarks} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.remarks} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>   \n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.email} </TableCell>   \n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.email}</TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.category} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                      \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.category} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { Paper, Dialog, DialogTitle, DialogContent, DialogActions, Button, Table, TableHead, TableRow, TableBody, TableCell, TablePagination } from '@material-ui/core';\nimport './notification.style.scss';\nimport axios from 'axios';\nimport Url from 'Services/ServerUrl';\nimport { Token, Requests } from 'Services';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Chip from '@material-ui/core/Chip';\nimport moment from 'moment';\nimport {useSnackbar} from 'notistack';\nimport { Close } from '@material-ui/icons';\nimport Product from 'Components/Main/Products/Upload';\nimport Supplier from 'Components/Main/Suppliers/Upload';\nimport MasterFile from 'Components/Main/Summary/Upload';\n\n\n\nconst Notification = () => {\n\n    const notify:any = React.useRef();\n    const [open,setOpen] = React.useState(false);\n    const [data,setData] = React.useState();\n    const [page,setPage] = React.useState(1);\n    const {enqueueSnackbar,closeSnackbar} = useSnackbar();\n    const [product,setProduct] = React.useState({open : false,result : {}});\n    const [masterfile,setMasterFile] = React.useState({open : false,result : {}});\n    const [supplier,setSupplier] = React.useState({open : false,result : {}});\n\n\n    React.useEffect(()=>{\n        if(open){\n            request();\n        }\n    },[open,page]);\n\n    const request = async() => {\n        // let a =await axios({\n        //     method  :   \"get\",\n        //     url     :   Url.notification,\n        //     data    : {page},\n        //     headers  : {\n        //         'Content-Type'  :   'application/json',\n        //         'Accept'        :   'application/json',\n        //         'Authorization' :   'Bearer '+Token.get(),\n        //     }\n        // });\n\n        let a = await notify.current.show({page});\n\n        if(a.status === 200){\n            setData(a.data);\n        }\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) => {\n        let param = page;\n        param = newPage+1;\n        // setParams(param);\n        setPage(param);\n        // request();\n    }\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n        const tableCell:any = <TableCell align=\"right\"><Skeleton variant=\"rect\" /></TableCell>;\n        \n        \n        // Object.keys(data.table).forEach((value:any)=>{\n        //     if(products.table[value].show){\n        //         counter=counter+1;\n        //         tableCell.push(<TableCell key={counter} align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>)\n        //     }\n        // })\n        \n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const setErrorMessage = (value:any) => {\n        if(value.status === \"failed\") {\n            enqueueSnackbar(value.result.errors.message,{\n                variant:\"error\",\n                anchorOrigin:{\n                    vertical:'top', \n                    horizontal:'right'\n                },\n                action : action\n            });\n\n            return;\n        }\n\n        if(value.status === 'done'){\n            switch(value.type){\n                case \"product\" :\n                    setProduct({\n                        ...product,\n                        open : true,\n                        result : value.result\n                    })\n                    return;\n                case \"masterfile\":\n                    setMasterFile({\n                        ...masterfile,\n                        open    :   true,\n                        result  :   value.result\n                    });\n                    return;\n                case \"supplier\" :\n                    setSupplier({\n                        ...supplier,\n                        open    : true,\n                        result  : value.result\n                    })\n                    return;\n            }\n        }\n    }\n\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    return(\n        <React.Fragment>\n            <Requests.Notification request={notify} />\n            <Product upload={product} setUpload={setProduct} />\n            <MasterFile upload={masterfile} setUpload={setMasterFile} />\n            <Supplier upload={supplier} setUpload={setSupplier} />\n\n            <Paper className=\"notification\" onClick={()=>setOpen(true)}>\n                Upload Status\n            </Paper>\n            \n            <Dialog\n                fullWidth={true}\n                open={open}\n                onClose={()=>setOpen(false)}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Upload Status</DialogTitle>\n                \n                <DialogContent>\n                    <Paper className=\"notfication-table\">\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>id</TableCell>\n                                    <TableCell>Target</TableCell>\n                                    <TableCell>Status</TableCell>\n                                    <TableCell>Date</TableCell>\n                                </TableRow>\n                                \n                            </TableHead>\n                            <TableBody>\n                                {\n                                    data ?\n                                        data.data.map((value:any,key:number) =>(\n                                            <TableRow hover key={key} className=\"pointer\" onDoubleClick={()=>setErrorMessage(value)}>\n                                                <TableCell>{value.id}</TableCell>\n                                                <TableCell>{value.type}</TableCell>\n                                                <TableCell>\n                                                    <Chip\n                                                        label={value.status} \n                                                        color={\n                                                            value.status === \"done\" ? \"default\" :\n                                                            value.status === \"processing\" ? \"primary\" :\"secondary\"\n                                                        }\n                                                        style={{\n                                                            textTransform   : \"uppercase\",\n                                                            fontWeight      : \"bolder\",\n                                                            cursor          : \"pointer\",\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>{moment(value.created_at).format('lll')}</TableCell>\n                                            </TableRow>\n                                        ))\n                                    : \n                                    skeletonTable()\n                                }\n                                \n                            </TableBody>\n                        </Table>    \n                        <TablePagination\n                            rowsPerPageOptions={[]}\n                            component=\"div\"\n                            count={data ? data.meta.total : 10}\n                            rowsPerPage={10}\n                            page={data ? page-1 : 0}\n                            backIconButtonProps={{\n                                'aria-label': 'previous page',\n                            }}\n                            nextIconButtonProps={{\n                                'aria-label': 'next page',\n                            }}\n                            onChangePage={handleChangePage}\n                            // onChangeRowsPerPage={handleChangeRowsPerPage}\n                        />\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>setOpen(false)} >\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nexport default Notification;","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Home, Assessment} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {loggedIn} from 'Redux/Actions';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\nimport Notification from 'Components/Notification';\n\nconst Navigation = (props:any) => {\n\t\n\tconst logo = \"/img/ideaserv.png\";\n\tlet sidebar_properties = [\n\t\t{\n\t\t\tname : \"Home\",\n\t\t\tcontrol : \"home\",\n\t\t\ticon : Home,\n\t\t\turl  : \"/\",\n\t\t\t\n\t\t},{\n\t\t\tname : \"Products\",\n\t\t\tcontrol : \"products\",\n\t\t\ticon : Dropbox,\n\t\t\turl  : '/products',\n\t\t\t\n\t\t},{\n\t\t\tname :\t\"Product Maintenance\",\n\t\t\tcontrol : \"product_master_file_maintenance\",\n\t\t\ticon :  ProgressWrench,\n\t\t\turl  :  '/summary'\n\t\t},{\n\t\t\tname : \"Suppliers\",\n\t\t\tcontrol : \"suppliers\",\n\t\t\ticon :  VanUtility,\n\t\t\turl  : \"/suppliers\", \n\t\t},{\n\t\t\tname : \"Users\",\n\t\t\tcontrol : \"users\",\n\t\t\ticon :  Account,\n\t\t\turl  : \"/users\", \n\t\t\tprops: '',\n\t\t},{\n\t\t\tname : \"Reports\",\n\t\t\tcontrol : \"reports\",\n\t\t\ticon :  Assessment,\n\t\t\turl  : \"/reports\", \n\t\t\tprops: '',\n\t\t}\n\t];\n\n\n\n\n\n\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title);\n\tconst dispatch = useDispatch();\n\t\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[reduxUser]);\n\t\n\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\tcontrol : 'home',\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\tcontrol : \"products\",\n\t\t\t\ticon : Dropbox,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\tcontrol : \"suppliers\",\n\t\t\t\ticon :  VanUtility,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\tdispatch(loggedIn(false));\n\t\treturn;\n\t}\n\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\t\n\t\t\t<Notification />\n\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\nconst Filter = (props:any):any => {\n\n\n    const dispatch = useDispatch();\n    const products = useSelector( (state:any) => state.Products);\n\n\n    type control =  \"supplier\" | \"product\" | \n                    \"product_description\" | \n                    \"supplier_name\" | \"category\" | \n                    \"serial_number\" | \"warranty\" | \n                    \"warranty_start\" | \"warranty_end\" | \n                    \"status\" | \"delivery_date\" | \n                    \"reference_delivery_document\" | \n                    \"created_by\" | \"remarks\";\n\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    React.useEffect(()=>{\n        if(!products.filter){\n            reset();\n        }\n    },[products.filter]);\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product             : React.useRef(null),\n        product_description : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        category            : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null),\n        status              : React.useRef(null),\n        delivery_date       : React.useRef(null),\n        reference_delivery_document : React.useRef(null),\n        created_by          : React.useRef(null),\n        remarks             : React.useRef(null),\n\n    };\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product             : null,\n        product_description : null,\n        supplier_name       : null,\n        category            : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n        status              : null,\n        delivery_date       : null,\n        reference_delivery_document : null,\n        created_by          : null,\n        remarks             : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product               = null;\n        a.product_description   = null;\n        a.supplier_name         = null;\n        a.category              = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        a.status                = null;\n        a.delivery_date         = null;\n        a.reference_delivery_document = null;\n        a.created_by            = null;\n        a.remarks               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        \n        // setPopper({\n        //     ...popper,\n        //     [control] : null,\n        // })\n\n        let params = {per_page:10,page:1};\n        props.setParams(params);\n        \n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"product\",params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\",params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        products.filter ?\n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.supplier_code.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier\"\n                        value = {props.filter.supplier.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.supplier.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            \n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                                {props.filter.supplier.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={props.filter.supplier.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.supplier_name.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_name\"\n                        value = {props.filter.supplier_name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.supplier_name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                                {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.product_code.show}>\n                    \n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"product\"\n                        value = {props.filter.product.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"product\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.product}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.product)? \"simple-popper\" : undefined} open={Boolean(popper.product)} anchorEl={popper.product}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.product.filter}\n                                    onChange={setFilterControl}\n                                    name = \"product\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product\")}>\n                                {props.filter.product.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product\")} disabled={props.filter.product.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.product_name.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"product_description\"\n                        value = {props.filter.product_description.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.product_description}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.product_description.filter}\n                                    onChange={setFilterControl}\n                                    name = \"product_description\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                                {props.filter.product_description.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={props.filter.product_description.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.category.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"category\"\n                        value = {props.filter.category.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"category\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.category}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.category)? \"simple-popper\" : undefined} open={Boolean(popper.category)} anchorEl={popper.category}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.category.filter}\n                                    onChange={setFilterControl}\n                                    name = \"category\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"category\")}>\n                                {props.filter.category.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"category\")} disabled={props.filter.category.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.serial.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"serial_number\"\n                        value = {props.filter.serial_number.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.serial_number}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.serial_number.filter}\n                                    onChange={setFilterControl}\n                                    name = \"serial_number\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                                {props.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={props.filter.serial_number.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type = \"number\"\n                        name = \"warranty\"\n                        value = {props.filter.warranty.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.warranty}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.warranty.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                                {props.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={props.filter.warranty.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty_start.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        onChange = {(event) => props.setFilter({\n                                ...props.filter,\n                                warranty_start: {\n                                    ...props.filter['warranty_start'],\n                                    key : moment(event).format(\"YYYY-MM-DD\")\n                                }\n                            }\n                        )}\n                        value = {props.filter.warranty_start.key == '' ? null : moment(props.filter.warranty_start.key).format()}\n                        onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                        // cancelLabel = {<Button>Cancel</Button>}\n                        // okLabel = {<Button>OK</Button>}\n                    />\n\n\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.warranty_start.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty_start\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                                {props.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={props.filter.warranty_start.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.warranty_end.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        onChange = {(event) => {\n                                props.setFilter({\n                                    ...props.filter,\n                                    warranty_end:{\n                                        ...props.filter['warranty_end'],\n                                        key : moment(event).format(\"YYYY-MM-DD\")\n                                    }\n                                })\n                            }}\n                        value = {props.filter.warranty_end.key == '' ? null : moment(props.filter.warranty_end.key).format()}\n                        onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                        // onKeyDown = {onKey}\n                    />\n                    <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.warranty_end.filter}\n                                    onChange={setFilterControl}\n                                    name = \"warranty_end\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                                {props.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={props.filter.warranty_end.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.status.show}>\n                    <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                        <Select\n                            value={props.filter.status.key}\n                            onChange={setText}\n                            name=\"status\"\n                            onFocus = {(event)=>controller(event,\"status\",\"open\")}\n                        >\n                            <MenuItem value={0}>All</MenuItem>\n                            <MenuItem value={1}>New</MenuItem>\n                            <MenuItem value={2}>Replaced</MenuItem>\n                            <MenuItem value={3}>Returned</MenuItem>\n                            <MenuItem value={4}>Repaired</MenuItem>                        \n                        </Select>\n                    \n                    </FormControl>\n                    <Popper className=\"text-center\" id={Boolean(popper.status)? \"simple-popper\" : undefined} open={Boolean(popper.status)} anchorEl={popper.status}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,status:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"status\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n      \n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.delivery_date.show}>\n                    <DatePicker\n                        format=\"yyyy/MM/dd\"\n                        allowKeyboardControl\n                        animateYearScrolling\n                        variant = \"dialog\"\n                        className=\"input\"\n                        onChange = {(event) => props.setFilter({\n                                ...props.filter,\n                                delivery_date: {\n                                    ...props.filter['delivery_date'],\n                                    key : moment(event).format(\"YYYY-MM-DD\")\n                                }\n                            }\n                        )}\n                        value = {props.filter.delivery_date.key == '' ? null : moment(props.filter.delivery_date.key).format()}\n                        onFocus = {(event)=>controller(event,\"delivery_date\",\"open\")}\n                    />\n\n\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.delivery_date)? \"simple-popper\" : undefined} open={Boolean(popper.delivery_date)} anchorEl={popper.delivery_date}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.delivery_date.filter}\n                                    onChange={setFilterControl}\n                                    name = \"delivery_date\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"delivery_date\")}>\n                                {props.filter.delivery_date.key === '' ?'Close' : 'Clear'}                             \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"delivery_date\")} disabled={props.filter.delivery_date.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.reference_delivery_document.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"reference_delivery_document\"\n                        value = {props.filter.reference_delivery_document.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"reference_delivery_document\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.reference_delivery_document}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.reference_delivery_document)? \"simple-popper\" : undefined} open={Boolean(popper.reference_delivery_document)} anchorEl={popper.reference_delivery_document}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.reference_delivery_document.filter}\n                                    onChange={setFilterControl}\n                                    name = \"reference_delivery_document\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"reference_delivery_document\")}>\n                                {props.filter.reference_delivery_document.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"reference_delivery_document\")} disabled={props.filter.reference_delivery_document.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.created_by.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"created_by\"\n                        value = {props.filter.created_by.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"created_by\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.created_by}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.created_by)? \"simple-popper\" : undefined} open={Boolean(popper.created_by)} anchorEl={popper.created_by}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.created_by.filter}\n                                    onChange={setFilterControl}\n                                    name = \"created_by\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"created_by\")}>\n                                {props.filter.created_by.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"created_by\")} disabled={props.filter.created_by.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\" hidden={!products.table.remarks.show}>\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"remarks\"\n                        value = {props.filter.remarks.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"remarks\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.remarks}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.remarks)? \"simple-popper\" : undefined} open={Boolean(popper.remarks)} anchorEl={popper.remarks}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.remarks.filter}\n                                    onChange={setFilterControl}\n                                    name = \"remarks\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"remarks\")}>\n                                {props.filter.remarks.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"remarks\")} disabled={props.filter.remarks.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport { useSnackbar } from 'notistack';\nimport Close from '@material-ui/icons/Close';\n\ninterface Category{\n    \n    params : any,\n    open : any,\n    setOption : any,\n    setOpen : any,\n\n\n    value : string,\n}\n\nconst Category = (props:Category) => {\n\n    const categoryRequest:any = React.useRef();\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ error, setError ] = React.useState(false);\n    const [ message, setMessage ] = React.useState('');\n    const [category, setCategory ] = React.useState();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleClose = () => {\n        props.setOpen(!props.open);\n    }\n\n\n    // const handleOption = async () => {\n    //     const a = await categoryRequest.current.show(props.params);\n\n    //     let meta = a.data.meta;\n\n    //     let opti:any;\n\n    //     if(meta.total > meta.per_page){\n    //         let b =  await categoryRequest.current.show({per_page:meta.total,page:1});\n    //         opti = b.data.data;\n    //         props.params.page = 1;\n    //         props.params.per_page = meta.total; \n    //     }else{\n    //         setCategory(a.data.data);\n    //         opti = a.data.data;\n    //     }\n\n\n\n    //     let opt = opti.map((value:any) => {\n    //         return {\n    //             label : value.name,\n    //             value : value.id,\n    //             target: {\n    //                 name  : 'category',\n    //                 value : value.id \n    //             }\n    //         }\n    //     })\n\n    //     props.setOption(opt);\n    // }\n\n    const submitForm = async () => {\n        setError(false);\n        setSubmit(true);\n        if(category === ''){\n            setSubmit(false);\n            setError(true);\n            setMessage('Category name is required');\n            return;\n        }\n\n        let a = await categoryRequest.current.add({name:category});\n\n\n        console.log(a);\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                // handleOption();\n                handleClose();\n                enqueueSnackbar(\"Product category successfull added\",{variant:\"success\",action:actions});\n            }else{\n \n                if(a.status === 406){\n                    setSubmit(false);\n                    setError(true);\n                    setMessage('Category name already exists');\n                    return;\n                }else{\n                    enqueueSnackbar(\"Something went wrong. Please try again.\",{variant:\"error\",action:actions});\n                }\n            }\n        }\n\n        setSubmit(false);\n        setError(false);\n        setMessage('');\n    }\n\n    return(\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Category</DialogTitle>\n                <DialogContent >\n                    <TextField\n                        id=\"outlined-email-input\"\n                        label=\"Category Name\"\n                        // className={classes.textField}\n                        type=\"text\"\n                        name=\"category\"\n                        value = {category}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        defaultValue={props.value}\n                        onChange = {(event) => setCategory(event.target.value)}\n                        error = {error}\n                        helperText = {message}\n                        disabled={submit}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n\n                    <Button disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>        \n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nexport default Category;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '100%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none',\n\n            \"&:focus\": {\n                outline: 'none'\n            }\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Add = (props:Add) => {\n\n    const categoryRequest:any = React.useRef();\n    const masterCodeRequest:any = React.useRef(); \n\n    const initError = {\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    }\n\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    const [input, setInput] = React.useState({\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState(initError);\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n    const [categoryValue,setCategoryValue] = React.useState('');\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            // queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const handleChangeText = (event:any) => {\n\n        setInput({\n            ...input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n\n    const loadOption = async(inputValue:string) => {\n\n        \n        let category =  await categoryRequest.current.show({search:inputValue});\n\n        return category.data.data.map((value:any)=>{\n            return{\n                value : value.id,\n                label : value.name,\n                target:{\n                    value : value.id,\n                    name : \"category\",\n                }\n            }\n        });\n    }\n\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError(initError); \n        setSubmit(true);  \n        event.preventDefault();\n    \n        let a = await masterCodeRequest.current.add(input);\n\n        console.log(a);\n\n        if(a.status === 200){\n            enqueueSnackbar(\"Successfully added Product Code\",{variant:\"success\",action:actions});\n            dispatch(MasterCodes({per_page:10,page:1}));\n            props.handleClose();\n            setSubmit(false);\n            return;\n        }\n\n        if(a.status === 406){\n            updateErrorState(a.data.errors);\n        } \n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n\n\n        console.log(holder);\n        setError(holder);\n    }\n\n    \n    return (\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Requests.MasterCodes request={masterCodeRequest} />\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n                value = {categoryValue}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Product</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <AsyncCreatableSelect\n                                cacheOptions\n                                defaultOptions\n                                onChange = {handleChangeText}\n                                loadOptions ={(value) =>loadOption(value)}\n                                onCreateOption = {(inputValue)=>{\n                                    setCategoryValue(inputValue);\n                                    setCategoryHandler(true);\n                                }}\n                                // value={input.category}\n                                className={classes.category}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Close, Save, Today } from '@material-ui/icons';\nimport Select from 'react-select';\nimport {default as ProductCode} from '../Summary/Add';\nimport {Requests} from 'Services';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport AsyncSelect from 'react-select/async'\n\n\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n    params                      :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\ntype inputAsync = \"product\" | \"supplier\";\n\nconst Add = (props:Add) => {\n\n    let status = [{\n                    label : 'New',\n                    value : 1,\n                    target: {\n                        name : 'status',\n                        value : 1,\n                    }\n                },{\n                    label : 'Replaced',\n                    value : 2,\n                    target: {\n                        name : 'status',\n                        value : 2,\n                    }\n                },{\n                    label : 'Returned',\n                    value : 3,\n                    target: {\n                        name : 'status',\n                        value : 3,\n                    }\n                },{\n                    label : 'Repaired',\n                    value : 4,\n                    target: {\n                        name : 'status',\n                        value : 4,\n                    }\n                }\n            ];\n\n    const productCodeRequest:any = React.useRef();\n    const supplierRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    React.useEffect( () => {\n        if(props.modalAdd){\n        }\n    },[props.modalAdd]);\n\n    const loadOptions = async (inputValue:any,inputAsync:inputAsync) => {\n        \n        switch(inputAsync){\n            case \"product\" :\n                let company = await productCodeRequest.current.show({search:inputValue});\n\n                return company.data.data.map((value:any)=>{\n                    return{\n                        value : value.id,\n                        label : value.product_code,\n                        target:{\n                            value : value.id,\n                            name : \"product\"\n                        }\n                    }\n                });\n            case \"supplier\" : \n                let model = await supplierRequest.current.show({search:inputValue});\n                \n                return model.data.data.map((value:any)=>{\n\n                    return{\n                        value : value.id,\n                        label : value.supplier_code+\" (\"+value.supplier_name+\")\",\n                        target:{\n                            value : value.id,\n                            name : \"supplier\"\n                        }\n                    }\n                });\n        }\n\n        \n    };\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n    \n    return(\n        props.modalAdd ?\n            <React.Fragment>\n                <Requests.Suppliers request={supplierRequest} />\n                <Requests.MasterCodes request={productCodeRequest} />\n                <Requests.Status request={statusRequest} />\n                <ProductCode open={openAddProduct} handleClose={handleProductAdd} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalAdd}\n                    onClose={ () =>props.setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                    className=\"dialog edit\"\n                >\n                    <DialogTitle style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"supplier\")}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} className=\"select-error-message\">{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncCreatableSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"product\")}\n                                                onCreateOption = {handleProductAdd}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} className=\"select-error-message\">{props.responseMessage.product.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select error\" : \"\" }\n                                                required\n                                            />\n\n                                            <div hidden={!props.responseMessage.status.error} className=\"select-error-message\">{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        : null\n    );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst styles = {\n    root: {\n      backgroundColor: \"transparent\"\n    }\n  };\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Supplier Code</TableCell>\n                                        <TableCell>{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Supplier Name</TableCell>\n                                        <TableCell>{props.product.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Product Code</TableCell>\n                                        <TableCell>{props.product.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Product Name</TableCell>\n                                        <TableCell>{props.product.product.product_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Category</TableCell>\n                                        <TableCell>{props.product.product.category.name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Serial Number</TableCell>\n                                        <TableCell>{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Delivery Date</TableCell>\n                                        <TableCell>{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Warranty</TableCell>\n                                        <TableCell>{props.product.warranty > 1 ? props.product.warranty + ' Months ' : props.product.warranty + \" Month\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Warranty Start</TableCell>\n                                        <TableCell>{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>End Date</TableCell>\n                                        <TableCell>{moment(new Date(props.product.warranty_end)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Delivery Doc</TableCell>\n                                        <TableCell>{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Created By</TableCell>\n                                        <TableCell>{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Status</TableCell>\n                                        <TableCell>{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  :\n                                            props.product.status === 3 ? 'Returned' : \"Repaired\"\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell>Remarks</TableCell>\n                                        <TableCell>{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;\n\n\n\n\n\n\n\n// import React from 'react';\n// import Button from '@material-ui/core/Button';\n// import Dialog from '@material-ui/core/Dialog';\n// import AppBar from '@material-ui/core/AppBar';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import IconButton from '@material-ui/core/IconButton';\n// import Typography from '@material-ui/core/Typography';\n// import Slide from '@material-ui/core/Slide';\n// import { TransitionProps } from '@material-ui/core/transitions';\n// import { ArrowBack } from '@material-ui/icons';\n// import { Paper } from '@material-ui/core';\n\n\n// const Transition = React.forwardRef<unknown, TransitionProps>(function Transition(props, ref) {\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\n// });\n\n\n// interface Show{\n//     product       : any,\n//     modalShow     : boolean,\n//     user          : any,\n\n//     initModalEdit() : void\n//     setModalShow(a:boolean) : void,\n// }\n\n// const Show = (props:Show) => {\n\n//     const [, setOpen] = React.useState(false);\n\n\n//     const handleClose = () => {\n//         props.setModalShow(!props.modalShow);\n//     };\n\n//     return (\n//         <div>\n//             {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//                 Open full-screen dialog\n//             </Button> */}\n//             <Dialog className=\"dialog fullscreen\" fullScreen open={props.modalShow} onClose={handleClose} TransitionComponent={Transition}>\n//                 <AppBar>\n//                     <Toolbar>\n//                         <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n//                             <ArrowBack />\n//                         </IconButton>\n//                         <Typography variant=\"h6\" className=\"dialog-title\">\n//                             Product Details\n//                         </Typography>\n//                         <Button autoFocus color=\"inherit\" onClick={handleClose}>\n//                             Save\n//                         </Button>\n//                     </Toolbar>\n//                 </AppBar>\n//                 <Paper>\n\n//                 </Paper>\n//             </Dialog>\n//         </div>\n//     );\n// }\n\n// export default Show;\n","// import React from 'react';\n// import { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\n// import { DatePicker } from \"@material-ui/pickers\";\n// import { Close, Save } from '@material-ui/icons';\n// import Select from 'react-select';\n// import AddIcon from '@material-ui/icons/Add';\n// import {useSelector} from 'react-redux';\n// import {default as ProductCode} from '../Summary/Add';\n\n\n// interface Edit{\n//     modalEdit       : boolean,\n//     updateInput     : any,\n//     submit          : boolean,\n//     responseMessage : any,\n//     product         : any,\n//     productInput    : any\n//     params          :   any,\n\n    \n//     submitForm(a:any, b:string) : void,\n//     setModalEdit(a:boolean) : void,\n// }\n\n// const styles = {\n//     select : {\n//         fontSize: '0.75rem',\n//         color   : '#f11111',\n//     }\n// }\n\n// const buttonStyle = {\n//     transform: 'scale(0.7)',\n//     marginLeft: '-30px',\n//     outline: 'none'\n// }\n\n// const Edit = (props:Edit) => {\n\n\n//     const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n//     // const [productOption, setProductOption] = React.useState();\n//     const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n\n//     React.useEffect( () => {\n//         if(productCode && props.modalEdit){\n//             initProduct();\n//         }\n//     },[productCode,props]);\n\n//     const initProduct = () => {\n//         let opt = productCode.data.map((value:any) => {\n//             return {\n//                 label : value.product_code,\n//                 value : value.id,\n//                 target: {\n//                     name  : 'product',\n//                     value : value.id \n//                 }\n//             }\n//         })\n\n//         setProductOption(opt);\n//     }\n\n\n\n//     const handleProductAdd = () => {\n//         setOpenAddProduct(!openAddProduct);\n//     }\n\n\n\n//     const productOption = async() =>{\n\n//     }\n\n\n \n\n//     if(props.product && productOption){\n        \n\n//         return(\n//             <React.Fragment>\n//                <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n//                 <Dialog\n//                     fullWidth\n//                     maxWidth=\"sm\"\n//                     open={props.modalEdit}\n//                     onClose={ () =>props.setModalEdit(false) }\n//                     aria-labelledby=\"max-width-dialog-title\"\n//                 >\n//                     <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n//                     <DialogContent>\n\n//                         <Paper className=\"text-center\">\n//                             <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Supplier\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             {/* <Select\n//                                                 options={options}\n//                                                 // isClearable\n//                                                 name = 'supplier'\n//                                                 defaultValue = {options.find((element:any) => element.value === props.productInput.supplier)}\n//                                                 onChange = {props.updateInput}\n//                                                 isDisabled = {props.submit}\n//                                                 required\n//                                             /> */}\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\" style={{position:'relative'}}>\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Product Code\n//                                         </div>\n//                                         <div className=\"col-md-7\">\n//                                             <Select\n//                                                 options={productOption}\n//                                                 // isClearable\n//                                                 name = 'product'\n//                                                 defaultValue = {productOption? productOption.find((element:any) => element.value === props.productInput.product): ''}\n//                                                 onChange = {props.updateInput}\n//                                                 isDisabled = {props.submit}\n//                                                 className={props.responseMessage.product.error? \"select-error\" : \"\" }\n//                                                 required\n//                                             />\n//                                             <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n//                                         </div>\n//                                         <div className=\"col-md-1\">\n//                                             <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n//                                                 <AddIcon />\n//                                             </Fab>\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Serial Number\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <TextField\n//                                                 margin=\"normal\"\n//                                                 variant=\"outlined\"\n//                                                 className=\"full-width product-reduce-margin-text\"\n//                                                 name = \"serial_number\"\n//                                                 onChange = {props.updateInput}\n//                                                 value = {props.productInput.serial_number}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.serial_number.error}\n//                                                 helperText = {props.responseMessage.serial_number.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 {/* <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Status\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <Select\n//                                                 options={status}\n//                                                 // isClearable\n//                                                 name = 'status'\n//                                                 defaultValue = {status.find((element:any) => element.value === props.productInput.status)}\n//                                                 onChange = {props.updateInput}\n//                                                 isDisabled = {props.submit}\n//                                                 className={props.responseMessage.status.error? \"select-error\" : \"\" }\n//                                                 required\n//                                             />\n//                                             <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n//                                         </div>\n//                                     </div>\n//                                 </div> */}\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Delivery Date\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <DatePicker\n//                                                 format=\"dd/MM/yyyy\"\n//                                                 allowKeyboardControl\n//                                                 animateYearScrolling\n//                                                 variant = \"dialog\"\n//                                                 className = \"full-width product-reduce-margin-text\"\n//                                                 onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n//                                                 value = {props.productInput.delivery_date}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.delivery_date.error}\n//                                                 helperText = {props.responseMessage.delivery_date.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Delivery Doc\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <TextField\n//                                                 type=\"text\"\n//                                                 margin=\"normal\"\n//                                                 variant=\"outlined\"\n//                                                 className=\"full-width product-reduce-margin-text\"\n//                                                 name = \"reference_delivery_document\"\n//                                                 onChange = {props.updateInput}\n//                                                 value = {props.productInput.reference_delivery_document}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.reference_delivery_document.error}\n//                                                 helperText = {props.responseMessage.reference_delivery_document.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Warranty(month)\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <TextField\n//                                                 type=\"number\"\n//                                                 margin=\"normal\"\n//                                                 variant=\"outlined\"\n//                                                 className=\"full-width product-reduce-margin-text\"\n//                                                 name = \"warranty\"\n//                                                 onChange = {props.updateInput}\n//                                                 value = {props.productInput.warranty}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.warranty.error}\n//                                                 helperText = {props.responseMessage.warranty.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Warranty Start\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <DatePicker\n//                                                 format=\"dd/MM/yyyy\"\n//                                                 allowKeyboardControl\n//                                                 animateYearScrolling\n//                                                 variant = \"dialog\"\n//                                                 className = \"full-width product-reduce-margin-text\"\n//                                                 onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n//                                                 value = {props.productInput.warranty_start}\n//                                                 // minDate = {new Date(props.productInput.delivery_date)}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.warranty_start.error}\n//                                                 helperText = {props.responseMessage.warranty_start.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <div className=\"col-md-12\">\n//                                     <div className=\"row align-items-center\">\n//                                         <div className=\"col-md-4 font-bolder\">\n//                                             Remarks\n//                                         </div>\n//                                         <div className=\"col-md-8\">\n//                                             <TextField\n//                                                 // type=\"number\"\n//                                                 margin=\"normal\"\n//                                                 variant=\"outlined\"\n//                                                 className=\"full-width product-reduce-margin-text\"\n//                                                 name = \"remarks\"\n//                                                 onChange = {props.updateInput}\n//                                                 value = {props.productInput.remarks}\n//                                                 disabled = {props.submit}\n//                                                 required\n//                                                 error = {props.responseMessage.remarks.error}\n//                                                 helperText = {props.responseMessage.remarks.message}\n//                                             />\n//                                         </div>\n//                                     </div>\n//                                 </div>\n//                                 <input type=\"submit\" style={{display:'none'}} />\n//                             </form>\n//                         </Paper>\n\n//                     </DialogContent>\n//                     <DialogActions className=\"product-modal-footer\">\n                        \n//                         <Button \n//                             onClick={(event:any) => props.submitForm(event,\"edit\")} \n//                             color=\"primary\" \n//                             variant=\"contained\"\n//                             disabled={props.submit}\n//                             form=\"submit-edit-form\"\n//                         >  \n//                             <Save />\n//                             Submit\n//                             <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n//                         </Button>\n//                         <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n//                             <Close />   \n//                             Cancel\n//                         </Button>\n//                     </DialogActions>\n//                 </Dialog>\n//             </React.Fragment>\n//         );\n//     }else{\n//         return null;\n//     }\n// }\n\n// export default Edit;\n\n\n\n\nimport React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"@material-ui/pickers\";\nimport { Close, Save, Today } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\nimport {Requests} from 'Services';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\nimport AsyncSelect from 'react-select/async'\n\n\n\ninterface Add{\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n    params          :   any,\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\ntype inputAsync = \"product\" | \"supplier\";\n\nconst Edit = (props:Add) => {\n\n    let status = [{\n                    label : 'New',\n                    value : 1,\n                    target: {\n                        name : 'status',\n                        value : 1,\n                    }\n                },{\n                    label : 'Replaced',\n                    value : 2,\n                    target: {\n                        name : 'status',\n                        value : 2,\n                    }\n                },{\n                    label : 'Returned',\n                    value : 3,\n                    target: {\n                        name : 'status',\n                        value : 3,\n                    }\n                },{\n                    label : 'Repaired',\n                    value : 4,\n                    target: {\n                        name : 'status',\n                        value : 4,\n                    }\n                }\n            ];\n\n    const productCodeRequest:any = React.useRef();\n    const supplierRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    \n    const [preProduct,setPreProduct] = React.useState();\n    const [preSupplier,setPreSupplier] = React.useState();\n\n\n\n    React.useEffect(()=>{\n        if(props.modalEdit){\n            loadPreValues();\n        }\n    },[props.modalEdit]);\n\n    const loadPreValues = async () => {\n        let supplier = await supplierRequest.current.get(props.productInput.supplier);\n        let product = await productCodeRequest.current.get(props.productInput.product);\n\n\n\n        setPreSupplier({\n            value : supplier.data.data.id,\n            label : supplier.data.data.supplier_code+\" (\"+supplier.data.data.supplier_name+\")\",\n            target : {\n                value : supplier.data.data.id,\n                name  : \"supplier\"\n            }\n        });\n        \n        setPreProduct({\n            value : product.data.data.id,\n            label : product.data.data.product_code,\n            target : {\n                value : product.data.data.id,\n                name  : \"product\"\n            }\n        });\n\n        \n    }\n    \n\n\n    const loadOptions = async (inputValue:any,inputAsync:inputAsync) => {\n\n        switch(inputAsync){\n            case \"product\" :\n                let company = await productCodeRequest.current.show({search:inputValue});\n\n                return company.data.data.map((value:any)=>{\n                    return{\n                        value : value.id,\n                        label : value.product_code,\n                        target:{\n                            value : value.id,\n                            name : \"product\"\n                        }\n                    }\n                });\n            case \"supplier\" : \n                let model = await supplierRequest.current.show({search:inputValue});\n                \n                return model.data.data.map((value:any)=>{\n\n                    return{\n                        value : value.id,\n                        label : value.supplier_code+\" (\"+value.supplier_name+\")\",\n                        target:{\n                            value : value.id,\n                            name : \"supplier\"\n                        }\n                    }\n                });\n        }\n\n        \n    };\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n    \n    return(\n        props.modalEdit ?\n            <React.Fragment>\n                <Requests.Suppliers request={supplierRequest} />\n                <Requests.MasterCodes request={productCodeRequest} />\n                <Requests.Status request={statusRequest} />\n                <ProductCode open={openAddProduct} handleClose={handleProductAdd} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalEdit}\n                    onClose={ () =>props.setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                    className=\"dialog edit\"\n                >\n                    <DialogTitle style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"supplier\")}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                                value={preSupplier}\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} className=\"select-error-message\">{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <AsyncCreatableSelect\n                                                cacheOptions\n                                                defaultOptions\n                                                loadOptions={(inputValue)=>loadOptions(inputValue,\"product\")}\n                                                onCreateOption = {handleProductAdd}\n                                                classNamePrefix=\"select\"\n                                                className=\"select-container\"\n                                                onChange = {props.updateInput}\n                                                value={preProduct}\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} className=\"select-error-message\">{props.responseMessage.product.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                value = {status.find((element:any) => element.value === props.productInput.status)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select error\" : \"\" }\n                                                required\n\n                                            />\n\n                                            <div hidden={!props.responseMessage.status.error} className=\"select-error-message\">{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8 input svg\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"dialog\"\n                                                className = \"date\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n\n                                            <Today color=\"primary\" />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 title-input\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8 input\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        : null\n    );\n}\n\nexport default Edit;","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport Popover from '@material-ui/core/Popover';\nimport {ProductsTable} from 'Redux/Actions';\nimport { Fade, Paper, Typography, List, ListItemText, ListItem, Checkbox, ListItemSecondaryAction } from '@material-ui/core';\n\ninterface TableOrder{\n    anchor      : HTMLButtonElement | null,\n    open        : boolean,\n    setOpen     : any\n}\n\n\nconst TableOrder = (props:TableOrder)=>{\n    const table = useSelector((state:any) => state.Products.table);\n    const dispatch = useDispatch();\n\n\n    const handleToggle = (value:any) => (event:any) => {        \n        // console.log(value);\n        \n        dispatch(ProductsTable({\n            ...table,\n            [value] : {\n                ...table[value],\n                show : !table[value].show\n            }\n        }));\n    }\n\n\n    return(\n        <Popover \n            open={props.open}\n            onClose={()=>props.setOpen(false)}\n            anchorEl={props.anchor} \n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n        >\n            <Paper className=\"table-order\">\n                <div className=\"title\">\n                    Table Display\n                </div>\n\n                <List dense>\n                    {\n                        Object.keys(table).map((value) =>(\n                            <ListItem key={value}>\n                                <ListItemText primary={table[value].name} />\n                                <ListItemSecondaryAction>\n                                    <Checkbox \n                                        checked={table[value].show} \n                                        inputProps={{'aria-label':'primary checkbox'}}\n                                        onClick = {handleToggle(value)}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Paper>\n      </Popover>\n    )\n}\n\nexport default TableOrder;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Paper, IconButton, LinearProgress } from '@material-ui/core';\nimport './upload.style.scss';\nimport { Close } from '@material-ui/icons';\nimport {useSnackbar} from \"notistack\";\nimport tus from 'tus-js-client';\nimport { Requests } from 'Services';\n\ninterface Upload{\n\n    open : boolean,\n    setOpen(a:boolean) : void,\n    type : \"masterfile\" | \"product\" | \"supplier\"\n}\n\n\nlet newFileName = \"\";\nconst Upload = (props:Upload) => {\n\n    const notify:any = React.useRef();\n    const dragDiv = React.useRef(null);\n    const input = React.useRef(null);\n    const {enqueueSnackbar,closeSnackbar} = useSnackbar();\n    const [status,setStatus] = React.useState({\n        uploading   : false,\n        percent     : 0,\n    });\n\n\n    const dragAndDrop = (event:any) => {\n        event.preventDefault();\n\n        switch(event.type){\n            case \"change\" :\n                processFileList(event.target.files);\n                return;\n            case \"dragover\" :\n                dragDiv.current.classList.add(\"active\");\n                return;\n            case \"drop\" :\n                dragDiv.current.classList.remove(\"active\");\n                processFileList(event.dataTransfer.files);\n                return;\n            default:\n                dragDiv.current.classList.remove(\"active\");\n                return;                \n        }\n    }\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    const processFileList = (data:FileList) => {\n        if(data.length !== 0){\n            let extension = data[0].name.split('.').pop();\n            \n            if(extension === \"xlsx\" || extension === \"xls\"){\n                \n                newFileName = generateRandomFileName(data[0].name);\n                setStatus({\n                    ...status,\n                    uploading : true,\n                })\n                uploadToServer(data[0]);\n                return;\n            }else{\n                enqueueSnackbar('Invalid file, please try again!!!',{\n                    variant:\"error\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n            }\n        }\n    };\n\n\n    const uploadToServer = (file:any) => {\n        var upload:any = new tus.Upload(file, {\n            endpoint: \"/api/file/\",\n            retryDelays: [0, 3000, 5000, 10000, 20000],\n            resume : false,\n            chunkSize : 1000000,\n            metadata: {\n                filename: newFileName,\n                filetype: file.type\n            },\n            onError: (error) => {\n                enqueueSnackbar('Something went wrong, please try again!!',{\n                    variant:\"error\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n\n                setStatus({\n                    ...status,\n                    uploading : false,\n                })\n            },\n            onProgress: (bytesUploaded, bytesTotal) => {\n\n                // console.log(bytesTotal);\n                setStatus({\n                    uploading   :   true,\n                    percent     :   parseInt((bytesUploaded / bytesTotal * 100).toFixed(2),10)\n                })\n            },\n            onSuccess: () => {\n                \n                notify.current.add({\n                    filename    : newFileName,\n                    type        : props.type, \n                });\n\n                enqueueSnackbar('File successfully uploaded!!!',{\n                    variant:\"success\",\n                    anchorOrigin:{\n                        vertical:'top', \n                        horizontal:'right'\n                    },\n                    action : action\n                });\n\n                console.error(\"redux here\");\n                props.setOpen(false);\n                setStatus({\n                    ...status,\n                    uploading:false\n                })\n            }\n        })\n     \n        // Start the upload\n        upload.start();\n    };\n\n\n    const generateRandomFileName = (name:string) =>{\n        let extension = name.slice((name.lastIndexOf(\".\") - 1 >>> 0) + 1);\n        let filename = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)+Math.random().toString(36).substring(2, 15);\n        return filename+extension;\n    }\n\n    return(\n         <React.Fragment>\n            <Requests.Notification request={notify} />\n            <Dialog\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={ () => props.setOpen(false)}\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"upload\"\n                disableBackdropClick\n            >\n                {/* <DialogTitle>Upload File</DialogTitle> */}\n                <DialogContent>\n                    {\n                        status.uploading ?\n                            <Paper className=\"uploading\">\n                                <LinearProgress variant=\"determinate\" value={status.percent} />\n                                <b>Uploading({status.percent})</b>\n                            </Paper>\n                        \n                        :\n                            <Paper\n                                onDragEnter={dragAndDrop} \n                                onDragLeave={dragAndDrop} \n                                onDragOver ={dragAndDrop} \n                                onDrop     ={dragAndDrop}\n                            >\n                                <div className=\"start\" ref={dragDiv}>\n                                    <Button onClick={()=>input.current.click()} variant=\"contained\" color=\"secondary\"> browse </Button>\n                                    <input ref={input} hidden accept=\".xlsx, .xls\" type=\"file\" onChange={dragAndDrop} />\n                                    <i>&nbsp;&nbsp;or drop files here</i>\n                                </div>\n                            </Paper>\n                    }\n                    <IconButton hidden={status.uploading} onClick={()=>props.setOpen(false)} className=\"close-upload\" color=\"primary\">\n                        <Close />\n                    </IconButton>\n                </DialogContent>\n            \n            </Dialog>\n        </React.Fragment>\n    );\n}\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TablePagination, TableHead, Button, Dialog, DialogContent, CircularProgress, Fab } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux,ProductsFilter , Filter as Filterer,NavigationTitle,MasterCodes,ProductsTable} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload, FilterList, ViewColumn } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\n// import Upload from './Upload';\nimport TableOrder from './TableOrder';\nimport Upload from 'Components/Upload';\n\nconst Products = (props:any) =>{\n\n    const productsRequest:any = React.useRef();\n    const initErrroMessage = {\n        id                          : {error:false,message:''},\n        supplier                    : {error:false,message:''},\n        product                     : {error:false,message:''},\n        // product_description         : {error:false,message:''},\n        delivery_date               : {error:false,message:''},\n        reference_delivery_document : {error:false,message:''},\n        serial_number               : {error:false,message:''},\n        warranty                    : {error:false,message:''},\n        warranty_start              : {error:false,message:''},\n        status                      : {error:false,message:''},\n        remarks                     : {error:false,message:''},\n    };\n    \n    const initProductInput = {\n        id                  : '',\n        supplier            : '',\n        product             : '',\n        // product_description : '', \n        delivery_date       : '',\n        reference_delivery_document : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        status              : '',\n        remarks             : '',\n    \n    }\n\n    const initFilter = {\n        supplier            : {filter:'iet',key:''},\n        product             : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        category            : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''},\n        status              : {filter:'iet',key:''},\n        delivery_date       : {filter:'iet',key:''},\n        reference_delivery_document : {filter:'iet',key:''},\n        created_by          : {filter:'iet',key:''},\n        remarks             : {filter:'iet',key:''},\n    }\n    const initParams = {page     : 1,per_page : 10}\n\n\n    const [ params, setParams ] = React.useState(initParams);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState(false);\n    const [filter, setFilter] = React.useState(initFilter);\n    const [ productCodeParam, setProductCodeParam ] = React.useState();\n    const [tableAnchor,setTableAnchor] = React.useState<HTMLButtonElement | null>(null);\n    const [tableOpen, setTableOpen] = React.useState(false);\n\n\n   \n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n    // const filterSwitch = useSelector( (state:any) => state.Products.filter);\n    const dispatch = useDispatch();\n\n\n    const products =  useSelector( (state:any) => state.Products);\n\n\n\n\n    useEffect(()=>{\n    \n        dispatch(NavigationTitle({control:'products'}));        \n        dispatch(productRedux({page:1,per_page:10}));\n        dispatch(Filterer(filter,\"product\",params));\n        window.addEventListener('scroll', scroll, true);\n\n        \n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n\n    \n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage(initErrroMessage);\n    };\n\n    \n    \n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"product\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"product\",paran));\n        \n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                // uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    // const uploadSheet = async (file:File) => {\n\n        \n    //     setUpload({\n    //         ...upload,\n    //         uploading : true,\n    //     });\n\n    //     let response = await Requests.Products.addFile(file);\n\n    //     switch(response.status){\n    //         case 406 :\n    //             enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //         case 200 :\n                \n    //             enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n    //             togglePointerEvents(true);\n    //             dispatch(Filterer(filter,\"product\",params));\n    //             setUpload({\n    //                 open      : true,\n    //                 uploading : false,\n    //                 result    : response.data\n    //             });\n    //             return;\n\n    //         default :\n    //             enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //     }\n    // }\n\n    // const uploadFileModal = () =>{\n    //     if(upload.uploading){\n    //         return (\n    //             <Dialog\n    //                 maxWidth=\"xs\"\n    //                 open={upload.uploading}\n    //                 disableBackdropClick\n    //                 className=\"uploading-processing\"\n    //             >\n    //                 <DialogContent>\n    //                     <div>\n    //                         <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n    //                             <CircularProgress />\n    //                         </div>\n    //                         <div className=\"status-submit-upload\">\n    //                             Uploading\n    //                         </div>\n    //                     </div>\n    //                 </DialogContent>\n    //             </Dialog>\n    //         );\n    //     }else{\n    //         return null;\n    //     }\n    // }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n        const tableCell:any = [];\n        let counter=0;\n        \n        Object.keys(products.table).forEach((value:any)=>{\n            if(products.table[value].show){\n                counter=counter+1;\n                tableCell.push(<TableCell key={counter} align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>)\n            }\n        })\n        \n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM/DD/YYYY'),\n            warranty_start     : moment(today).format('MM/DD/YYYY'),\n        });\n\n        // console.log(productInput);\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n\n        // console.log(productInfo);\n\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM/DD/YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product                     : product.product.id,\n            // product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n\n        console.log(action);\n\n        \n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await productsRequest.current.update(productInput).then( \n                    (response:any) =>{\n                        // if(response.network_error){\n                        //     enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                        //     setModalEdit(false);\n                        // }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                        //     else{\n                        //         enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        //         updateErrorState(response.data.errors);\n                        //     }\n                        // }\n                    }\n                )\n                // .catch(()=>{\n                //     enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                //     setModalEdit(false);\n                // });\n                break;\n            case \"add\" :\n\n                await productsRequest.current.add(productInput).then( \n                    (response:any) =>{\n                        console.log(response);\n\n                        // if(response.network_error){\n                        //     enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                        //     setModalAdd(false);\n                        // }else{\n                        if(response.status === 200){\n                            enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                            setModalAdd(false);\n                            dispatch(productRedux(params));\n                        }else{\n                            enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                            updateErrorState(response.data.errors);\n                        }\n                    }\n                )\n                // .catch((e:any)=>{\n                //     enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    // setModalAdd(false);\n                // });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n\n    const status = (stat:any) => {\n        switch(stat){\n            case 1 : \n                return \"New\";\n            case 2 :\n                return \"Replaced\";\n            case 3 : \n                return \"Returned\";\n            case 4 :\n                return \"Repaired\";\n        }\n    }\n\n\n    const handleSort = (name:string) => {\n\n        let tables = products.table;\n\n        // Object.keys(products.table).forEach((values:any)=>{\n            \n\n        //     if(values === name){\n        //         if(products.table[name].asc === null || products.table[name].asc === false){\n\n        //             tables[name].asc=true;\n        //         }else{\n        //             tables[name].asc=false;\n        //         }\n        //     }else{\n        //         tables[name].asc=null;\n        //     }\n\n        //     console.log(tables[name].asc,name);\n        // });\n\n        // console.log(tables[name]);\n\n\n        console.error('To be continued');\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        \n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            <Requests.Products request={productsRequest} />\n            <TableOrder open={tableOpen} setOpen={setTableOpen} anchor={tableAnchor} />\n\n            <Edit\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n                params          = {productCodeParam}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n                params          = {productCodeParam}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"product\"\n            />\n            \n            {/* {uploadFileModal()} */}\n            <Paper className=\"paper-table\">\n                <div className=\"header\">\n                    <div className=\"title\">Products</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                // console.log(filterSwitch)\n                                dispatch(ProductsFilter(!products.filter));\n                                setFilter(initFilter);\n                                setParams(initParams);\n                            }} >\n                            <FilterList />\n                        </Fab>\n                        <Fab size=\"small\" color=\"primary\" onClick={(event:any)=>{\n                            setTableAnchor(event.currentTarget);\n                            setTableOpen(!tableOpen);\n                        }}>\n                            <ViewColumn />\n                        </Fab>\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell onClick={()=>handleSort(\"supplier_code\")} className={products.table.supplier_code.asc !== null ? \"sticky-header pointer selected-columns\" : \"sticky-header pointer\"} align=\"center\" hidden={!products.table.supplier_code.show}>Supplier Code</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.supplier_name.show}>Supplier Name</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.product_code.show}>Product Code</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.product_name.show}>Product Name</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.category.show}>Category</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.serial.show}>Serial Number</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty.show}>Warranty</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty_start.show}>Warranty Start</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.warranty_end.show}>End Date</TableCell>\n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.status.show}>Status</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.delivery_date.show}>Delivery Date</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.reference_delivery_document.show}>Delivery Document</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.created_by.show}>Created By</TableCell> \n                            <TableCell className=\"sticky-header pointer\" align=\"left\" hidden={!products.table.remarks.show}>Remarks</TableCell> \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} setParams={setParams}/>\n                        {\n                            products.data ?\n                                products.data.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} className=\"pointer\" onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\"     title={key.supplier.supplier_code}                          hidden={!products.table.supplier_code.show} >{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\"     title={key.supplier.supplier_name}                          hidden={!products.table.supplier_name.show} >{key.supplier.supplier_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.product_code}                            hidden={!products.table.product_code.show} >{key.product.product_code}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.product_name}                            hidden={!products.table.product_name.show} >{key.product.product_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.product.category.name}                           hidden={!products.table.category.show} >{key.product.category.name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.serial_number}                                   hidden={!products.table.serial.show} >{key.serial_number}</TableCell>\n                                        <TableCell align=\"left\"     title={key.warranty}                                        hidden={!products.table.warranty.show} >{key.warranty}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.warranty_start)).format(\"ll\")}   hidden={!products.table.warranty_start.show} >{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.warranty_end)).format(\"ll\")}     hidden={!products.table.warranty_end.show} >{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={status(key.status)}                                  hidden={!products.table.status.show} >{status(key.status)}</TableCell>\n                                        <TableCell align=\"left\"     title={moment(new Date(key.delivery_date)).format(\"ll\")}    hidden={!products.table.delivery_date.show} >{moment(new Date(key.delivery_date)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\"     title={key.reference_delivery_document}                     hidden={!products.table.reference_delivery_document.show} >{key.reference_delivery_document}</TableCell>\n                                        <TableCell align=\"left\"     title={key.created_by.first_name+\" \"+key.created_by.last_name}                           hidden={!products.table.created_by.show} >{key.created_by.first_name+\" \"+key.created_by.last_name}</TableCell>\n                                        <TableCell align=\"left\"     title={key.remarks}                                         hidden={!products.table.remarks.show} >{key.remarks}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                </Table>\n                </div>\n\n                <div className=\"footer\">\n                    { \n                        user.level !== 3 ?\n                            <React.Fragment>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>    \n                                        \n                                {/* <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/> */}\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={()=>{\n                                        // event.persist();\n                                        // file.click()\n                                        setUpload(true);\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                    </Button>\n                            </React.Fragment>\n                        : ''\n                    }\n                    \n                    <table>\n                        <tbody>\n                            <tr>\n                                <TablePagination\n                                    rowsPerPageOptions={[10,25,50,100]}\n                                    colSpan={0}\n                                    count={products.data ? products.data.data.meta.total : 10}\n                                    rowsPerPage={params.per_page}\n                                    page={products.data ? params.page-1: 0}\n                                    onChangePage={handleChangePage}\n                                    onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                                    ActionsComponent={TablePaginationActions}\n                                    className=\"\"\n                                />\n                            </tr>\n                        </tbody>\n                    </table>\n                    \n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\nimport { Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, Select, MenuItem, FormControlLabel, DialogActions } from '@material-ui/core';\nimport { Dropbox, VanUtility, Account } from 'mdi-material-ui';\nimport { ArrowForward } from '@material-ui/icons';\nimport {withRouter, Switch} from 'react-router-dom';\nimport { Requests } from 'Services';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport moment from 'moment';\nimport {Suppliers,Users,Products,NavigationTitle} from \"Redux/Actions\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Chart from 'react-google-charts';\n\nconst Reports = ( props :any ) => {\n\n    const logsRequest:any = React.useRef();\n    const statusRequest:any = React.useRef();\n\n    const dispatch = useDispatch();\n    const users = useSelector((state:any) => state.Users.data); \n    const products = useSelector((state:any) => state.Products.data); \n    const suppliers = useSelector((state:any) => state.Suppliers.data);\n    const [status,setStatus] = React.useState();\n\n    React.useEffect(()=>{\n        requestLog();\n        dispatch(NavigationTitle({control:'reports'}));\n\n        window.addEventListener('scroll', scroll, true);\n        \n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[]);\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n    const requestLog = () => {\n\n        // dispatch(Suppliers({page:1,per_page:10}));\n        // dispatch(Users({page:1,per_page:10}));\n        // dispatch(Products({page:1,per_page:10}));\n\n        setData(null);\n        // const a = Requests.Logs.show({per_page:rowsPerPage,page:page}).then((response:any)=>{\n        //     setData(response.data);\n        // });\n\n        const a = logsRequest.current.show({per_page:rowsPerPage,page:page}).then((response:any)=>{\n            setData(response.data);     \n        });\n        \n\n\n        //status\n\n        // Requests.Status.show().then((response:any)=>{\n        //     // setStatus(response.data);\n\n        //     setStatus([\n        //         ['Task','Products Status'],\n        //         ['New',response.data.status.New],\n        //         ['Replaced',response.data.status.Replaced],\n        //         ['Returned',response.data.status.Returned],\n        //         ['Repaired',response.data.status.Repaired],\n        //     ]);\n        // });\n\n        // statusRequest.current.show().then((response:any)=>{\n        //     // setStatus(response.data);\n\n        //     setStatus([\n        //         ['Task','Products Status'],\n        //         ['New',response.data.status.New],\n        //         ['Replaced',response.data.status.Replaced],\n        //         ['Returned',response.data.status.Returned],\n        //         ['Repaired',response.data.status.Repaired],\n        //     ]);\n        // });\n    }\n\n    // console.log(status);\n\n\n    const [page, setPage] = React.useState(1);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [data, setData] = React.useState();\n    const [open, setOpen] = React.useState(false);\n    const [modal,setModal] = React.useState();\n    const [target,setTarget] = React.useState();\n\n\n    const handleChangePage = (event:any, newPage:any) => {\n        setPage(newPage+1);\n        \n        \n\n        //there is a delay when updating state. so instead of {per_page:rowsPerPage,page:page}, we replaced {per_page:rowsPerPage,page:newPage+1} for instant update\n        setData(null);\n        // const a = Requests.Logs.show({per_page:rowsPerPage,page:newPage+1}).then((response:any)=>{\n        //     setData(response.data);\n        // });\n\n        logsRequest.current.show({per_page:rowsPerPage,page:newPage+1}).then((response:any)=>{\n            setData(response.data);\n        });\n\n    };\n    \n    const handleChangeRowsPerPage = (event:any) => {\n        if(event.target.value !== rowsPerPage ){\n            setRowsPerPage(event.target.value);\n            setPage(1);\n\n            setData(null);\n            // const a = Requests.Logs.show({per_page:event.target.value,page:1}).then((response:any)=>{\n            //     setData(response.data);\n            // });\n            logsRequest.current.show({per_page:event.target.value,page:1}).then((response:any)=>{\n                setData(response.data);\n            });\n        }        \n    };\n\n    \n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModal = (data:any,target:any) => {\n        setModal(data);\n        setOpen(true);\n        setTarget(target);\n    }\n\n    const dataModal = () => {\n\n        const ProductMasterList = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.category.name}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n        \n        const user = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">User Name</TableCell>\n                        <TableCell >{data.username}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Name</TableCell>\n                        <TableCell >{data.first_name+\" \"+data.last_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Company</TableCell>\n                        <TableCell >{data.company}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Level</TableCell>\n                        <TableCell >{data.level.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Activated</TableCell>\n                        <TableCell >{parseInt(data.activated) === 1 ? \"Yes\" : \"No\"}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const supplier = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Name</TableCell>\n                        <TableCell >{data.supplier_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">TIN</TableCell>\n                        <TableCell >{data.tin}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Address</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact Person</TableCell>\n                        <TableCell >{data.contact_person}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact No.</TableCell>\n                        <TableCell >{data.contact_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const product = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product.product_name}</TableCell>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Serial Number</TableCell>\n                        <TableCell >{data.serial_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Date</TableCell>\n                        <TableCell >{moment(data.delivery_date).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty</TableCell>\n                        <TableCell >{data.warranty+\" Month(s)\"}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty Start</TableCell>\n                        <TableCell >{moment(data.warranty_start).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">End Date</TableCell>\n                        <TableCell >{moment(data.warranty_end).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Doc</TableCell>\n                        <TableCell >{data.reference_delivery_document}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Status</TableCell>\n                        <TableCell >{data.status.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Remarks</TableCell>\n                        <TableCell >{data.remarks}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n\n        return (\n            <React.Fragment>\n            {\n                modal ?\n                    <Dialog\n                        // fullWidth={fullWidth}\n                        // maxWidth=\"sm\"\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"max-width-dialog-title\"\n                        className=\"modal-history\"\n                        disablePortal = {true}\n                    >\n                        <DialogTitle>History</DialogTitle>\n                        <DialogContent>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {\n                                        target === \"Product\"  ? product(modal)    :\n                                        target === \"Supplier\" ? supplier(modal)   : \n                                        target === \"User\"     ? user(modal)       : \n                                        target === \"ProductMasterList\" ? ProductMasterList(modal) : \"\"\n                                    }\n                                </TableBody>\n                            </Table>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => setOpen(false)}>\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog> \n                :\n\n                ''\n            }\n            </React.Fragment>\n\n            \n        );\n    }\n\n\n    \n\n    \n\n\n\n    return(\n        <div>\n            <Requests.Logs request={logsRequest} />\n            <Requests.Status request ={statusRequest} />\n            {dataModal()}\n            <Paper style={{whiteSpace:'nowrap'}} className=\"paper-table\">\n                <div className=\"header\">\n                    <div className=\"title\">User Activities</div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\">Date</TableCell>\n                                <TableCell className=\"sticky-header\">Name</TableCell>\n                                <TableCell className=\"sticky-header\">Action</TableCell>\n                                <TableCell className=\"sticky-header\">Target</TableCell>\n                                <TableCell className=\"sticky-header\">Previous</TableCell>\n                                <TableCell className=\"sticky-header\">Update</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                data ?\n                                data.data.map( (value:any,key:any) =>\n                                    <TableRow key={value.id} hover>\n                                        <TableCell>{moment(value.updated_at).format('ll, h:mm a')}</TableCell>\n                                        <TableCell style={{textTransform:'uppercase'}}>{value.user.first_name+\" \"+value.user.last_name}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.action}</TableCell>\n                                        <TableCell  style={{textTransform:'uppercase'}}>{value.target}</TableCell>\n                                        <TableCell>\n                                            {\n                                                value.previous ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.previous,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                        <TableCell>\n                                            {\n                                                value.update ?\n                                                    <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.update,value.target)}>\n                                                        View\n                                                    </Button>\n                                                :    \n                                                ''\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                )\n                                \n                                :\n                                skeletonTable()\n                            }\n                            \n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[10,25,50,100]}\n                    component=\"div\"\n                    count={data ? data.meta.total : 10}\n                    rowsPerPage={rowsPerPage}\n                    page={data ? page-1 : 0}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n} \n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n    const supplier = useSelector((state:any)=>state.Suppliers)\n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n\n        let params = {per_page:10,page:1};\n        props.setParams(params);\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"supplier\",params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"supplier\",params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"supplier\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }\n    }\n\n    return(\n        supplier.filter ?\n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_code\"\n                        value = {props.filter.supplier_code.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_code}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.supplier_code.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_code\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                                {props.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={props.filter.supplier_code.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\">\n                    \n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"supplier_name\"\n                        value = {props.filter.supplier_name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.supplier_name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.supplier_name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"supplier_name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                                {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"address\"\n                        value = {props.filter.address.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.address}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.address.filter}\n                                    onChange={setFilterControl}\n                                    name = \"address\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                                {props.filter.address.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={props.filter.address.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"contact_person\"\n                        value = {props.filter.contact_person.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.contact_person}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.contact_person.filter}\n                                    onChange={setFilterControl}\n                                    name = \"contact_person\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                                {props.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={props.filter.contact_person.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"contact_number\"\n                        value = {props.filter.contact_number.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.contact_number}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.contact_number.filter}\n                                    onChange={setFilterControl}\n                                    name = \"contact_number\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                                {props.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={props.filter.contact_number.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"email\"\n                        value = {props.filter.email.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.email}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.email.filter}\n                                    onChange={setFilterControl}\n                                    name = \"email\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                                {props.filter.email.key === '' ?'Close' : 'Clear'}\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n            className=\"dialog edit\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n            className=\"dialog edit\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 title-input\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8 input\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"submit-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Supplier Code</TableCell>\n                                        <TableCell>{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Supplier Name</TableCell>\n                                        <TableCell>{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>TIN</TableCell>\n                                        <TableCell>{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Address</TableCell>\n                                        <TableCell title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Contact Person</TableCell>\n                                        <TableCell>{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Contact No.</TableCell>\n                                        <TableCell>{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Email</TableCell>\n                                        <TableCell>{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction,SuppliersFilter, Filter as Filterer } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress, Fab } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload, FilterList } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from 'Components/Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const supplierRequest:any = React.useRef();\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const [filter, setFilter] = React.useState({\n        supplier_code       : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        address             : {filter:'iet',key:''},\n        contact_person      : {filter:'iet',key:''},\n        contact_number      : {filter:'iet',key:''},\n        email               : {filter:'iet',key:''},\n    });\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    const [params, setParams] = React.useState({page:1,per_page:10});\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState(false);\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Suppliers', control:'suppliers' }));\n        dispatch(Filterer(filter,\"supplier\",params));\n        dispatch(supplierAction({page:1,per_page:10}));\n\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    // const uploadFile = () => {\n    //     togglePointerEvents(false)\n\n    //     if(file.files.length !== 0){\n    //         const selectedFile = file.files[0];\n    //         let filename = selectedFile.name.split('.').pop();\n            \n    //         if( !(filename === 'xls' || filename === 'xlsx')) {\n    //             enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             return;\n    //         }else{\n    //             uploadSheet(selectedFile);\n    //         }\n    //     }\n        \n    // }\n\n\n    // const uploadSheet = async (file:File) => {\n\n    //     setUpload({\n    //         ...upload,\n    //         uploading : true,\n    //     });\n\n    //     let response = await supplierRequest.current.addFile(file);\n\n    //     switch(response.status){\n    //         case 406 :\n    //             enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //         case 200 :\n\n    //             enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n    //             togglePointerEvents(true);\n    //             dispatch(Filterer(filter,\"supplier\",params));\n\n    //             setUpload({\n    //                 open      : true,\n    //                 uploading : false,\n    //                 result    : response.data\n    //             });\n\n    //             return;\n    //         default :\n    //             enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n\n    //             setUpload({\n    //                 ...upload,\n    //                 uploading : false,\n    //             });\n    //             return;\n    //     }\n    // }\n\n    // const uploadFileModal = () =>{\n    //     if(upload.uploading){\n    //         return (\n    //             <Dialog\n    //                 maxWidth=\"xs\"\n    //                 open={upload.uploading}\n    //                 disableBackdropClick\n    //                 className=\"uploading-processing\"\n    //             >\n    //                 <DialogContent>\n    //                     <div>\n    //                         <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n    //                             <CircularProgress />\n    //                         </div>\n    //                         <div className=\"status-submit-upload\">\n    //                             Uploading\n    //                         </div>\n    //                     </div>\n    //                 </DialogContent>\n    //             </Dialog>\n    //         );\n    //     }else{\n    //         return null;\n    //     }\n    // }\n\n    const resetError = () => {\n        setResponseMessage(initSupplierError);\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n\n        let param = params;\n        param.page = newPage+1;\n        setParams(param);\n\n        dispatch(Filterer(filter,\"supplier\",param));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"supplier\",paran));\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await supplierRequest.current.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await supplierRequest.current.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Requests.Suppliers request={supplierRequest} />\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"supplier\"\n            />\n\n            <Paper className=\"paper-table\">\n                <div className=\"header\">\n                    <div className=\"title\">Suppliers</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                // console.log(filterSwitch)\n                                dispatch(SuppliersFilter(!supplierState.filter));\n                                // setFilter(initFilter);\n                                // setParams(initParams);\n                            }} >\n                            <FilterList />\n                        </Fab>\n                        {/* <Fab size=\"small\" color=\"primary\" onClick={(event:any)=>{\n                            setTableAnchor(event.currentTarget);\n                            setTableOpen(!tableOpen);\n                        }}>\n                            <ViewColumn />\n                        </Fab> */}\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table className=\"product-list\" size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\" align=\"center\">Supplier Code</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Name</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Address</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Contact Person</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Contact No.</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"center\">Email</TableCell>       \n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            <Filter filter={filter} setFilter={setFilter} params={params} setParams={setParams}/>\n                            {\n                                supplierState.data ?\n                                    supplierState.data.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                            <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                            <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                            <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                            <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                            <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                        </TableRow>\n                                    ))\n                                :   skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    {\n                        user.level !== 3 ?\n                            <React.Fragment>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        setUpload(true);\n                                    }}\n                                    className=\"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </React.Fragment>\n                        : null\n                    }\n                    \n                    <table>\n                        <tbody>\n                            <tr>\n                                <TablePagination\n                                    rowsPerPageOptions={[10,25,50,100]}\n                                    colSpan={0}\n                                    count={supplierState.data ? supplierState.data.data.meta.total : 10}\n                                    rowsPerPage={params.per_page}\n                                    page={supplierState.data ? params.page-1 : 0}\n                                    onChangePage={handleChangePage}\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                                    ActionsComponent={TablePaginationActions}\n                                />\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch,useSelector} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n    const user = useSelector((state:any)=>state.Users);\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n\n        let params = {per_page:10,page:1};\n\n        props.setParams(params);\n\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"user\",params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"user\",params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"user\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        user.filter ? \n            <TableRow>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"username\"\n                        value = {props.filter.username.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = { ref.username }\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.username.filter}\n                                    onChange={setFilterControl}\n                                    name = \"username\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                                {props.filter.username.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={props.filter.username.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"filter\">\n                    \n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"name\"\n                        value = {props.filter.name.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.name}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.name.filter}\n                                    onChange={setFilterControl}\n                                    name = \"name\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                                {props.filter.name.key === '' ?'Close' : 'Clear'}                            \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={props.filter.name.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"off\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"company\"\n                        value = {props.filter.company.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.company}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.company.filter}\n                                    onChange={setFilterControl}\n                                    name = \"company\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                                {props.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { props.filter.company.key === '' }>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\" className=\"filter\">\n                    <TextField\n                        id=\"outlined-email-input\"\n                        className=\"input\"\n                        autoComplete=\"anyrandomstring\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        name = \"email\"\n                        value = {props.filter.email.key}\n                        onChange = {setText}\n                        onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                        onKeyDown = {onKey}\n                        inputRef = {ref.email}\n                    />\n                    \n                    <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                        <Paper className=\"popper-paper\">\n                            <FormControl variant=\"outlined\" className=\"selector\">\n                                <Select\n                                    value={props.filter.email.filter}\n                                    onChange={setFilterControl}\n                                    name = \"email\"\n                                >\n                                    <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                    <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                    <MenuItem value=\"c\">Contains</MenuItem>\n                                    <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                    <MenuItem value=\"sw\">Starts With</MenuItem>\n                                    <MenuItem value=\"ew\">Ends With</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                                {props.filter.email.key === '' ?'Close' : 'Clear'}                        \n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === ''}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n                <TableCell align=\"center\">\n                    <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                        <Select\n                            value={props.filter.level.key}\n                            onChange={setText}\n                            name=\"level\"\n                            onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                        >\n                            <MenuItem value={0}>All</MenuItem>\n                            <MenuItem value={1}>Admin</MenuItem>\n                            <MenuItem value={2}>Encoder</MenuItem>\n                            <MenuItem value={3}>Viewer</MenuItem>\n                        </Select>\n                    \n                    </FormControl>\n                    <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n\n                <TableCell align=\"center\">\n                    <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                        <Select\n                            value={props.filter.activated.key}\n                            onChange={setText}\n                            name=\"activated\"\n                            onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                        >\n                            <MenuItem value={0} >All</MenuItem>\n                            <MenuItem value={1}>Yes</MenuItem>\n                            <MenuItem value={2}>No</MenuItem>\n                            \n                        </Select>\n                    \n                    </FormControl>\n                    <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                        <Paper className=\"popper-paper\">\n                            <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                                Close\n                            </Button>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                                Filter\n                            </Button>\n                        </Paper>\n                    </Popper>\n                </TableCell>\n            \n            </TableRow>\n        : null\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface show{\n    users : any,\n    initModalEdit:any,\n    modalShow : boolean,\n    \n    setModalShow: any,\n}\n\nconst Show = (props:show) => {\n\n    return(\n        props.modalShow ?\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog show\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper>\n                            <Table>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell>Username</TableCell>\n                                        <TableCell>{props.users.username}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>{props.users.first_name+\" \"+props.users.last_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell>Company</TableCell>\n                                        <TableCell>{props.users.company}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell align=\"left\" >{props.users.email}</TableCell>\n                                    </TableRow>\n                                    {/* <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                        <TableCell align=\"left\"></TableCell>\n                                    </TableRow> */}\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                        <TableCell align=\"left\">{props.users.level === 1 ? 'Admin' : props.users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                        <TableCell align=\"left\">{props.users.activated? 'Yes' : 'No'}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={props.initModalEdit} \n                        color=\"primary\" \n                        variant=\"contained\"\n                    >  \n                        <Edit />\n                        Edit\n                    </Button>\n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\nimport Select from 'react-select';\n\ninterface Edit{\n    modalEdit : any,\n    usersInput : any,\n    responseMessage : any,\n    submit : boolean,\n\n\n    updateInput : any,\n    submitForm(a:any,b:any) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst Edit = (props:Edit) => {\n\n    let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n    let activated = [\n        {label:'Yes', value : 1,target:{name:'activated',value:1}},\n        {label:'No', value : 0,target:{name:'activated',value:0}},\n    ]\n\n    return(\n        props.modalEdit ? \n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalEdit}\n                onClose={ () =>props.setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog edit\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                <DialogContent style={{overflow:'visible'}}>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Username\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"username\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.username}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.username.error}\n                                            helperText = {props.responseMessage.username.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        First Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"first_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.first_name}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.first_name.error}\n                                            helperText = {props.responseMessage.first_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Last Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"last_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.last_name}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.last_name.error}\n                                            helperText = {props.responseMessage.last_name.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Company\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"company\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.company}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.company.error}\n                                            helperText = {props.responseMessage.company.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Level\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={level}\n                                            // isClearable\n                                            name = 'level'\n                                            defaultValue = {level.find((element:any) => element.value === props.usersInput.level)}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Activated\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={activated}\n                                            // isClearable\n                                            name = 'activated'\n                                            defaultValue = {activated.find((element:any) => \n                                                element.value === props.usersInput.activated\n                                            )}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"email\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.email}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.email.error}\n                                            helperText = {props.responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.password.error}\n                                            helperText = {props.responseMessage.password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Confirm Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"confirm_password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.confirm_password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.confirm_password.error}\n                                            helperText = {props.responseMessage.confirm_password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\nimport Select from 'react-select';\n\ninterface Add{\n    modalAdd : any,\n    usersInput : any,\n    responseMessage : any,\n    submit : boolean,\n\n\n    updateInput : any,\n    submitForm(a:any,b:any) : void,\n    setModalAdd(a:boolean) : void,\n}\n\nconst Add = (props:Add) => {\n\n    let level = [\n        {label:'Admin', value : 1,target:{name:'level',value:1}},\n        {label:'Encoder', value : 2,target:{name:'level',value:2}},\n        {label:'Viewer', value : 3,target:{name:'level',value:3}},\n    ];\n\n\n\n    let activated = [\n        {label:'Yes', value : 1,target:{name:'activated',value:1}},\n        {label:'No', value : 0,target:{name:'activated',value:0}},\n    ]\n\n    return(\n        props.modalAdd ? \n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalAdd}\n                onClose={ () =>props.setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n                className=\"dialog edit\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add User Details</DialogTitle>\n                <DialogContent style={{overflow:'visible'}}>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Username\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"username\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.username}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.username.error}\n                                            helperText = {props.responseMessage.username.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        First Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"first_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.first_name}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.first_name.error}\n                                            helperText = {props.responseMessage.first_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Last Name\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"last_name\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.last_name}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.last_name.error}\n                                            helperText = {props.responseMessage.last_name.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Company\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"company\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.company}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.company.error}\n                                            helperText = {props.responseMessage.company.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Activated\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={activated}\n                                            // isClearable\n                                            name = 'activated'\n                                            defaultValue = {activated[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Level\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <Select\n                                            options={level}\n                                            // isClearable\n                                            name = 'level'\n                                            defaultValue = {level[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            classNamePrefix=\"select\"\n                                            className=\"select-container\"\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"email\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.email}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.email.error}\n                                            helperText = {props.responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.password.error}\n                                            helperText = {props.responseMessage.password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 title-input\">\n                                        Confirm Password\n                                    </div>\n                                    <div className=\"col-md-8 input\">\n                                        <TextField\n                                            type=\"password\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"text\"\n                                            name = \"confirm_password\"\n                                            onChange = {props.updateInput}\n                                            value = {props.usersInput.confirm_password}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.confirm_password.error}\n                                            helperText = {props.responseMessage.confirm_password.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        : null\n    );\n}\n\nexport default Add;","import React from 'react';\nimport { NavigationTitle,Users as user,Filter as Filterer,UsersFilter } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Fab} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {Close, FilterList } from '@material-ui/icons';\nimport Filter from './Filter';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Add from './Add';\n\nconst Users = (props:any) =>{\n\n    const userRequest:any = React.useRef();\n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        username        : {filter:'iet',key:''},\n        name            : {filter:'iet',key:''},\n        company         : {filter:'iet',key:''},\n        email           : {filter:'iet',key:''},\n        level           : {filter:'iet',key:0},\n        activated       : {filter:'iet',key:0},\n    });\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : 1,\n        level               : 1,\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({control:'users'}));\n        dispatch(Filterer(filter,\"user\",params));\n        dispatch(user({page:1,per_page:10}))\n\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[props]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"user\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"user\",paran));\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await userRequest.current.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await userRequest.current.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n    \n    return(\n        <React.Fragment>\n            <Requests.User request={userRequest} />\n            <Show users = {users} initModalEdit = {initModalEdit} modalShow = {modalShow} setModalShow = {setModalShow} />\n            <Edit \n                modalEdit = {modalEdit}\n                usersInput = {usersInput}\n                responseMessage = {responseMessage}\n                submit = {submit}\n                updateInput = {updateInput}\n                submitForm = {submitForm}\n                setModalEdit = {setModalEdit}\n            />\n            <Add \n                modalAdd = {modalAdd}\n                usersInput = {usersInput}\n                responseMessage = {responseMessage}\n                submit = {submit}\n                updateInput = {updateInput}\n                submitForm = {submitForm}\n                setModalAdd = {setModalAdd}\n            />\n            <Paper className=\"paper-table\">\n                <div className=\"header\">\n                    <div className=\"title\">Users</div>\n                    <div className=\"controls\">\n                        <Fab size=\"small\" color=\"primary\" onClick={()=>{\n                                dispatch(UsersFilter(!usersState.filter));\n                            }} >\n                            <FilterList />\n                        </Fab>\n                        {/* <Fab size=\"small\" color=\"primary\" onClick={(event:any)=>{\n                            setTableAnchor(event.currentTarget);\n                            setTableOpen(!tableOpen);\n                        }}>\n                            <ViewColumn />\n                        </Fab> */}\n                    </div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Username</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Name</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Company</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Email</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Level</TableCell>\n                                <TableCell className=\"sticky-header\"  align=\"center\">Activated</TableCell>       \n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            <Filter filter={filter} setFilter={setFilter} params={params} setParams={setParams}/>\n                            {\n                                usersState.data ?\n                                    usersState.data.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                            <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                            <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                            <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                            <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                            <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                        </TableRow>\n                                    ))\n                                :   skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                        ADD NEW\n                    </Button>\n\n                    <Table>\n                        <tbody>\n                            <tr>\n                                <TablePagination\n                                    rowsPerPageOptions={[10,25,50,100]}\n                                    colSpan={0}\n                                    count={usersState.data ? usersState.data.data.meta.total : 10}\n                                    rowsPerPage={params.per_page}\n                                    page={usersState.data ? params.page-1 : 0}\n                                    onChangePage={handleChangePage}\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                                    ActionsComponent={TablePaginationActions}\n                                />\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport AsyncCreatableSelect from 'react-select/async-creatable'\n\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n    input : any,\n    setInput : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '100%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none'\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Edit = (props:Add) => {\n    const masterCodesRequest:any = React.useRef();\n    const categoryRequest:any = React.useRef();\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    // const [input, setInput] = React.useState({\n    //     product_code : '',\n    //     product_name : '',\n    //     category     : '',\n    // });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n    const [categoryValue,setCategoryValue] = React.useState('');\n    const [categoryPreValue,setCategoryPreValue] = React.useState();\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            loadPreValues();\n        }\n    },[props]);\n\n\n    const loadPreValues = async () => {\n\n        let product = await categoryRequest.current.get(props.input.category);\n\n\n        setCategoryPreValue({\n            value : product.data.data.id,\n            label : product.data.data.name,\n            target : {\n                value : product.data.data.id,\n                name  : \"category\"\n            }\n        });\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleChangeText = (event:any) => {\n        props.setInput({\n            ...props.input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    const loadOption = async(inputValue:string) => {\n        let category =  await categoryRequest.current.show({search:inputValue});\n\n        return category.data.data.map((value:any)=>{\n            return{\n                value : value.id,\n                label : value.name,\n                target:{\n                    value : value.id,\n                    name : \"category\",\n                }\n            }\n        });\n    }\n    \n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await masterCodesRequest.current.update(props.input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully Updated Product Code\",{variant:\"success\",action:actions});\n\n                // let a = await masterCodesRequest.current.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes({per_page:10,page:1}));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Update product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    return (\n        props.open ?\n        <React.Fragment>\n            <Requests.Category request={categoryRequest} />\n            <Requests.MasterCodes request={masterCodesRequest} />\n            \n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n                value = {categoryValue}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Edit Product Code</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {props.input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {props.input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <AsyncCreatableSelect\n                                cacheOptions\n                                defaultOptions\n                                onChange = {handleChangeText}\n                                loadOptions ={(value) =>loadOption(value)}\n                                onCreateOption = {(inputValue)=>{\n                                    setCategoryValue(inputValue);\n                                    setCategoryHandler(true);\n                                }}\n                                // value={input.category}\n                                className={classes.category}\n                                value={categoryPreValue}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n                        <button type=\"submit\" hidden />\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n\n        : null\n      );\n}\n\nexport default Edit;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {NavigationTitle,MasterCodes,Filter as Filterer} from 'Redux/Actions';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, CircularProgress, DialogContent } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from '../../../Services';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport Upload from 'Components/Upload';\n\n\n\nconst Summary = (props:any) => {\n\n    const dispatch = useDispatch();\n    const masterCode = useSelector( (state:any) => state.MasterCodes.data );\n    const masterCodesRequest:any = React.useRef();\n    const [upload,setUpload] = React.useState(false);\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar    \n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        product_code     : {filter:'iet',key:''},\n        product_name     : {filter:'iet',key:''},\n        category         : {filter:'iet',key:''},\n    });\n    const [ open, setOpen ] = React.useState(false);\n    \n    \n    // const [ upload,setUpload ] = React.useState({ \n    //     uploading   : false,\n    //     open       : false,\n    //     result    : [], \n    // });\n\n    React.useEffect(()=>{\n        dispatch(MasterCodes({per_page:10,page:1}));\n        dispatch(NavigationTitle({control:\"product_master_file_maintenance\"}));\n\n        window.addEventListener('scroll', scroll, true);\n        return () =>{\n            window.removeEventListener('scroll', scroll);\n        }\n    },[]);\n\n\n    const scroll = () => {\n        let scrollY = window.scrollY;\n        let selector:any = window.document.getElementsByClassName('sticky-header');\n        const changeAll = (style:string) => {\n            for(var i = 0;i<selector.length;i++){\n                \n                if(style !== '0px'){\n                    selector[i].style.background = '#3f50b5';\n                    selector[i].style.color = 'white';\n                }else{\n                    selector[i].style.background = 'white';\n                    selector[i].style.color = 'unset';\n                }\n\n                selector[i].style.top = style;\n            }\n        }\n        if(scrollY > 92){\n            changeAll(scrollY - 92 + 'px');\n        }else{\n            changeAll('0px');\n        }\n    }\n\n\n\n\n    let file:HTMLInputElement;\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    // const uploadFile = () => {\n    //     togglePointerEvents(false);\n    //     if(file.files.length !== 0){\n    //         const selectedFile = file.files[0];\n    //         let filename = selectedFile.name.split('.').pop();\n            \n    //         if( !(filename === 'xls' || filename === 'xlsx')) {\n    //             enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n    //             togglePointerEvents(true);\n    //             return;\n    //         }else{\n    //             // uploadSheet(selectedFile);\n    //         }\n    //     }\n    // }\n\n\n    // const uploadFileModal = () =>{\n    //     if(upload.uploading){\n    //         return (\n    //             <Dialog\n    //                 maxWidth=\"xs\"\n    //                 open={upload.uploading}\n    //                 disableBackdropClick\n    //                 className=\"uploading-processing\"\n    //             >\n    //                 <DialogContent>\n    //                     <div>\n    //                         <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n    //                             <CircularProgress />\n    //                         </div>\n    //                         <div className=\"status-submit-upload\">\n    //                             Uploading\n    //                         </div>\n    //                     </div>\n    //                 </DialogContent>\n    //             </Dialog>\n    //         );\n    //     }else{\n    //         return null;\n    //     }\n    // }\n\n\n    /**********************/\n\n\n\n\n    //************** for edit\n\n    const [input, setInput] = React.useState({\n        id           : '',\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [openEdit, setOpenEdit] = React.useState(false);\n\n    const handleEdit = () => {\n        setOpenEdit(!openEdit)\n    }\n\n    //**************\n\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Product Master File Maintenance',control:\"product_master_file_maintenance\"}));\n        dispatch(Filterer(filter,\"master\",params));\n        \n        // return () => {\n        //     dispatch(NavigationTitle(''));\n        // }\n    },[])\n\n    const handleAdd = () => {\n        setOpen(!open);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"master\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        setParams(paran);\n        dispatch(Filterer(filter,\"master\",paran));\n    };\n\n    const initEdit = (a:any) => {\n\n        setInput({\n            id : a.id,\n            product_code : a.product_code,\n            product_name : a.product_name,\n            category : a.category.id\n        });\n        setOpenEdit(true);\n    }\n\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"center\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n    \n    return(\n        <React.Fragment>\n            <Requests.MasterCodes request={masterCodesRequest} />\n            <Add open={open} handleClose={handleAdd}/>\n            <Edit open={openEdit} handleClose={handleEdit} per_page={params.per_page} page={params.page}  input = {input} setInput = {setInput}/>\n           \n            <Upload\n                open      = {upload}\n                setOpen   = {setUpload}\n                type      = \"masterfile\"\n            />\n            \n            \n            <Paper className=\"paper-table\">\n                <div className=\"header\">\n                    <div className=\"title\">Product Maintenance</div>\n                </div>\n                <div className=\"custom-table\">\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell className=\"sticky-header\" align=\"left\">Product Code</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"left\">Product Name</TableCell>\n                                <TableCell className=\"sticky-header\" align=\"left\">Category</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        \n                        <TableBody>\n                            {\n                                masterCode ?\n                                    masterCode.data.data.map((key:any,id:number)=>(\n                                        <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initEdit(key)} >\n                                            <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                            <TableCell align=\"left\" title={key.product_name}>{key.product_name}</TableCell>\n                                            <TableCell align=\"left\" title={key.category}>{key.category.name}</TableCell>\n                                        </TableRow>\n                                    ))\n                                :   \n                                skeletonTable()\n                            }\n                        </TableBody>\n                    </Table>\n                </div>\n                <div className=\"footer\">\n                    <Button onClick={ () => handleAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                        ADD NEW\n                    </Button>\n                    \n    \n                    <Button \n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={(event)=>{\n                            setUpload(true);\n                        }}\n                        className = \"product-add-file\"\n                    >\n                        <CloudUpload />&nbsp;  \n                        Import file\n                    </Button>\n                    <table>\n                        <tbody>\n                            <tr>\n\n                                <TablePagination\n                                    rowsPerPageOptions={[10,25,50,100]}\n                                    colSpan={0}\n                                    count={masterCode ? masterCode.data.meta.total : 10}\n                                    rowsPerPage={params.per_page}\n                                    page={masterCode ? params.page-1 : 0}\n                                    onChangePage={handleChangePage}\n                                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                                    ActionsComponent={TablePaginationActions}\n                                    className=\"product-pagination\"\n                                />\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </Paper>\n        </React.Fragment>\n    );\n\n}\n\nexport default Summary;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch,useSelector } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User,loggedIn } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n\n    const userRequest:any = React.useRef();\n    const [ finish, setFinish ] = React.useState(false);\n    const dispatch = useDispatch();\n    const user = useSelector((state:any) => state.UserAccount.data);\n    \n    useEffect(()=>{\n        check();\n    },[Token.exist()]);\n\n    const check = async () => {\n        if(Token.exist()){\n            const token:any = jwt_decode(Token.get());\n            const useraccount = await userRequest.current.get(token.sub);\n\n            if(useraccount.status === 200){\n                dispatch(User(useraccount.data.data));\n                dispatch(loggedIn(true));\n                // setInitialized(true);\n            }else{\n                Token.remove();\n            }\n        }else{\n            dispatch(loggedIn(false));\n        }\n        setFinish(true);\n    }\n\n\n    if(!finish){\n        return <Requests.User request={userRequest} />;\n    }\n\n    if(Token.exist()){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.exist()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import * as Component from 'Components';\nimport {ComponentMiddleware,LoginMiddleware} from 'Middleware';\n\nexport const Navigation = [\n    {\n        path        : \"/\",\n        component   : Component.Home,\n        middleware  : ComponentMiddleware,\n        exact       : true,\n    },{\n        path        : \"/login\",\n        component   : Component.Login,\n        middleware  : LoginMiddleware,\n        exact       : false,\n    }\n    ,{\n        path        : \"/products\",\n        component   : Component.Products,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/suppliers\",\n        component   : Component.Suppliers,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/users\",\n        component   : Component.Users,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : \"/reports\",\n        component   : Component.Reports,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : '/settings',\n        component   : Component.Settings,\n        middleware  : ComponentMiddleware,\n        exact       : false\n    },{\n        path        : '/summary',\n        component   : Component.Summary,\n        middleware  : ComponentMiddleware,\n        exact       : false,\n    }\n];\n","import React from 'react';\nimport {useSelector,useDispatch} from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport {error as errorAction} from 'Redux/Actions'\nimport {useSnackbar} from 'notistack';\n\nconst Error = (props:any):any => {\n\n    const dispatch = useDispatch();\n    const error = useSelector((state:any)=>state.status.error);\n    // const loggedIn = useSelector((state:any)=>state.status.loggedIn);\n    const {enqueueSnackbar,closeSnackbar} = useSnackbar();\n\n    const action = (key:any) => (\n        <Button variant=\"text\" color=\"inherit\" onClick={ () => closeSnackbar(key)}>\n            <Close />\n        </Button>\n    );\n\n    React.useEffect(()=>{\n\n        if(error){\n            enqueueSnackbar('Something went wrong, please try again later!!!',{\n                variant:\"error\",\n                anchorOrigin:{\n                    vertical:'top', \n                    horizontal:'right'\n                },\n                action : action\n            });\n            \n            dispatch(errorAction(false));\n        }\n\n    },[error]);\n\n    return null;\n\n}\n\nexport default Error;","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {Navigation} from './Navigation';\nimport { useSelector } from 'react-redux';\nimport Error from './Error';\n\nconst Navigations = (props:any) =>{\n\n    const status = useSelector((state:any)=>state.status.loggedIn);\n\n    return(\n        <React.Fragment>\n            <div className=\"container-body\">\n                    \n                    <div className=\"container\">\n            <BrowserRouter> \n                {status ? \n                    \n                    <Component.Navigation />\n                 : ''}\n                <Switch>\n                    \n                    {\n                        Navigation.map((element,index) => \n                            <Route \n                                exact={element.exact} \n                                path ={element.path} \n                                render= {(props) => <element.middleware {...props} component={element.component} />} \n                                key={index}\n                            />\n                        )\n                    }\n                    <Route component={Component.NotFound} />\n                    <Error {...props} />\n                </Switch>\n            </BrowserRouter>\n            </div></div>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT} from '../Actions/Types';\n\nconst initialState = {\n\ttitle \t: '',\n\tcontrol : '', \n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttitle : action.payload.title,\n\t\t\t\tcontrol : action.payload.control,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\n\ntype asc = null | boolean;\nlet ascVal:asc = null;\n\nconst initialState = {\n\tdata \t: '',\n\ttable\t: {\n\t\tsupplier_code\t: {name : 'Supplier Code',\t\tshow : true, asc : ascVal},\n\t\tsupplier_name\t: {name : 'Supplier Name',\t\tshow : true, asc : ascVal},\n\t\tproduct_code\t: {name : 'Product Code',\t\tshow : true, asc: ascVal},\n\t\tproduct_name\t: {name : 'Product Name',\t\tshow : true,asc:ascVal},\n\t\tcategory\t\t: {name : 'Category',\t\t\tshow : true,asc:ascVal},\n\t\tserial\t\t\t: {name : 'Serial Number',\t\tshow : true,asc:ascVal},\n\t\twarranty\t\t: {name : 'Warranty',\t\t\tshow : false,asc:ascVal},\n\t\twarranty_start\t: {name : 'Warranty Start',\t\tshow : false,asc:ascVal},\n\t\twarranty_end\t: {name : 'Warranty End',\t\tshow : false,asc:ascVal},\n\t\tstatus\t\t\t: {name : 'Status',\t\t\t\tshow : false,asc:ascVal},\n\t\tdelivery_date\t: {name : 'Delivery Date',\t\tshow : false,asc:ascVal},\n\t\treference_delivery_document\t: {name : 'Delivery Document',\tshow : false,asc:ascVal},\n\t\tcreated_by\t\t: {name : 'Created By',\t\t\tshow : false,asc:ascVal},\n\t\tremarks \t\t: {name : 'Remarks',\t\t\tshow : false,asc:ascVal}\n\t},\n\tfilter : false\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr.data:\n      \t\treturn {\n\t\t\t\t...state,\n        \t\tdata : action.payload,\n\t\t\t}\n\t\tcase pr.table:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttable : action.payload,\n\t\t\t}\n\t\tcase pr.filter:\n\t\t\treturn{\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload\n\t\t\t}\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n\tdata : '',\n\ttable: {\n\t\tsupplier_code\t: {name : 'Supplier Code',show:false},\n\t\tsupplier_name\t: {name : 'Name',show:false},\n\t\taddress\t\t\t: {name : 'Address',show:false},\n\t\tcontact_person \t: {name : 'Contact Person',show:false},\n\t\tcontact_number\t: {name : 'Contact Number',show:false},\n\t\temail\t\t\t: {name : 'Email',show:false}\n\t},\n\tfilter : false,\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp.data:\n      \t\treturn {\n\t\t\t\t...state,\n        \t\tdata :  action.payload,\n\t\t\t}\n\t\tcase sp.filter:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload,\n\t\t\t}\n\t\tcase sp.table: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttable : action.payload,\n\t\t\t}\n\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n\tdata : '',\n\tfilter : false,\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users.data:\n\t\t\treturn {\n\t\t\t\t...state,\n        \t\tdata : action.payload,\n\t\t\t}\n\t\tcase users.filter:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { MasterCodes as MC } from '../Actions/Types';\n\nconst initialState = {\n\tdata : \"\",\n};\n\nconst MasterCodes = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase MC:\n\t\t\treturn {\n\t\t\t\tdata : action.payload\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default MasterCodes;","import { Category as ct } from '../Actions/Types';\n\nconst initialState:any = [];\n\nconst Category = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase ct:\n      \t\treturn action.payload;\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Category;","import { status as stat } from '../Actions/Types';\n\nconst initialState = {\n\tloggedIn    : false,\n\terror       : false, \n};\n\nconst status = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase stat.loggedIn:\n      \t\treturn {\n\t\t\t\t...state,\n                loggedIn : action.payload\n            }\n        case stat.error:\n            return {\n                ...state,\n                error : action.payload\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default status;","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\nimport MasterCodes from './MasterCodes';\nimport Category from './Category';\nimport status from './status';\nimport { Token } from 'Services';\nimport {status as stat} from '../Actions/Types';\n\n\nconst appReducer =  combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search,\n    MasterCodes,\n    Category,\n    status\n});\n\nconst rootReducer = (state:any,action:any) => {\n\n\tif(action.type === stat.loggedIn && action.payload === false){\n        Token.remove();\n\t\tstate = {};\n\t}\n\n\treturn appReducer(state,action);\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst a = (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  a ? \n    compose(\n      applyMiddleware(...middleware),a\n    )\n    :\n    compose(\n      applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport './App.scss';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <Navigations />\n                </MuiPickersUtilsProvider>\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}