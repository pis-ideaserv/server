{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Middleware/ComponentMiddleware.tsx","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","prefix","Url","login","logout","refresh","user","products","suppliers","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","Promise","resolve","setTimeout","params","callback","data","stop","_x2","_handle_error","_callee2","b","_context2","retry","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","target","query","Filter","component","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","valid","jwt_decode","sub","react_default","createElement","react_router","to","pathname","state","from","location","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","name","submitForm","jwt","preventDefault","checkUser","activated","returnUrl","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","AssignmentTurnedIn","Assessment","SupervisorAccount","esm_Settings","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","forEach","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","list","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","Commute","SupervisedUserCircle","Settings","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","checkQueryParams","removeEventListener","param","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","navigate","Navigation_SidebarDesktop","Backdrop","children","_useState","product_code","product_description","serial_number","warranty","warranty_start","warranty_end","_useState2","popper","setPopper","_useState3","_useState4","setFilter","reset","controller","Filter_objectSpread","setText","submitFilter","Filterer","onKey","e","length","TableRow","TableCell","align","onFocus","onKeyDown","Popper","allowKeyboardControl","animateYearScrolling","moment","initErrroMessage","delivery_date","reference_delivery_document","initProductInput","setPage","modalShow","setModalShow","modalAdd","setModalAdd","setProduct","_React$useState13","uploading","_React$useState14","upload","setUpload","_React$useState15","_React$useState16","productInput","setProductInput","_React$useState17","_React$useState18","productState","supplierState","supplierRedux","checkParams","productRedux","checkExcelFormat","_loop","i","_ret","date","keys","togglePointerEvents","v","Products_objectSpread","element","initModalEdit","Table","TableBody","supplier_code","setFullYear","getFullYear","created_by","options","supplier_name","react_select_browser_esm","defaultValue","find","isDisabled","minDate","modaledit","modaladd","disableBackdropClick","TableHead","Products_Filter","hover","onDoubleClick","tableCell","Skeleton","height","skeletonTable","TableFooter","today","initModalAdd","hidden","accept","ref","input","files","selectedFile","filename","split","pop","FileReader","onload","result","workbook","xlsx","read","cellDates","cellNF","cellText","sheet_to_json","Sheets","SheetNames","dateNF","readAsBinaryString","_unused","click","CloudUpload","TablePagination","rowsPerPageOptions","colSpan","count","meta","total","rowsPerPage","onChangePage","newPage","ActionsComponent","TablePaginationActions","Reports","address","contact_person","contact_number","Suppliers_Filter_objectSpread","console","log","initSupplierError","tin","initSupplier","setSupplier","supplierInput","setSupplierInput","supplierAction","Suppliers_objectSpread","Suppliers_Filter","Users_Filter_objectSpread","FormControl","Select","MenuItem","initUsers","users","setUsers","usersState","Users_objectSpread","Users_Filter","initModalShow","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","Navigations","react_router_dom","exact","strict","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7051f035.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n}\n\nconst Url = {\n    //auth\n    'login'     :   server_url+prefix.auth+'login',\n    'logout'    :   server_url+prefix.auth+'logout',\n    'refresh'   :   server_url+prefix.auth+'refresh',\n    'check'     :   server_url+prefix.auth+'check',\n\n    //user\n    'user'       : server_url+prefix.user,\n    'products'   : server_url+prefix.products,\n    'suppliers'  : server_url+prefix.supplier,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        if(a.error.response.status === 401){\n            await new Promise( resolve => setTimeout(resolve, 60000) );\n            if(a.params){\n                return a.callback(a.params);\n            }\n\n            return a.callback();\n        }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product_code                : string,\n    product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\";\n\nexport const Filter = (filter:any,component:component) => {\n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(filter),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(filter),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(filter),\n                    });\n                }\n        }\n\n        \n}\n","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            if(await Token.valid()){\n    \n                const id:any = jwt_decode(Token.get());\n                const user:Requests.Format = await Requests.User.get(id.sub);\n                if(user.status === 200){\n                    updateUser(User(user.data));\n    \n                    setToken(true);\n                }\n            }\n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nconst title = 'Product Inquery System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = (user:Requests.Format):any => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { AssignmentInd, Assessment, AssignmentTurnedIn, Assignment, SupervisorAccount, Settings } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'100px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/user-logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    \n                        <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        {props.user.first_name+\" \"+props.user.last_name}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        &nbsp;Logout\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\nconst SidebarList = (props:any) => {\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}>\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search} from 'Redux/Actions';\n\n// const menu_title = \"Product Inquery System\";\nconst logo = \"/img/ideaserv.png\";\nlet sidebar_properties = [\n\t{\n\t\tname : \"Home\",\n\t\ticon : Home,\n\t\turl  : \"/\" \n\t},{\n\t\tname : \"Products\",\n\t\ticon : Laptop,\n\t\turl  : '/products',\n\t},{\n\t\tname : \"Suppliers\",\n\t\ticon :  Commute,\n\t\turl  : \"/suppliers\", \n\t},{\n\t\tname : \"Users\",\n\t\ticon :  SupervisedUserCircle,\n\t\turl  : \"/users\", \n\t},{\n\t\tname : \"Reports\",\n\t\ticon :  Assignment,\n\t\turl  : \"/reports\", \n\t},{\n\t\tname : \"Settings\",\n\t\ticon :  Settings,\n\t\turl  : \"/settings\",\n\t\tprops: ''\n\t}\n]\n\n\nconst Navigation = (props:any) => {\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tif(reduxUser.level === 2){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t},{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}\n\t\t]\n\t}\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\tcheckQueryParams();\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[]);\n\n\n\tconst checkQueryParams = () => {\n\t\tconst param = new URLSearchParams(props.location.search);\n\t\t\n\t\tif(param.get('search')){\n\t\t\tdispatch(Search.value(param.get('search')));\n\t\t}\n\t}\n\t\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\twindow.location.reload();\n\t\tprops.history.push('/login');\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product_code\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product_code        : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier            : '',\n        product_code        : '',\n        product_description : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        warranty_end        : '',\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product_code          = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }else{\n            if(filter[control] !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : '',\n                });\n                \n                a[control] = \"\";\n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name] = '';    \n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {filter.supplier}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_code\"\n                    value = {filter.product_code}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_code)? \"simple-popper\" : undefined} open={Boolean(popper.product_code)} anchorEl={popper.product_code}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {filter.product_description}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {filter.serial_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {filter.warranty}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({...filter,warranty_start:moment(event).format(\"YYYY-MM-DD\")})}\n                    value = {filter.warranty_start == '' ? null : moment(filter.warranty_start).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({...filter,warranty_end:moment(event).format(\"YYYY-MM-DD\")})}\n                    value = {filter.warranty_end == '' ? null : moment(filter.warranty_end).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React, { useEffect, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, Edit, Save, Cancel, SaveAlt, CloudUpload } from '@material-ui/icons';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product_code                : {error:false,message:''},\n    product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''}\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product_code        : '',\n    product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n}\n\n\nconst Products = (props:any) =>{\n    \n    const [ page, setPage ] = React.useState(0);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n\n    const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n    \n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));\n        dispatch(Search.target('products'));\n        checkParams();\n\n        return () =>{\n            // clearInterval(productInterval);\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"products\"}));\n            return;\n        }\n\n        dispatch(productRedux(params));\n        return;\n    }\n\n\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product_code                : {error:false,message:''},\n            product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''}\n        });\n    };\n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(productRedux(params));\n    }\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            let date:any = true;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n                if(counter === 4 || counter === 8 || counter === 9){\n                    if(!(data[i][key] instanceof Date)) date = false; \n                }\n            });\n\n            if(counter !== 9 || !date){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        // setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length != 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                //console.log(errors);\n                togglePointerEvents(true);\n                //setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date().toString();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : today,\n            warranty_start     : today, \n        });\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const modaladd = () => {\n\n        if(modalAdd){\n            let options;\n            if(supplierState){\n                options = supplierState.data.data.map((value:any) => {\n                    return {\n                        label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                        value : value.id,\n                        target: {\n                            name  : 'supplier',\n                            value : value.id \n                        }\n                    }\n                })\n            }else{\n                options = {\n                    label : '',\n                    value : '',\n                    target: {\n                        name : 'supplier',\n                        value : ''\n                    }\n                }\n            }\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                       \n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const modalshow = () => {\n\n        if(product){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{product.supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                            <TableCell align=\"left\">{product.product_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                            <TableCell align=\"left\">{product.product_description}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                            <TableCell align=\"left\">{product.serial_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                            <TableCell align=\"left\">{moment(product.delivery_date).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                            <TableCell align=\"left\">{product.warranty > 1 ? product.warranty + ' Years ' : product.warranty + \" Year\"}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                            <TableCell align=\"left\">{moment(product.warranty_start).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                            <TableCell align=\"left\">{moment(new Date(product.warranty_start).setFullYear(new Date(product.warranty_start).getFullYear() + product.warranty)).format(\"LL\")}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                            <TableCell align=\"left\">{product.reference_delivery_document}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                            <TableCell align=\"left\">{product.created_by.first_name + \" \" + product.created_by.last_name}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n        \n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('DD-MM-YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product_code                : product.product_code,\n            product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n    \n    const modaledit = () => {\n\n        let options;\n        if(supplierState){\n            options = supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        if(product){\n        \n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === productInput.supplier)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>                                      \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_description}>{key.product_description}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                {/* for uploads */}\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={productState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier_code       : \"\",\n        supplier_name       : \"\",\n        address             : \"\",\n        contact_person      : \"\",\n        contact_number      : \"\",\n        email               : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n\n        console.log(filter);\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }else{\n            if(filter[control] !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : '',\n                });\n                \n                a[control] = \"\";\n                dispatch(Filterer(a,\"supplier\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name] = '';    \n                dispatch(Filterer(a,\"supplier\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {filter.supplier_code}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {filter.supplier_name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {filter.address}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {filter.contact_person}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {filter.contact_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.email}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Search } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n\n    //static variable\n    const params = {page:1,per_page:10};\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        // dispatch when mounting ...\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Search.target(\"suppliers\"));\n        checkParams();\n\n        return () =>{\n            //dispatch when unmouting ...\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n    const checkParams = () => {\n\n        const param =  new URLSearchParams(props.location.search);\n    \n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"suppliers\"}));\n            return;\n        }\n\n        dispatch(supplierAction(params));\n        return;\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n            });\n\n            if(counter !== 7){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        // setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length !== 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                // console.log(errors);\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(supplierAction(params));\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    const modalshow = () =>{\n\n        if(supplier){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_name}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                            <TableCell align=\"left\">{supplier.tin}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                            <TableCell align=\"left\" title={supplier.address}>{supplier.address}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_person}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\">{supplier.email}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n\n    };\n    const modaledit = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalEdit}\n                onClose={ () =>setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    const modaladd  = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalAdd}\n                onClose={ () =>setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact No.\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                            \n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions> {/*className=\"product-modal-footer\"*/}\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n            \n                    <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n\n                                    className=\"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={supplierState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const [filter, setFilter] = useState({\n        username        : \"\",\n        name            : \"\",\n        company         : \"\",\n        email           : \"\",\n        level           : \"\",\n        activated       : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n    }\n\n        const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }else{\n            if(filter[control] !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : '',\n                });\n                \n                a[control] = \"\";\n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name] = '';    \n                dispatch(Filterer(a,\"user\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {filter.username}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {filter.name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {filter.company}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.email}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.level}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"level\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.activated}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={0}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"activated\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search} from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n    const params = {page:1,per_page:10};\n    \n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : null ,\n        level               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        \n        checkParams();\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        dispatch(Search.target('users'));\n        dispatch(NavigationTitle('Users'));\n\n\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"users\"}));\n            return;\n        }\n\n        dispatch(user(params));\n        return;\n    }\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(user(params));\n    }\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : 'Encoder'}>{key.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={usersState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.valid()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home\n    },{\n        path : \"/products\",\n        component : Component.Products\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers\n    },{\n        path : \"/users\",\n        component : Component.Users\n    },{\n        path : \"/reports\",\n        component : Component.Reports\n    },{\n        path : '/settings',\n        component : Component.Settings\n    }\n];","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\n\nconst Navigations = (props:any) =>{\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                   \n                    <Route path =\"/\" strict>\n                        <Component.Navigation>\n                            {\n                                InsideNav.map((element,index) => \n                                    <Route exact path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                    // <Route exact path ={element.path} component={element.component} key={index} />\n                                )\n                            }\n                        </Component.Navigation>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()      //comment this for production\n  )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}