{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Middleware/ComponentMiddleware.tsx","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/Upload.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/Upload.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","server_url","prefix","Url","login","logout","refresh","user","products","suppliers","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","data","stop","_x2","_handle_error","_callee2","b","_context2","params","retry","callback","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","Promise","resolve","setTimeout","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","react_default","createElement","component","react_router","to","pathname","state","from","location","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","Filter","extra_params","keys","forEach","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","submitForm","jwt","preventDefault","jwt_decode","sub","checkUser","users","returnUrl","activated","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","SupervisorAccount","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","list","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","Commute","SupervisedUserCircle","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","checkQueryParams","removeEventListener","param","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","href","navigate","Navigation_SidebarDesktop","Backdrop","children","ref","useRef","product_code","product_description","serial_number","warranty","warranty_start","warranty_end","_useState","_useState2","popper","setPopper","reset","controller","Filter_objectSpread","setText","setFilter","setFilterControl","submitFilter","Filterer","onKey","e","length","current","blur","TableRow","TableCell","align","onFocus","onKeyDown","inputRef","Popper","FormControl","Select","MenuItem","selected","allowKeyboardControl","animateYearScrolling","moment","styles","select","fontSize","Add","console","log","productInput","modalAdd","options","supplierState","supplier_code","supplier_name","setModalAdd","react_select_browser_esm","isDisabled","hidden","delivery_date","reference_delivery_document","remarks","Show","modalShow","setModalShow","Table","TableBody","setFullYear","getFullYear","created_by","initModalEdit","Edit","defaultValue","find","element","Upload","handleClose","setUpload","Upload_objectSpread","upload","skipped","maxHeight","disableBackdropClick","size","TableHead","backgroundColor","result","hover","success","initErrroMessage","initProductInput","setParams","setProduct","_React$useState13","uploading","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","setProductInput","_React$useState19","_React$useState20","productState","supplierRedux","uploadSheet","Products_objectSpread","togglePointerEvents","productRedux","Products_Edit","Products_Add","Products_Show","Products_Upload","Products_Filter","onDoubleClick","tableCell","Skeleton","height","i","skeletonTable","TableFooter","today","initModalAdd","accept","input","files","selectedFile","filename","split","pop","click","CloudUpload","TablePagination","rowsPerPageOptions","colSpan","count","meta","total","rowsPerPage","onChangePage","newPage","pams","onChangeRowsPerPage","paran","ActionsComponent","TablePaginationActions","Reports","Settings","address","contact_person","contact_number","Suppliers_Filter_objectSpread","supplierInput","tin","Suppliers_Upload_objectSpread","initSupplierError","initSupplier","setSupplier","setSupplierInput","Suppliers_objectSpread","supplierAction","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Upload","Suppliers_Filter","Users_Filter_objectSpread","initUsers","setUsers","usersState","Users_objectSpread","modaledit","modaladd","Users_Filter","initModalShow","NotFound","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","exact","Navigations","initialized","setInitialized","checkToken","react_router_dom","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e1b5053.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = 'http://localhost:8000/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n}\n\nconst Url = {\n    //auth\n    'login'     :   server_url+prefix.auth+'login',\n    'logout'    :   server_url+prefix.auth+'logout',\n    'refresh'   :   server_url+prefix.auth+'refresh',\n    'check'     :   server_url+prefix.auth+'check',\n\n    //user\n    'user'       : server_url+prefix.user,\n    'products'   : server_url+prefix.products,\n    'suppliers'  : server_url+prefix.supplier,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        // if(a.error.response.status === 401){\n        //     await new Promise( resolve => setTimeout(resolve, 6000) );\n        //     if(a.params){\n        //         return a.callback(a.params);\n        //     }\n\n        //     return a.callback();\n        // }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product_code                : string,\n    product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            // if(await Token.valid()){\n    \n            //     const id:any = jwt_decode(Token.get());\n            //     const user:Requests.Format = await Requests.User.get(id.sub);\n            //     if(user.status === 200){\n            //         updateUser(User(user.data));\n    \n            //         setToken(true);\n            //     }\n            // }\n\n            if(Token.exist()){\n                setToken(true);\n            }\n            \n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n        let params = '';\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n\n        params = params+\"&page=\"+extra_params.page+\"&per_page=\"+extra_params.per_page;\n        \n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(params),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(params),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(params),\n                    });\n                }\n        }\n\n        \n}\n","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const updateUser = useDispatch();\n    \n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = async (user:Requests.Format) => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            \n            const id:any = jwt_decode(Token.get());\n            const users:Requests.Format = await Requests.User.get(id.sub);\n            if(users.status === 200){\n                updateUser(User(users.data));\n            }\n\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            \n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\nimport { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n\n\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div> */}\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div> */}\n                        \n                    \n                        {/* <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div> */}\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    {/* <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div> */}\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\nconst SidebarList = (props:any) => {\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}>\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search} from 'Redux/Actions';\n\n// const menu_title = \"Product Inquery System\";\nconst logo = \"/img/ideaserv.png\";\nlet sidebar_properties = [\n\t{\n\t\tname : \"Home\",\n\t\ticon : Home,\n\t\turl  : \"/\" \n\t},{\n\t\tname : \"Products\",\n\t\ticon : Laptop,\n\t\turl  : '/products',\n\t},{\n\t\tname : \"Suppliers\",\n\t\ticon :  Commute,\n\t\turl  : \"/suppliers\", \n\t},{\n\t\tname : \"Users\",\n\t\ticon :  SupervisedUserCircle,\n\t\turl  : \"/users\", \n\t\tprops: '',\n\t}\n]\n\n\nconst Navigation = (props:any) => {\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\tcheckQueryParams();\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[]);\n\n\n\tconst checkQueryParams = () => {\n\t\tconst param = new URLSearchParams(props.location.search);\n\t\t\n\t\tif(param.get('search')){\n\t\t\tdispatch(Search.value(param.get('search')));\n\t\t}\n\t}\n\t\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\t// window.location.reload();\n\t\tToken.remove();\n\n\t\t// if(!Token.exist){\n\t\t\twindow.location.href = \"/login\";\n\t\t\treturn\n\t\t// \treturn;\n\t\t// }\n\t\t// props.history.push('/login');\n\n\t\t\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n \n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product_code\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product_code        : React.useRef(null),\n        product_description : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null)\n    };\n    \n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product_code        : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n    });\n\n    // const [filter, setFilter] = useState({\n    //     supplier            : {filter:'iet',key:''},\n    //     product_code        : {filter:'iet',key:''},\n    //     product_description : {filter:'iet',key:''},\n    //     serial_number       : {filter:'iet',key:''},\n    //     warranty            : {filter:'iet',key:''},\n    //     warranty_start      : {filter:'iet',key:''},\n    //     warranty_end        : {filter:'iet',key:''}\n    // });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product_code          = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        \n        // setPopper({\n        //     ...popper,\n        //     [control] : null,\n        // })\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {props.filter.supplier.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            {props.filter.supplier.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={props.filter.supplier.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_code\"\n                    value = {props.filter.product_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_code}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_code)? \"simple-popper\" : undefined} open={Boolean(popper.product_code)} anchorEl={popper.product_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_code.filter}\n                                onChange={setFilterControl}\n                                name = \"product_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_code\")}>\n                            {props.filter.product_code.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_code\")} disabled={props.filter.product_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {props.filter.product_description.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_description}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_description.filter}\n                                onChange={setFilterControl}\n                                name = \"product_description\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            {props.filter.product_description.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={props.filter.product_description.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {props.filter.serial_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.serial_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.serial_number.filter}\n                                onChange={setFilterControl}\n                                name = \"serial_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            {props.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={props.filter.serial_number.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {props.filter.warranty.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.warranty}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            {props.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={props.filter.warranty.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_start: {\n                                ...props.filter['warranty_start'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_start.key == '' ? null : moment(props.filter.warranty_start.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_start.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_start\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            {props.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={props.filter.warranty_start.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_end:{\n                                ...props.filter['warranty_end'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_end.key == '' ? null : moment(props.filter.warranty_end.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_end.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_end\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            {props.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={props.filter.warranty_end.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Add = (props:Add) => {\n\n\n    console.log(props.productInput);\n\n    if(props.modalAdd){\n        let options;\n        if(props.supplierState){\n            options = props.supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        let status = [\n            {\n                label : 'New',\n                value : 1,\n                target: {\n                    name : 'status',\n                    value : 1,\n                }\n            },{\n                label : 'Replaced',\n                value : 2,\n                target: {\n                    name : 'status',\n                    value : 2,\n                }\n            },{\n                label : 'Returned',\n                value : 3,\n                target: {\n                    name : 'status',\n                    value : 3,\n                }\n            }\n        ];\n\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalAdd}\n                onClose={ () =>props.setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <Select\n                                            options={options}\n                                            // isClearable\n                                            name = 'supplier'\n                                            // defaultValue = {options[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            className={props.responseMessage.supplier.error? \"select-error\" : \"\" }\n                                            required\n                                        />\n                                        <div hidden={!props.responseMessage.supplier.error} style = {styles.select}>{props.responseMessage.supplier.message}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Product Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"product_code\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.product_code}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.product_code.error}\n                                            helperText = {props.responseMessage.product_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Product Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"product_description\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.product_description}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.product_description.error}\n                                            helperText = {props.responseMessage.product_description.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Serial Number\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"serial_number\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.serial_number}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.serial_number.error}\n                                            helperText = {props.responseMessage.serial_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Status\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <Select\n                                            options={status}\n                                            // isClearable\n                                            name = 'status'\n                                            // defaultValue = {options[0]}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                            required\n                                        />\n                                        <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Delivery Date\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <DatePicker\n                                            format=\"dd/MM/yyyy\"\n                                            allowKeyboardControl\n                                            animateYearScrolling\n                                            variant = \"outlined\"\n                                            className = \"full-width product-reduce-margin-text\"\n                                            onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                            value = {props.productInput.delivery_date}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.delivery_date.error}\n                                            helperText = {props.responseMessage.delivery_date.message}\n                                            // defaultValue={new Date()}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Delivery Doc.\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"reference_delivery_document\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.reference_delivery_document}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.reference_delivery_document.error}\n                                            helperText = {props.responseMessage.reference_delivery_document.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Warranty(*year)\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"number\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"warranty\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.warranty}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.warranty.error}\n                                            helperText = {props.responseMessage.warranty.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Warranty Start\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <DatePicker\n                                            format=\"dd/MM/yyyy\"\n                                            allowKeyboardControl\n                                            animateYearScrolling\n                                            variant = \"outlined\"\n                                            className = \"full-width product-reduce-margin-text\"\n                                            onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                            value = {props.productInput.warranty_start}\n                                            // minDate = {new Date(props.productInput.delivery_date)}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.warranty_start.error}\n                                            helperText = {props.responseMessage.warranty_start.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Remarks\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            // type=\"number\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"remarks\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.remarks}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.remarks.error}\n                                            helperText = {props.responseMessage.remarks.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions>\n\n                    <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n\n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                   \n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                        <TableCell align=\"left\">{props.product.product_description}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                        <TableCell align=\"left\">{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                        <TableCell align=\"left\">{props.product.warranty > 1 ? props.product.warranty + ' Years ' : props.product.warranty + \" Year\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                        <TableCell align=\"left\">{moment(new Date(props.product.warranty_start).setFullYear(new Date(props.product.warranty_start).getFullYear() + props.product.warranty)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                        <TableCell align=\"left\">{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                        <TableCell align=\"left\">{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Status</TableCell>\n                                        <TableCell align=\"left\">{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  : 'Returned'\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Remarks</TableCell>\n                                        <TableCell align=\"left\">{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Save, Close } from '@material-ui/icons';\nimport Select from 'react-select';\n\n\ninterface Edit{\n    supplierState   : any,\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst Edit = (props:Edit) => {\n\n    let options;\n    if(props.supplierState){\n        options = props.supplierState.data.data.map((value:any) => {\n            return {\n                label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                value : value.id,\n                target: {\n                    name  : 'supplier',\n                    value : value.id \n                }\n            }\n        })\n    }else{\n        options = {\n            label : '',\n            value : '',\n            target: {\n                name : 'supplier',\n                value : ''\n            }\n        }\n    }\n\n    let status = [\n        {\n            label : 'New',\n            value : 1,\n            target: {\n                name : 'status',\n                value : 1,\n            }\n        },{\n            label : 'Replaced',\n            value : 2,\n            target: {\n                name : 'status',\n                value : 2,\n            }\n        },{\n            label : 'Returned',\n            value : 3,\n            target: {\n                name : 'status',\n                value : 3,\n            }\n        }\n    ];\n\n    if(props.product){\n        \n\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalEdit}\n                onClose={ () =>props.setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <Select\n                                            options={options}\n                                            // isClearable\n                                            name = 'supplier'\n                                            defaultValue = {options.find((element:any) => element.value === props.productInput.supplier)}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Product Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"product_code\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.product_code}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.product_code.error}\n                                            helperText = {props.responseMessage.product_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Product Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"product_description\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.product_description}\n                                            disabled = {props.submit}\n                                            error = {props.responseMessage.product_description.error}\n                                            helperText = {props.responseMessage.product_description.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Serial Number\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"serial_number\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.serial_number}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.serial_number.error}\n                                            helperText = {props.responseMessage.serial_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Status\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <Select\n                                            options={status}\n                                            // isClearable\n                                            name = 'status'\n                                            defaultValue = {status.find((element:any) => element.value === props.productInput.status)}\n                                            onChange = {props.updateInput}\n                                            isDisabled = {props.submit}\n                                            className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                            required\n                                        />\n                                        <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Delivery Date\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <DatePicker\n                                            format=\"dd/MM/yyyy\"\n                                            allowKeyboardControl\n                                            animateYearScrolling\n                                            variant = \"outlined\"\n                                            className = \"full-width product-reduce-margin-text\"\n                                            onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                            value = {props.productInput.delivery_date}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.delivery_date.error}\n                                            helperText = {props.responseMessage.delivery_date.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Delivery Doc\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"reference_delivery_document\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.reference_delivery_document}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.reference_delivery_document.error}\n                                            helperText = {props.responseMessage.reference_delivery_document.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Warranty(*year)\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"number\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"warranty\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.warranty}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.warranty.error}\n                                            helperText = {props.responseMessage.warranty.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Warranty Start\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <DatePicker\n                                            format=\"dd/MM/yyyy\"\n                                            allowKeyboardControl\n                                            animateYearScrolling\n                                            variant = \"outlined\"\n                                            className = \"full-width product-reduce-margin-text\"\n                                            onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                            value = {props.productInput.warranty_start}\n                                            // minDate = {new Date(props.productInput.delivery_date)}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.warranty_start.error}\n                                            helperText = {props.responseMessage.warranty_start.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Remarks\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            // type=\"number\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"remarks\"\n                                            onChange = {props.updateInput}\n                                            value = {props.productInput.remarks}\n                                            disabled = {props.submit}\n                                            required\n                                            error = {props.responseMessage.remarks.error}\n                                            helperText = {props.responseMessage.remarks.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => props.submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={props.submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_description}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.remarks} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_description}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.remarks} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Button, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux,Filter as Filterer,NavigationTitle,} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Upload from './Upload';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product_code                : {error:false,message:''},\n    product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''},\n    status                      : {error:false,message:''},\n    remarks                     : {error:false,message:''},\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product_code        : '',\n    product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n    status              : '',\n    remarks             : '',\n\n}\n\n\nconst Products = (props:any) =>{\n    \n    // const [ page, setPage ] = React.useState(0);\n    const [ params, setParams ] = React.useState({\n        page     : 1,\n        per_page : 10\n    });\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n    const [filter, setFilter] = React.useState({\n        supplier            : {filter:'iet',key:''},\n        product_code        : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''}\n    });\n\n\n\n\n    // const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        \n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));  //for select option\n        dispatch(Filterer(filter,\"product\",params));\n        \n        return () =>{\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    \n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product_code                : {error:false,message:''},\n            product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''},\n            status                      : {error:false,message:''},\n            remarks                     : {error:false,message:''},\n        });\n    };\n    \n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"product\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"product\",paran));\n        \n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors.message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM-DD-YYYY'),\n            warranty_start     : moment(today).format('MM-DD-YYYY'),\n        });\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM-DD-YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product_code                : product.product_code,\n            product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n\n        \n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            <Edit\n                supplierState   = {supplierState}\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>                                      \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params}/>\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_description}>{key.product_description}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                { user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                    \n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n                                            className = \"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                    : ''\n                                }\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={productState ? params.page-1: 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"supplier\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"supplier\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {props.filter.supplier_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_code}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_code.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            {props.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={props.filter.supplier_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {props.filter.supplier_name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_name.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {props.filter.address.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.address}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.address.filter}\n                                onChange={setFilterControl}\n                                name = \"address\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            {props.filter.address.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={props.filter.address.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {props.filter.contact_person.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_person}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_person.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_person\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            {props.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={props.filter.contact_person.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {props.filter.contact_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_number.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            {props.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={props.filter.contact_number.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                        <TableCell align=\"left\" title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>   \n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.email} </TableCell>   \n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.email}</TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Filter as Filterer } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from './Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const [filter, setFilter] = React.useState({\n        supplier_code       : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        address             : {filter:'iet',key:''},\n        contact_person      : {filter:'iet',key:''},\n        contact_number      : {filter:'iet',key:''},\n        email               : {filter:'iet',key:''},\n    });\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    const [params, setParams] = React.useState({page:1,per_page:10});\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        result      : [],\n        open        : false,\n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Filterer(filter,\"supplier\",params));\n        \n\n        return () =>{\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    const uploadFile = () => {\n        togglePointerEvents(false)\n\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n        \n    }\n\n\n    const uploadSheet = async (file:File) => {\n\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors.message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"supplier\",params));\n\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n\n                return;\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n\n        let param = params;\n        param.page = newPage+1;\n        setParams(param);\n\n        dispatch(Filterer(filter,\"supplier\",param));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"supplier\",paran));\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n\n            {uploadFileModal()}\n\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                {\n                                    user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n\n                                            className=\"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                : null\n                            }\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={supplierState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"user\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"user\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {props.filter.username.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = { ref.username }\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.username.filter}\n                                onChange={setFilterControl}\n                                name = \"username\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            {props.filter.username.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={props.filter.username.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {props.filter.name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.name.filter}\n                                onChange={setFilterControl}\n                                name = \"name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            {props.filter.name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={props.filter.name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {props.filter.company.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.company}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.company.filter}\n                                onChange={setFilterControl}\n                                name = \"company\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            {props.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { props.filter.company.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.level.key}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        <MenuItem value={3}>Viewer</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.activated.key}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={0} >All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={2}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search,Filter as Filterer } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n\n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        username        : {filter:'iet',key:''},\n        name            : {filter:'iet',key:''},\n        company         : {filter:'iet',key:''},\n        email           : {filter:'iet',key:''},\n        level           : {filter:'iet',key:0},\n        activated       : {filter:'iet',key:0},\n    });\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : null ,\n        level               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Users'));\n        dispatch(Filterer(filter,\"user\",params));\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"user\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"user\",paran));\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow> */}\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={usersState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.exist()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home,\n        exact : true\n    },{\n        path : \"/products\",\n        component : Component.Products,\n        exact : false\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers,\n        exact : false\n    },{\n        path : \"/users\",\n        component : Component.Users,\n        exact : false\n    },{\n        path : \"/reports\",\n        component : Component.Reports,\n        exact : false\n    },{\n        path : '/settings',\n        component : Component.Settings,\n        exact : false\n    }\n];\n","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\nimport { Token, Requests } from 'Services';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst Navigations = (props:any) =>{\n\n\n    const [ initialized, setInitialized ] = React.useState(false);\n    const updateUser = useDispatch();\n\n    React.useEffect(()=>{\n        if(!initialized){\n            checkToken();\n        }\n    },[initialized]);\n\n\n    const checkToken = async () => {\n        if(Token.exist()){\n            const id:any = jwt_decode(Token.get());\n            const user:Requests.Format = await Requests.User.get(id.sub);\n            if(user.status === 200){\n                updateUser(User(user.data));\n            }else{\n                Token.remove();\n            }\n        }\n\n        setInitialized(true);\n    }\n\n\n\n    if(!initialized){\n        return null;\n    }\n\n\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n            \n                <Switch>\n                   {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                    \n                    \n                    <Route path =\"/\">\n                            <Component.Navigation>\n                            <Switch>\n                                {\n                                    InsideNav.map((element,index) => \n                                        <Route exact={element.exact} path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                        // <Route exact path ={element.path} component={element.component} key={index} />\n                                    )\n                                }\n                            \n                                {/* <Route exact path =\"/\" render= {(props) => <ComponentMiddleware {...props} component={Component.Home} />}/>\n                                <Route exact path =\"/products\" render= {(props) => <ComponentMiddleware {...props} component={Component.Products} />}/>\n                                <Route exact path =\"/suppliers\" render= {(props) => <ComponentMiddleware {...props} component={Component.Suppliers} />}/>\n                                <Route exact path =\"/users\" render= {(props) => <ComponentMiddleware {...props} component={Component.Users} />}/>\n                                <Route exact path =\"/reports\" render= {(props) => <ComponentMiddleware {...props} component={Component.Reports} />}/>\n                                <Route exact path =\"/settings\" render= {(props) => <ComponentMiddleware {...props} component={Component.Settings} />}/> */}\n                                <Route component={Component.NotFound} />\n                                </Switch>\n\n\n                            </Component.Navigation>\n                            \n                    </Route>\n                    \n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()      //comment this for production\n  )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}