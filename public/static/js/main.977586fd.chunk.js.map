{"version":3,"sources":["Services/Token.ts","Services/Requests/StaticMethods.ts","Services/ServerUrl.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Middleware/ComponentMiddleware.tsx","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","maxAge","get","this","save","remove","update","undefined","exist","Requests","Auth","check","network_error","status","StaticMethods","Object","classCallCheck","createClass","key","value","_handle_error","asyncToGenerator","regenerator_default","mark","_callee","b","format","wrap","_context","prev","next","response","abrupt","auth","valid","params","retry","callback","localStorage","getItem","parseInt","data","stop","_x","apply","arguments","_retry","_callee2","counter","_context2","setItem","String","delay","_x2","_x3","_delay","_callee3","ms","_context3","Promise","resolve","setTimeout","_x4","Content-Type","Accept","Authorization","sleeper","x","prefix","Url","login","logout","refresh","user","products","suppliers","axios","method","url","headers","header","username","password","then","catch","_ref","error","_this","handle_error","sent","_ref2","_this2","_ref3","_callee5","_context5","_this3","User","page","per_page","id","_x6","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","Products","show","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","target","query","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","jwt_decode","sub","react_default","createElement","component","react_router","to","pathname","state","from","location","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","name","submitForm","jwt","preventDefault","checkUser","activated","returnUrl","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","AssignmentTurnedIn","Assessment","SupervisorAccount","esm_Settings","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","JSON","parse","updateErrorState","errors","holder","forEach","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","menu_title","esm_Search","navigate","toggleSearch","InputBase","placeholder","inputProps","onFocus","SearchControl","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","Edit","ExitToApp","autoFocus","aria-haspopup","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","list","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","Commute","SupervisedUserCircle","Settings","setSidebar","swipe","setSwipe","window","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","checkQueryParams","removeEventListener","param","URLSearchParams","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","Navigation_SidebarDesktop","Backdrop","children","initErrroMessage","product_code","product_description","delivery_date","reference_delivery_document","serial_number","warranty","warranty_start","initProductInput","setPage","modalShow","setModalShow","modalAdd","setModalAdd","setProduct","_React$useState13","uploading","_React$useState14","upload","setUpload","_React$useState15","_React$useState16","productInput","setProductInput","_React$useState17","_React$useState18","productState","supplierState","supplierRedux","checkParams","productRedux","uploadFile","togglePointerEvents","files","length","selectedFile","filename","split","pop","FileReader","onload","e","result","workbook","xlsx","read","cellDates","cellNF","cellText","checkExcelFormat","sheet_to_json","Sheets","SheetNames","dateNF","readAsBinaryString","_unused","_loop","i","_ret","date","keys","v","Products_objectSpread","element","console","log","moment","initModalEdit","Table","TableBody","TableRow","TableCell","align","supplier_code","setFullYear","getFullYear","created_by","options","supplier_name","react_select_browser_esm","defaultValue","find","isDisabled","allowKeyboardControl","animateYearScrolling","minDate","modaledit","hidden","accept","ref","input","click","CloudUpload","modaladd","disableBackdropClick","TableHead","hover","onDoubleClick","tableCell","Skeleton","height","skeletonTable","TableFooter","today","toString","initModalAdd","TablePagination","rowsPerPageOptions","colSpan","count","meta","total","rowsPerPage","onChangePage","newPage","ActionsComponent","TablePaginationActions","Reports","initSupplierError","address","tin","contact_person","contact_number","initSupplier","setSupplier","supplierInput","setSupplierInput","supplierAction","Suppliers_objectSpread","initUsers","users","setUsers","usersState","Users_objectSpread","initModalShow","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","Navigations","react_router_dom","exact","strict","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.977586fd.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 30);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n        this.update();\n        return new Cookies().get('token');\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","import Token from \"../Token\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        if(b.response === undefined){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n            if(Token.valid()){\n                if(b.params === undefined || b.params === null){\n                    return this.retry(b.callback,undefined);\n                }\n\n                return this.retry(b.callback,b.params);\n            }\n        }\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(a !== null || a!== undefined){\n                a =0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(localStorage.getItem(Token.get()) === null || localStorage.getItem(Token.get()) === undefined ){\n            localStorage.setItem(Token.get(),String(0));\n        }else{\n            let a:any = localStorage.getItem(Token.get());\n            let counter = parseInt(a);\n            localStorage.setItem(Token.get(),String(counter+1));\n        }\n\n        await this.delay(1000);\n\n        if(params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(token === null || token === undefined){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n          return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n      }\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n}\n\nconst Url = {\n    //auth\n    'login'     :   server_url+prefix.auth+'login',\n    'logout'    :   server_url+prefix.auth+'logout',\n    'refresh'   :   server_url+prefix.auth+'refresh',\n    'check'     :   server_url+prefix.auth+'check',\n\n    //user\n    'user'       : server_url+prefix.user,\n    'products'   : server_url+prefix.products,\n    'suppliers'  : server_url+prefix.supplier,\n}\n\nexport default Url;\n","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   this.header(),\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.login,\n                params : a\n            });\n\n        })\n\n        return format;\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.login,\n                auth    : true,\n            });\n        })\n        return format;\n\n    }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.check,\n                auth    : true,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params : user,\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.update,\n                auth    : false,\n                params  : user,\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : user,\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params  : search,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product_code                : string,\n    product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.update,\n                auth        : false,\n                params      : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.addFile,\n                auth        : false,\n                params      : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : search\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.update,\n                auth        : false,\n                params      : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.addFile,\n                auth        : false,\n                params      : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : search\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            if(await Token.valid()){\n    \n                const id:any = jwt_decode(Token.get());\n                const user:Requests.Format = await Requests.User.get(id.sub);\n                if(user.status === 200){\n                    updateUser(User(user.data));\n    \n                    setToken(true);\n                }\n            }\n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nconst title = 'Product Inquery System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = (user:Requests.Format):any => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { AssignmentInd, Assessment, AssignmentTurnedIn, Assignment, SupervisorAccount, Settings } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'100px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/user-logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    \n                        <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        const jwt:any = jwt_decode(Token.get()); \n                        const user:any =await Requests.User.get(jwt.sub);\n                        dispatch(UserAccount(JSON.parse(user)));\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        ).catch(()=>{\n            enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n            setModalEdit(false);\n        });\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div>\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        {props.user.first_name+\" \"+props.user.last_name}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        &nbsp;Logout\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton>\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\nconst SidebarList = (props:any) => {\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            props.history.push(text.url);\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}>\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search} from 'Redux/Actions';\n\n// const menu_title = \"Product Inquery System\";\nconst logo = \"/img/ideaserv.png\";\nlet sidebar_properties = [\n\t{\n\t\tname : \"Home\",\n\t\ticon : Home,\n\t\turl  : \"/\" \n\t},{\n\t\tname : \"Products\",\n\t\ticon : Laptop,\n\t\turl  : '/products',\n\t},{\n\t\tname : \"Suppliers\",\n\t\ticon :  Commute,\n\t\turl  : \"/suppliers\", \n\t},{\n\t\tname : \"Users\",\n\t\ticon :  SupervisedUserCircle,\n\t\turl  : \"/users\", \n\t},{\n\t\tname : \"Reports\",\n\t\ticon :  Assignment,\n\t\turl  : \"/reports\", \n\t},{\n\t\tname : \"Settings\",\n\t\ticon :  Settings,\n\t\turl  : \"/settings\",\n\t\tprops: ''\n\t}\n]\n\n\nconst Navigation = (props:any) => {\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tif(reduxUser.level === 2){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t},{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}\n\t\t]\n\t}\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\tcheckQueryParams();\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[]);\n\n\n\tconst checkQueryParams = () => {\n\t\tconst param = new URLSearchParams(props.location.search);\n\t\t\n\t\tif(param.get('search')){\n\t\t\tdispatch(Search.value(param.get('search')));\n\t\t}\n\t}\n\t\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\tprops.history.push('/login');\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import React, { useEffect, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, Edit, Save, Cancel, SaveAlt, CloudUpload } from '@material-ui/icons';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport xlsx from 'xlsx';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product_code                : {error:false,message:''},\n    product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''}\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product_code        : '',\n    product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n}\n\n\nconst Products = (props:any) =>{\n    \n    const [ page, setPage ] = React.useState(0);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n\n    const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n    \n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));\n        dispatch(Search.target('products'));\n        checkParams();\n\n        return () =>{\n            // clearInterval(productInterval);\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"products\"}));\n            return;\n        }\n\n        dispatch(productRedux(params));\n        return;\n    }\n\n\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product_code                : {error:false,message:''},\n            product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''}\n        });\n    };\n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(productRedux(params));\n    }\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            let date:any = true;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n                if(counter === 4 || counter === 8 || counter === 9){\n                    if(!(data[i][key] instanceof Date)) date = false; \n                }\n            });\n\n            if(counter !== 9 || !date){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length != 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                console.log(errors);\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date().toString();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : today,\n            warranty_start     : today, \n        });\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const modaladd = () => {\n\n        if(modalAdd){\n            let options;\n            if(supplierState){\n                options = supplierState.data.data.map((value:any) => {\n                    return {\n                        label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                        value : value.id,\n                        target: {\n                            name  : 'supplier',\n                            value : value.id \n                        }\n                    }\n                })\n            }else{\n                options = {\n                    label : '',\n                    value : '',\n                    target: {\n                        name : 'supplier',\n                        value : ''\n                    }\n                }\n            }\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Document #\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(event)=>{\n                                event.persist();\n                                file.click()\n                            }}\n                        >\n                                <CloudUpload />&nbsp;  \n                                Import file\n                        </Button>\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                       \n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const modalshow = () => {\n\n        if(product){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{product.supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                            <TableCell align=\"left\">{product.product_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                            <TableCell align=\"left\">{product.product_description}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                            <TableCell align=\"left\">{product.serial_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                            <TableCell align=\"left\">{product.delivery_date}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                            <TableCell align=\"left\">{product.warranty > 1 ? product.warranty + ' Years ' : product.warranty + \" Year\"}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                            <TableCell align=\"left\">{moment(product.warranty_start).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                            <TableCell align=\"left\">{moment(new Date(product.warranty_start).setFullYear(new Date(product.warranty_start).getFullYear() + product.warranty)).format(\"LL\")}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Document #</TableCell>\n                                            <TableCell align=\"left\">{product.reference_delivery_document}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                            <TableCell align=\"left\">{product.created_by.first_name + \" \" + product.created_by.last_name}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n        \n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('YYYY,MM,DD'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product_code                : product.product_code,\n            product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n    \n    const modaledit = () => {\n\n        let options;\n        if(supplierState){\n            options = supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        if(product){\n        \n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === productInput.supplier)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Document #\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>                                      \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.product_description}>{key.product_description}</TableCell>\n                                        <TableCell align=\"center\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"center\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"center\" title={moment(new Date(key.warranty_start).setFullYear(new Date(key.warranty_start).getFullYear() + key.warranty)).format(\"ll\")}>{moment(new Date(key.warranty_start).setFullYear(new Date(key.warranty_start).getFullYear() + key.warranty)).format(\"ll\")}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={productState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Search } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport xlsx from 'xlsx';\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n\n    //static variable\n    const params = {page:1,per_page:10};\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        // dispatch when mounting ...\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Search.target(\"suppliers\"));\n        checkParams();\n\n        return () =>{\n            //dispatch when unmouting ...\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n    const checkParams = () => {\n\n        const param =  new URLSearchParams(props.location.search);\n    \n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"suppliers\"}));\n            return;\n        }\n\n        dispatch(supplierAction(params));\n        return;\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n            });\n\n            if(counter !== 7){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length !== 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                console.log(errors);\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(supplierAction(params));\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    const modalshow = () =>{\n\n        if(supplier){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_name}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                            <TableCell align=\"left\">{supplier.tin}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                            <TableCell align=\"left\" title={supplier.address}>{supplier.address}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_person}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact #</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\">{supplier.email}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n\n    };\n    const modaledit = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalEdit}\n                onClose={ () =>setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    const modaladd  = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalAdd}\n                onClose={ () =>setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                            <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions> {/*className=\"product-modal-footer\"*/}\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button \n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(event)=>{\n                                event.persist();\n                                file.click()\n                            }}\n                        >\n                                <CloudUpload />&nbsp;  \n                                Import file\n                    </Button>\n\n                    <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact #</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"center\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"center\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"center\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={supplierState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import React from 'react';\nimport { NavigationTitle,Users as user, Search} from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\n\nconst Users = (props:any) =>{\n    const params = {page:1,per_page:10};\n    \n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : null ,\n        level               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        \n        checkParams();\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        dispatch(Search.target('users'));\n        dispatch(NavigationTitle('Users'));\n\n\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"users\"}));\n            return;\n        }\n\n        dispatch(user(params));\n        return;\n    }\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(user(params));\n    }\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"center\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"center\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"center\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"center\" title={key.level === 1 ? 'Admin' : 'Encoder'}>{key.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        <TableCell align=\"center\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={usersState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.valid()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home\n    },{\n        path : \"/products\",\n        component : Component.Products\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers\n    },{\n        path : \"/users\",\n        component : Component.Users\n    },{\n        path : \"/reports\",\n        component : Component.Reports\n    },{\n        path : '/settings',\n        component : Component.Settings\n    }\n];","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\n\nconst Navigations = (props:any) =>{\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                   \n                    <Route path =\"/\" strict>\n                        <Component.Navigation>\n                            {\n                                InsideNav.map((element,index) => \n                                    <Route exact path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                    // <Route exact path ={element.path} component={element.component} key={index} />\n                                )\n                            }\n                        </Component.Navigation>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}