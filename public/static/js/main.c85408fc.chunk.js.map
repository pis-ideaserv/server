{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Services/Requests/MasterCodes.ts","Services/Requests/Category.ts","Middleware/ComponentMiddleware.tsx","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Redux/Actions/MasterCodes.ts","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Summary/Category.tsx","Components/Main/Summary/Add.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/Upload.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/Upload.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Components/Main/Summary/Filter.tsx","Components/Main/Summary/Edit.tsx","Components/Main/Summary/Upload.tsx","Components/Main/Summary/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/MasterCodes.ts","Redux/Reducers/Category.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","prefix","Url","login","logout","refresh","user","products","suppliers","productMasterList","category","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","data","stop","_x2","_handle_error","_callee2","b","_context2","params","retry","callback","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","Promise","resolve","setTimeout","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","MasterCodes","up","pml","Category","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","react_default","createElement","component","react_router","to","pathname","state","from","location","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","Filter","extra_params","keys","forEach","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","submitForm","jwt","preventDefault","jwt_decode","sub","checkUser","users","returnUrl","activated","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","SupervisorAccount","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","useStyles","makeStyles","theme","createStyles","root","list","visibility","&:hover","sidebar_properties","List_List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","List","Commute","SupervisedUserCircle","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","removeEventListener","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","href","navigate","Navigation_SidebarDesktop","Backdrop","children","ref","useRef","product_description","serial_number","warranty","warranty_start","warranty_end","_useState","_useState2","popper","setPopper","reset","controller","Filter_objectSpread","setText","setFilter","setFilterControl","submitFilter","Filterer","onKey","e","length","current","blur","TableRow","TableCell","align","onFocus","onKeyDown","inputRef","Popper","FormControl","Select","MenuItem","selected","allowKeyboardControl","animateYearScrolling","moment","setMessage","setCategory","Close_default","handleClose","setOpen","handleOption","meta","opti","opt","total","setOption","disableBackdropClick","InputLabelProps","shrink","container","flexWrap","textField","marginRight","marginBottom","dense","spacing","menu","dialog","select","background","left","zIndex","addCategory","right","transform","outline","&:focus","categoryError","fontSize","Add","classes","option","product_code","product_name","input","setInput","categoryHandle","setCategoryHandler","categoryParams","queryCategory","handleChangeText","Add_objectSpread","_a","Summary_Category","paperScrollPaper","react_select_browser_esm","options","hidden","Fab","Add_default","styles","buttonStyle","productCode","productOption","setProductOption","openAddProduct","setOpenAddProduct","modalAdd","initProduct","handleProductAdd","supplierState","supplier_code","supplier_name","Summary_Add","setModalAdd","isDisabled","productInput","delivery_date","reference_delivery_document","remarks","Show","modalShow","setModalShow","Table","TableBody","setFullYear","getFullYear","created_by","initModalEdit","Edit","defaultValue","find","element","Upload","setUpload","Upload_objectSpread","upload","skipped","maxHeight","size","TableHead","backgroundColor","result","hover","success","initErrroMessage","initProductInput","setParams","setProduct","_React$useState13","uploading","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","productCodeParam","setProductCodeParam","_React$useState19","_React$useState20","setProductInput","_React$useState21","_React$useState22","productState","getMasterCode","supplierRedux","uploadSheet","Products_objectSpread","togglePointerEvents","productRedux","stat","Products_Edit","Products_Add","Products_Show","Products_Upload","Products_Filter","onDoubleClick","productInfo","console","log","tableCell","Skeleton","height","i","skeletonTable","TableFooter","today","initModalAdd","accept","files","selectedFile","filename","split","pop","click","CloudUpload","TablePagination","rowsPerPageOptions","colSpan","count","rowsPerPage","onChangePage","newPage","pams","onChangeRowsPerPage","paran","ActionsComponent","TablePaginationActions","Reports","Settings","address","contact_person","contact_number","Suppliers_Filter_objectSpread","supplierInput","tin","Suppliers_Upload_objectSpread","initSupplierError","initSupplier","setSupplier","setSupplierInput","Suppliers_objectSpread","supplierAction","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Upload","Suppliers_Filter","param","Users_Filter_objectSpread","initUsers","setUsers","usersState","Users_objectSpread","modaledit","modaladd","Users_Filter","initModalShow","NotFound","Summary_Filter_objectSpread","Edit_objectSpread","Summary_Upload_objectSpread","Summary","masterCode","Summary_objectSpread","openEdit","setOpenEdit","handleAdd","Summary_Edit","Summary_Upload","Summary_Filter","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","exact","Navigations","initialized","setInitialized","checkToken","react_router_dom","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c85408fc.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n    master      : 'product-master-list/',\n    category    : 'category/',\n\n}\n\nconst Url = {\n    //auth\n    login     :   server_url+prefix.auth+'login',\n    logout    :   server_url+prefix.auth+'logout',\n    refresh   :   server_url+prefix.auth+'refresh',\n    check     :   server_url+prefix.auth+'check',\n\n    //user\n    user       : server_url+prefix.user,\n    products   : server_url+prefix.products,\n    suppliers  : server_url+prefix.supplier,\n    productMasterList : server_url+prefix.master,\n    category   : server_url+prefix.category,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        // if(a.error.response.status === 401){\n        //     await new Promise( resolve => setTimeout(resolve, 6000) );\n        //     if(a.params){\n        //         return a.callback(a.params);\n        //     }\n\n        //     return a.callback();\n        // }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product                     : string,\n    // product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface showMasterCodes{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass MasterCodes extends StaticMethods{\n\n    static async show(user:showMasterCodes){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(up:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.productMasterList+up.id,\n            headers :   header,\n            params  :   up,\n        }).then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : up\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.productMasterList,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.productMasterList,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default MasterCodes;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\ninterface add{\n    name : string\n}\n\n\n\n\nclass Category extends StaticMethods{\n\n    static async show(user:show){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.category+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.category+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.get,\n    //             format : format,\n    //             params : id\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    // static async update(up:any){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     const header = super.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"PATCH\",\n    //         url     :   Url.category+up.id,\n    //         headers :   header,\n    //         params  :   up,\n    //     }).then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.update,\n    //             format : format,\n    //             params : up\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:add){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.category,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    // static async addFile(file:File){\n        \n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n        \n    //     const token = Token.get();\n    //     const formData = new FormData();\n    //     formData.append('file',file);\n\n    //     await axios.post(Url.suppliers,formData,{\n    //         headers: {\n    //             'Content-Type'         :    'application/x-www-form-urlencoded',\n    //             'Accept'               :    'application/json',\n    //             'Authorization'        :    'Bearer '+token\n    //         }})\n    //     .then( (response:any) => {\n    //         format.status = response.status; \n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.addFile,\n    //             format : format,\n    //             params : file\n    //         });\n          \n    //     })\n    //     return format;\n    // }\n\n    // static async filter(filter:any){\n\n    //     let params = new URLSearchParams(filter).toString();\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n        \n    //     const header = this.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.productMasterList+'?filter=true&'+params,\n    //         headers :   header,\n    //     }).then( this.sleeper(1000))\n    //     .then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.filter,\n    //             format : format,\n    //             params : filter\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Category;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            // if(await Token.valid()){\n    \n            //     const id:any = jwt_decode(Token.get());\n            //     const user:Requests.Format = await Requests.User.get(id.sub);\n            //     if(user.status === 200){\n            //         updateUser(User(user.data));\n    \n            //         setToken(true);\n            //     }\n            // }\n\n            if(Token.exist()){\n                setToken(true);\n            }\n            \n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const MasterCodes        = \"MasterCodes\";\nexport const Category           = \"Category\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us, MasterCodes as ma } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\" | \"master\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n        let params = '';\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n\n        params = params+\"&page=\"+extra_params.page+\"&per_page=\"+extra_params.per_page;\n        \n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(params),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(params),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(params),\n                    });\n                }\n            case \"master\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : ma,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : ma,\n                        payload : await Requests.MasterCodes.filter(params),\n                    });\n                }\n        }\n\n        \n}\n","import { MasterCodes as MC } from './Types';\n\nexport const MasterCodes = (a:any) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : MC,\n                payload : a\n            });\n        }\n}\n","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const updateUser = useDispatch();\n    \n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = async (user:Requests.Format) => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            \n            const id:any = jwt_decode(Token.get());\n            const users:Requests.Format = await Requests.User.get(id.sub);\n            if(users.status === 200){\n                updateUser(User(users.data));\n            }\n\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            \n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\nimport { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n\n\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div> */}\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        {/* <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div> */}\n                        \n                    \n                        {/* <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div> */}\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    {/* <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div> */}\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover, makeStyles, Theme, createStyles } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\n\n\n\nconst styles = {\n    hidden : {\n        visibility:'hidden',\n    },\n    inherited : {\n        position : 'inherit',\n    },\n    shadowed : {\n        boxShadow : '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position : 'inherit'\n        },\n        list : {\n            root : {\n                visibility : 'hidden',\n                '&:hover' : {\n                    visibility : 'visible'\n                }\n            }\n        }\n\n    }),\n);\n\nconst SidebarList = (props:any) => {\n    const classes = useStyles(props);\n\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List /*className={!props.sidebar ? classes.root : ''}*/>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}\n                    >\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText /*className={classes.list}*/>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings, List} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token, Requests} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search,MasterCodes} from 'Redux/Actions';\n\nconst Navigation = (props:any) => {\n\t\n\tconst logo = \"/img/ideaserv.png\";\n\tlet sidebar_properties = [\n\t\t{\n\t\t\tname : \"Home\",\n\t\t\ticon : Home,\n\t\t\turl  : \"/\" \n\t\t},{\n\t\t\tname : \"Products\",\n\t\t\ticon : Laptop,\n\t\t\turl  : '/products',\n\t\t},{\n\t\t\tname :\t\"Product Maintenance\",\n\t\t\ticon :  List,\n\t\t\turl  :  '/summary'\n\t\t},{\n\t\t\tname : \"Suppliers\",\n\t\t\ticon :  Commute,\n\t\t\turl  : \"/suppliers\", \n\t\t},{\n\t\t\tname : \"Users\",\n\t\t\ticon :  SupervisedUserCircle,\n\t\t\turl  : \"/users\", \n\t\t\tprops: '',\n\t\t}\n\t];\n\n\n\n\n\n\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[reduxUser]);\n\t\n\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\t// window.location.reload();\n\t\tToken.remove();\n\n\t\t// if(!Token.exist){\n\t\t\twindow.location.href = \"/login\";\n\t\t\treturn\n\t\t// \treturn;\n\t\t// }\n\t\t// props.history.push('/login');\n\n\t\t\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n \n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\" | \"status\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product             : React.useRef(null),\n        product_description : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null),\n        status              : React.useRef(null),\n    };\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product             : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n        status              : null,\n    });\n\n    // const [filter, setFilter] = useState({\n    //     supplier            : {filter:'iet',key:''},\n    //     product_code        : {filter:'iet',key:''},\n    //     product_description : {filter:'iet',key:''},\n    //     serial_number       : {filter:'iet',key:''},\n    //     warranty            : {filter:'iet',key:''},\n    //     warranty_start      : {filter:'iet',key:''},\n    //     warranty_end        : {filter:'iet',key:''}\n    // });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product               = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        a.status                = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        \n        // setPopper({\n        //     ...popper,\n        //     [control] : null,\n        // })\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {props.filter.supplier.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            {props.filter.supplier.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={props.filter.supplier.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product\"\n                    value = {props.filter.product.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product)? \"simple-popper\" : undefined} open={Boolean(popper.product)} anchorEl={popper.product}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product.filter}\n                                onChange={setFilterControl}\n                                name = \"product\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product\")}>\n                            {props.filter.product.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product\")} disabled={props.filter.product.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {props.filter.product_description.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_description}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_description.filter}\n                                onChange={setFilterControl}\n                                name = \"product_description\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            {props.filter.product_description.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={props.filter.product_description.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {props.filter.serial_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.serial_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.serial_number.filter}\n                                onChange={setFilterControl}\n                                name = \"serial_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            {props.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={props.filter.serial_number.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {props.filter.warranty.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.warranty}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            {props.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={props.filter.warranty.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_start: {\n                                ...props.filter['warranty_start'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_start.key == '' ? null : moment(props.filter.warranty_start.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_start.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_start\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            {props.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={props.filter.warranty_start.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_end:{\n                                ...props.filter['warranty_end'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_end.key == '' ? null : moment(props.filter.warranty_end.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_end.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_end\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            {props.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={props.filter.warranty_end.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.status.key}\n                        onChange={setText}\n                        name=\"status\"\n                        onFocus = {(event)=>controller(event,\"status\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>New</MenuItem>\n                        <MenuItem value={2}>Replaced</MenuItem>\n                        <MenuItem value={3}>Returned</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.status)? \"simple-popper\" : undefined} open={Boolean(popper.status)} anchorEl={popper.status}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,status:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"status\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport { useSnackbar } from 'notistack';\nimport Close from '@material-ui/icons/Close';\n\ninterface Category{\n    \n    params : any,\n    open : any,\n\n    setOption : any,\n    setOpen : any,\n}\n\nconst Category = (props:Category) => {\n\n\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ error, setError ] = React.useState(false);\n    const [ message, setMessage ] = React.useState('');\n    const [category, setCategory ] = React.useState('');\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleClose = () => {\n        props.setOpen(!props.open);\n    }\n\n\n    const handleOption = async () => {\n        const a = await Requests.Category.show(props.params);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            opti = b.data.data;\n            props.params.page = 1;\n            props.params.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        props.setOption(opt);\n    }\n\n    const submitForm = async () => {\n        setError(false);\n        setSubmit(true);\n        if(category === ''){\n            setSubmit(false);\n            setError(true);\n            setMessage('Category name is required');\n            return;\n        }\n\n        let a = await Requests.Category.add({name:category});\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                handleOption();\n                handleClose();\n                enqueueSnackbar(\"Product category successfull added\",{variant:\"success\",action:actions});\n            }else{\n \n                if(a.status === 406){\n                    setSubmit(false);\n                    setError(true);\n                    setMessage('Category name already exists');\n                    return;\n                }else{\n                    enqueueSnackbar(\"Something went wrong. Please try again.\",{variant:\"error\",action:actions});\n                }\n            }\n        }\n\n        setSubmit(false);\n        setError(false);\n        setMessage('');\n    }\n\n    return(\n        <React.Fragment>\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Category</DialogTitle>\n                <DialogContent >\n                    <TextField\n                        id=\"outlined-email-input\"\n                        label=\"Category Name\"\n                        // className={classes.textField}\n                        type=\"text\"\n                        name=\"category\"\n                        value = {category}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange = {(event) => setCategory(event.target.value)}\n                        error = {error}\n                        helperText = {message}\n                        disabled={submit}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n\n                    <Button disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>        \n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nexport default Category;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none',\n\n            \"&:focus\": {\n                outline: 'none'\n            }\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Add = (props:Add) => {\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    const [input, setInput] = React.useState({\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        setInput({\n            ...input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.add(input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully added Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Add new product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Product</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                \n                                // defaultValue = {options[0]}\n                                // onChange = {props.updateInput}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n    params                      :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Add = (props:Add) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    React.useEffect( () => {\n        if(productCode && props.modalAdd){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n       \n    //    console.log(productCode.data);\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    if(props.modalAdd){\n        let options;\n\n        if(props.supplierState){\n            options = props.supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        let status = [\n            {\n                label : 'New',\n                value : 1,\n                target: {\n                    name : 'status',\n                    value : 1,\n                }\n            },{\n                label : 'Replaced',\n                value : 2,\n                target: {\n                    name : 'status',\n                    value : 2,\n                }\n            },{\n                label : 'Returned',\n                value : 3,\n                target: {\n                    name : 'status',\n                    value : 3,\n                }\n            }\n        ];\n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalAdd}\n                    onClose={ () =>props.setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.supplier.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} style = {styles.select}>{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.product_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Category</TableCell>\n                                        <TableCell align=\"left\">{props.product.product.category.name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                        <TableCell align=\"left\">{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                        <TableCell align=\"left\">{props.product.warranty > 1 ? props.product.warranty + ' Years ' : props.product.warranty + \" Year\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                        <TableCell align=\"left\">{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                        <TableCell align=\"left\">{moment(new Date(props.product.warranty_start).setFullYear(new Date(props.product.warranty_start).getFullYear() + props.product.warranty)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                        <TableCell align=\"left\">{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                        <TableCell align=\"left\">{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Status</TableCell>\n                                        <TableCell align=\"left\">{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  : 'Returned'\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Remarks</TableCell>\n                                        <TableCell align=\"left\">{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\n\ninterface Edit{\n    supplierState   : any,\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n    params          :   any,\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\nconst Edit = (props:Edit) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n\n    React.useEffect( () => {\n        if(productCode && props.modalEdit){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    let options;\n    if(props.supplierState){\n        options = props.supplierState.data.data.map((value:any) => {\n            return {\n                label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                value : value.id,\n                target: {\n                    name  : 'supplier',\n                    value : value.id \n                }\n            }\n        })\n    }else{\n        options = {\n            label : '',\n            value : '',\n            target: {\n                name : 'supplier',\n                value : ''\n            }\n        }\n    }\n\n    let status = [\n        {\n            label : 'New',\n            value : 1,\n            target: {\n                name : 'status',\n                value : 1,\n            }\n        },{\n            label : 'Replaced',\n            value : 2,\n            target: {\n                name : 'status',\n                value : 2,\n            }\n        },{\n            label : 'Returned',\n            value : 3,\n            target: {\n                name : 'status',\n                value : 3,\n            }\n        }\n    ];\n\n    if(props.product && productOption){\n        \n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalEdit}\n                    onClose={ () =>props.setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === props.productInput.supplier)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                defaultValue = {productOption? productOption.find((element:any) => element.value === props.productInput.product): ''}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                defaultValue = {status.find((element:any) => element.value === props.productInput.status)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.data.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.remarks} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.remarks} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Button, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux,Filter as Filterer,NavigationTitle,MasterCodes} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Upload from './Upload';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product                     : {error:false,message:''},\n    // product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''},\n    status                      : {error:false,message:''},\n    remarks                     : {error:false,message:''},\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product             : '',\n    // product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n    status              : '',\n    remarks             : '',\n\n}\n\n\nconst Products = (props:any) =>{\n    \n    // const [ page, setPage ] = React.useState(0);\n    const [ params, setParams ] = React.useState({\n        page     : 1,\n        per_page : 10\n    });\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n    const [filter, setFilter] = React.useState({\n        supplier            : {filter:'iet',key:''},\n        product             : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''},\n        status              : {filter:'iet',key:''}\n    });\n    const [ productCodeParam, setProductCodeParam ] = React.useState();\n\n\n\n    // const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n    const dispatch = useDispatch();\n\n\n    const getMasterCode = async () => {\n\t\tconst a = await Requests.MasterCodes.show({page:1,per_page:10});\n\n\t\tlet meta = a.data.meta;\n\n\t\tlet b;\n\n\t\tif(meta.per_page < meta.total){\n            b = await Requests.MasterCodes.show({page:1,per_page:meta.total});\n            setProductCodeParam({\n                page : 1,\n                per_page : meta.total\n            })    \n\t\t}else{\n            b = a;\n            setProductCodeParam({\n                page : 1,\n                per_page : 10\n            });    \n\t\t}\n\n        \n\t\tdispatch(MasterCodes(b));\n\n\t}\n\n\n    useEffect(()=>{\n        getMasterCode();\n\n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));  //for select option\n        dispatch(Filterer(filter,\"product\",params));\n        \n        return () =>{\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    \n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product                     : {error:false,message:''},\n            // product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''},\n            status                      : {error:false,message:''},\n            remarks                     : {error:false,message:''},\n        });\n    };\n    \n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"product\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"product\",paran));\n        \n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM/DD/YYYY'),\n            warranty_start     : moment(today).format('MM/DD/YYYY'),\n        });\n\n        // console.log(productInput);\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n\n        console.log(productInfo);\n\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM/DD/YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product                     : product.product.id,\n            // product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n\n        \n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    const status = (stat:any) => {\n        switch(stat){\n            case 1 : \n                return \"New\";\n            case 2 :\n                return \"Replace\";\n            case 3 : \n                return \"Returned\";\n        }\n    }\n\n\n    return(\n        <React.Fragment>\n            <Edit\n                supplierState   = {supplierState}\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n                params          = {productCodeParam}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n                params          = {productCodeParam}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>                                     \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params}/>\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_code}>{key.product.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_name}>{key.product.product_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"center\" title={status(key.status)}>{status(key.status)}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                { user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                    \n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n                                            className = \"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                    : ''\n                                }\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={productState ? params.page-1: 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"supplier\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"supplier\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {props.filter.supplier_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_code}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_code.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            {props.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={props.filter.supplier_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {props.filter.supplier_name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_name.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {props.filter.address.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.address}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.address.filter}\n                                onChange={setFilterControl}\n                                name = \"address\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            {props.filter.address.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={props.filter.address.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {props.filter.contact_person.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_person}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_person.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_person\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            {props.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={props.filter.contact_person.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {props.filter.contact_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_number.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            {props.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={props.filter.contact_number.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                        <TableCell align=\"left\" title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell align=\"left\">{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>   \n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.email} </TableCell>   \n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.email}</TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Filter as Filterer } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from './Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const [filter, setFilter] = React.useState({\n        supplier_code       : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        address             : {filter:'iet',key:''},\n        contact_person      : {filter:'iet',key:''},\n        contact_number      : {filter:'iet',key:''},\n        email               : {filter:'iet',key:''},\n    });\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    const [params, setParams] = React.useState({page:1,per_page:10});\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        result      : [],\n        open        : false,\n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Filterer(filter,\"supplier\",params));\n        \n\n        return () =>{\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    const uploadFile = () => {\n        togglePointerEvents(false)\n\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n        \n    }\n\n\n    const uploadSheet = async (file:File) => {\n\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors.message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"supplier\",params));\n\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n\n                return;\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n\n        let param = params;\n        param.page = newPage+1;\n        setParams(param);\n\n        dispatch(Filterer(filter,\"supplier\",param));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"supplier\",paran));\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n\n            {uploadFileModal()}\n\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                {\n                                    user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n\n                                            className=\"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                : null\n                            }\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={supplierState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"user\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"user\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {props.filter.username.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = { ref.username }\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.username.filter}\n                                onChange={setFilterControl}\n                                name = \"username\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            {props.filter.username.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={props.filter.username.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {props.filter.name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.name.filter}\n                                onChange={setFilterControl}\n                                name = \"name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            {props.filter.name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={props.filter.name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {props.filter.company.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.company}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.company.filter}\n                                onChange={setFilterControl}\n                                name = \"company\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            {props.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { props.filter.company.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.level.key}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        <MenuItem value={3}>Viewer</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.activated.key}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={0} >All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={2}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search,Filter as Filterer } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n\n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        username        : {filter:'iet',key:''},\n        name            : {filter:'iet',key:''},\n        company         : {filter:'iet',key:''},\n        email           : {filter:'iet',key:''},\n        level           : {filter:'iet',key:0},\n        activated       : {filter:'iet',key:0},\n    });\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : 1,\n        level               : 1,\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Users'));\n        dispatch(Filterer(filter,\"user\",params));\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"user\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"user\",paran));\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow> */}\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => element.value === usersInput.activated)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={usersState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"product_code\" | \"product_name\" | \"category\"\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        product_code    : React.useRef(null),\n        product_name    : React.useRef(null),\n        category         : React.useRef(null),\n    }\n\n    const [popper,setPopper] = useState({\n        product_code    : null,\n        product_name    : null,\n        category        : null\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.product_code     = null;\n        a.product_name     = null;\n        a.category         = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"master\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"master\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"master\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"master\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_code\"\n                    value = {props.filter.product_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = { ref.product_code }\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_code)? \"simple-popper\" : undefined} open={Boolean(popper.product_code)} anchorEl={popper.product_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_code.filter}\n                                onChange={setFilterControl}\n                                name = \"product_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_code\")}>\n                            {props.filter.product_code.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_code\")} disabled={props.filter.product_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_name\"\n                    value = {props.filter.product_name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_name)? \"simple-popper\" : undefined} open={Boolean(popper.product_name)} anchorEl={popper.product_name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_name.filter}\n                                onChange={setFilterControl}\n                                name = \"product_name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_name\")}>\n                            {props.filter.product_name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_name\")} disabled={props.filter.product_name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"category\"\n                    value = {props.filter.category.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"category\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.category}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.category)? \"simple-popper\" : undefined} open={Boolean(popper.category)} anchorEl={popper.category}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.category.filter}\n                                onChange={setFilterControl}\n                                name = \"category\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"category\")}>\n                            {props.filter.category.key === '' ?'Close' : 'Clear'}                                                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"category\")} disabled = { props.filter.category.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport { inputCSS } from 'react-select/src/components/Input';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n    input : any,\n    setInput : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none'\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Edit = (props:Add) => {\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    // const [input, setInput] = React.useState({\n    //     product_code : '',\n    //     product_name : '',\n    //     category     : '',\n    // });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        props.setInput({\n            ...props.input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.update(props.input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully Updated Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Update product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        props.open ?\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Edit Product Code</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {props.input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {props.input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n\n        : null\n      );\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.category} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                      \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.category} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {NavigationTitle,MasterCodes,Filter as Filterer} from 'Redux/Actions';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, CircularProgress, DialogContent } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from '../../../Services';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport Upload from './Upload';\n\n\n\nconst Summary = (props:any) => {\n\n    const dispatch = useDispatch();\n    const masterCode = useSelector( (state:any) => state.MasterCodes.data );\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar    \n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        product_code     : {filter:'iet',key:''},\n        product_name     : {filter:'iet',key:''},\n        category         : {filter:'iet',key:''},\n    });\n    const [ open, setOpen ] = React.useState(false);\n    \n    /**for file upload */\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n\n    let file:HTMLInputElement;\n\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.MasterCodes.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    /**********************/\n\n\n\n\n    //************** for edit\n\n    const [input, setInput] = React.useState({\n        id           : '',\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [openEdit, setOpenEdit] = React.useState(false);\n\n    const handleEdit = () => {\n        setOpenEdit(!openEdit)\n    }\n\n    //**************\n\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle('Product Master File Maintenance'));\n        dispatch(Filterer(filter,\"master\",params));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[])\n\n    const handleAdd = () => {\n        setOpen(!open);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"master\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        setParams(paran);\n        dispatch(Filterer(filter,\"master\",paran));\n    };\n\n    const initEdit = (a:any) => {\n\n        setInput({\n            id : a.id,\n            product_code : a.product_code,\n            product_name : a.product_name,\n            category : a.category.id\n        });\n        setOpenEdit(true);\n    }\n\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"center\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n    \n    return(\n        <React.Fragment>\n            <Add open={open} handleClose={handleAdd} per_page={params.per_page} page={params.page} />\n            <Edit open={openEdit} handleClose={handleEdit} per_page={params.per_page} page={params.page}  input = {input} setInput = {setInput}/>\n           \n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            \n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Category</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            masterCode ?\n                                masterCode.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initEdit(key)} >\n                                        <TableCell align=\"center\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.product_name}>{key.product_name}</TableCell>\n                                        <TableCell align=\"center\" title={key.category}>{key.category.name}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   \n                            skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () => handleAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={masterCode ? masterCode.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={masterCode ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n\n}\n\nexport default Summary;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.exist()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home,\n        exact : true\n    },{\n        path : \"/products\",\n        component : Component.Products,\n        exact : false\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers,\n        exact : false\n    },{\n        path : \"/users\",\n        component : Component.Users,\n        exact : false\n    },{\n        path : \"/reports\",\n        component : Component.Reports,\n        exact : false\n    },{\n        path : '/settings',\n        component : Component.Settings,\n        exact : false\n    },{\n        path : '/summary',\n        component : Component.Summary,\n        exact : false\n    }\n];\n","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\nimport { Token, Requests } from 'Services';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst Navigations = (props:any) =>{\n\n\n    const [ initialized, setInitialized ] = React.useState(false);\n    const updateUser = useDispatch();\n\n    React.useEffect(()=>{\n        if(!initialized){\n            checkToken();\n        }\n    },[initialized]);\n\n\n    const checkToken = async () => {\n        if(Token.exist()){\n            const id:any = jwt_decode(Token.get());\n            const user:Requests.Format = await Requests.User.get(id.sub);\n            if(user.status === 200){\n                updateUser(User(user.data));\n            }else{\n                Token.remove();\n            }\n        }\n\n        setInitialized(true);\n    }\n\n\n\n    if(!initialized){\n        return null;\n    }\n\n\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n            \n                <Switch>\n                   {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                    \n                    \n                    <Route path =\"/\">\n                            <Component.Navigation>\n                            <Switch>\n                                {\n                                    InsideNav.map((element,index) => \n                                        <Route exact={element.exact} path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                        // <Route exact path ={element.path} component={element.component} key={index} />\n                                    )\n                                }\n                            \n                                {/* <Route exact path =\"/\" render= {(props) => <ComponentMiddleware {...props} component={Component.Home} />}/>\n                                <Route exact path =\"/products\" render= {(props) => <ComponentMiddleware {...props} component={Component.Products} />}/>\n                                <Route exact path =\"/suppliers\" render= {(props) => <ComponentMiddleware {...props} component={Component.Suppliers} />}/>\n                                <Route exact path =\"/users\" render= {(props) => <ComponentMiddleware {...props} component={Component.Users} />}/>\n                                <Route exact path =\"/reports\" render= {(props) => <ComponentMiddleware {...props} component={Component.Reports} />}/>\n                                <Route exact path =\"/settings\" render= {(props) => <ComponentMiddleware {...props} component={Component.Settings} />}/> */}\n                                <Route component={Component.NotFound} />\n                                </Switch>\n\n\n                            </Component.Navigation>\n                            \n                    </Route>\n                    \n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { MasterCodes as MC } from '../Actions/Types';\n\nconst initialState:any = {\n\tdata : ''\n};\n\nconst MasterCodes = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase MC:\n\t\t\treturn {\n\t\t\t\tdata : action.payload,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default MasterCodes;","import { Category as ct } from '../Actions/Types';\n\nconst initialState:any = [];\n\nconst Category = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase ct:\n      \t\treturn state = action.payload;\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Category;","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\nimport MasterCodes from './MasterCodes';\nimport Category from './Category';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search,\n    MasterCodes,\n    Category,\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst a = (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  a ? \n    compose(\n      applyMiddleware(...middleware),a\n    )\n    :\n    compose(\n      applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}