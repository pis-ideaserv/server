{"version":3,"sources":["Services/Token.ts","Services/Requests/StaticMethods.ts","Services/ServerUrl.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Middleware/ComponentMiddleware.tsx","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","update","undefined","exist","Requests","Auth","check","network_error","status","StaticMethods","Object","classCallCheck","createClass","key","value","_handle_error","asyncToGenerator","regenerator_default","mark","_callee","b","format","wrap","_context","prev","next","response","abrupt","auth","valid","params","retry","callback","localStorage","getItem","parseInt","data","stop","_x","apply","arguments","_retry","_callee2","counter","_context2","setItem","String","delay","_x2","_x3","_delay","_callee3","ms","_context3","Promise","resolve","setTimeout","_x4","Content-Type","Accept","Authorization","sleeper","x","server_url","prefix","Url","login","logout","refresh","user","products","suppliers","axios","method","url","headers","header","username","password","then","catch","_ref","error","_this","handle_error","sent","_ref2","_this2","_ref3","_callee5","_context5","_this3","User","page","per_page","id","_x6","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","toString","_ref6","_callee11","_context11","_this6","_x12","Products","show","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","target","query","Filter","component","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","jwt_decode","sub","react_default","createElement","react_router","to","pathname","state","from","location","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","name","submitForm","jwt","preventDefault","checkUser","activated","returnUrl","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","AssignmentTurnedIn","Assessment","SupervisorAccount","esm_Settings","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","forEach","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","list","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","Commute","SupervisedUserCircle","Settings","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","checkQueryParams","removeEventListener","param","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","navigate","Navigation_SidebarDesktop","Backdrop","children","_useState","product_code","product_description","serial_number","warranty","warranty_start","warranty_end","_useState2","popper","setPopper","_useState3","_useState4","setFilter","reset","controller","Filter_objectSpread","setText","console","log","submitFilter","Filterer","onKey","e","length","TableRow","TableCell","align","onFocus","onKeyDown","Popper","allowKeyboardControl","animateYearScrolling","moment","initErrroMessage","delivery_date","reference_delivery_document","initProductInput","setPage","modalShow","setModalShow","modalAdd","setModalAdd","setProduct","_React$useState13","uploading","_React$useState14","upload","setUpload","_React$useState15","_React$useState16","productInput","setProductInput","_React$useState17","_React$useState18","productState","supplierState","supplierRedux","checkParams","productRedux","uploadFile","togglePointerEvents","files","selectedFile","filename","split","pop","FileReader","onload","result","workbook","xlsx","read","cellDates","cellNF","cellText","checkExcelFormat","sheet_to_json","Sheets","SheetNames","dateNF","readAsBinaryString","_unused","_loop","i","_ret","date","keys","v","Products_objectSpread","element","initModalEdit","Table","TableBody","supplier_code","setFullYear","getFullYear","created_by","options","supplier_name","react_select_browser_esm","defaultValue","find","isDisabled","minDate","modaledit","hidden","accept","ref","input","click","CloudUpload","modaladd","disableBackdropClick","TableHead","Products_Filter","hover","onDoubleClick","tableCell","Skeleton","height","skeletonTable","TableFooter","today","initModalAdd","TablePagination","rowsPerPageOptions","colSpan","count","meta","total","rowsPerPage","onChangePage","newPage","ActionsComponent","TablePaginationActions","Reports","address","contact_person","contact_number","Suppliers_Filter_objectSpread","initSupplierError","tin","initSupplier","setSupplier","supplierInput","setSupplierInput","supplierAction","Suppliers_objectSpread","Suppliers_Filter","Users_Filter_objectSpread","FormControl","Select","MenuItem","initUsers","users","setUsers","usersState","Users_objectSpread","Users_Filter","initModalShow","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","Navigations","react_router_dom","exact","strict","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0249428.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n        this.update();\n        return new Cookies().get('token');\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","import Token from \"../Token\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        if(b.response === undefined){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n            if(Token.valid()){\n                if(b.params === undefined || b.params === null){\n                    return this.retry(b.callback,undefined);\n                }\n\n                return this.retry(b.callback,b.params);\n            }\n        }\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(a !== null || a!== undefined){\n                a =0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(localStorage.getItem(Token.get()) === null || localStorage.getItem(Token.get()) === undefined ){\n            localStorage.setItem(Token.get(),String(0));\n        }else{\n            let a:any = localStorage.getItem(Token.get());\n            let counter = parseInt(a);\n            localStorage.setItem(Token.get(),String(counter+1));\n        }\n\n        await this.delay(1000);\n\n        if(params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(token === null || token === undefined){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n          return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n      }\n}","const server_url = 'http://localhost:8000/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n}\n\nconst Url = {\n    //auth\n    'login'     :   server_url+prefix.auth+'login',\n    'logout'    :   server_url+prefix.auth+'logout',\n    'refresh'   :   server_url+prefix.auth+'refresh',\n    'check'     :   server_url+prefix.auth+'check',\n\n    //user\n    'user'       : server_url+prefix.user,\n    'products'   : server_url+prefix.products,\n    'suppliers'  : server_url+prefix.supplier,\n}\n\nexport default Url;\n","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   this.header(),\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.login,\n                params : a\n            });\n\n        })\n\n        return format;\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.login,\n                auth    : true,\n            });\n        })\n        return format;\n\n    }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.check,\n                auth    : true,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params : user,\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.update,\n                auth    : false,\n                params  : user,\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : user,\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params  : search,\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response : error.response,\n                format : format,\n                callback : this.get,\n                auth    : false,\n                params  : filter,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product_code                : string,\n    product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.update,\n                auth        : false,\n                params      : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.addFile,\n                auth        : false,\n                params      : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.update,\n                auth        : false,\n                params      : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.add,\n                auth        : false,\n                params      : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.addFile,\n                auth        : false,\n                params      : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await this.handle_error({\n                response    : error.response,\n                format      : format,\n                callback    : this.show,\n                auth        : false,\n                params      : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\";\n\nexport const Filter = (filter:any,component:component) => {\n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(filter),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(filter),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(filter),\n                    });\n                }\n        }\n\n        \n}\n","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            if(await Token.valid()){\n    \n                const id:any = jwt_decode(Token.get());\n                const user:Requests.Format = await Requests.User.get(id.sub);\n                if(user.status === 200){\n                    updateUser(User(user.data));\n    \n                    setToken(true);\n                }\n            }\n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nconst title = 'Product Inquery System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = (user:Requests.Format):any => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { AssignmentInd, Assessment, AssignmentTurnedIn, Assignment, SupervisorAccount, Settings } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'100px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/user-logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    \n                        <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        {props.user.first_name+\" \"+props.user.last_name}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        &nbsp;Logout\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\nconst SidebarList = (props:any) => {\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            props.history.push(text.url);\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}>\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search} from 'Redux/Actions';\n\n// const menu_title = \"Product Inquery System\";\nconst logo = \"/img/ideaserv.png\";\nlet sidebar_properties = [\n\t{\n\t\tname : \"Home\",\n\t\ticon : Home,\n\t\turl  : \"/\" \n\t},{\n\t\tname : \"Products\",\n\t\ticon : Laptop,\n\t\turl  : '/products',\n\t},{\n\t\tname : \"Suppliers\",\n\t\ticon :  Commute,\n\t\turl  : \"/suppliers\", \n\t},{\n\t\tname : \"Users\",\n\t\ticon :  SupervisedUserCircle,\n\t\turl  : \"/users\", \n\t},{\n\t\tname : \"Reports\",\n\t\ticon :  Assignment,\n\t\turl  : \"/reports\", \n\t},{\n\t\tname : \"Settings\",\n\t\ticon :  Settings,\n\t\turl  : \"/settings\",\n\t\tprops: ''\n\t}\n]\n\n\nconst Navigation = (props:any) => {\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tif(reduxUser.level === 2){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t},{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}\n\t\t]\n\t}\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\tcheckQueryParams();\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[]);\n\n\n\tconst checkQueryParams = () => {\n\t\tconst param = new URLSearchParams(props.location.search);\n\t\t\n\t\tif(param.get('search')){\n\t\t\tdispatch(Search.value(param.get('search')));\n\t\t}\n\t}\n\t\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\twindow.location.reload();\n\t\tprops.history.push('/login');\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product_code\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product_code        : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier            : '',\n        product_code        : '',\n        product_description : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        warranty_end        : '',\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product_code          = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n\n        console.log(filter);\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }else{\n\n            let a = filter;\n\n            setFilter({\n                ...filter,\n                [control] : '',\n            });\n\n            console.log(filter,control);\n            \n            a[control] = \"\";\n            dispatch(Filterer(a,\"product\"));\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {filter.supplier}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_code\"\n                    value = {filter.product_code}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_code)? \"simple-popper\" : undefined} open={Boolean(popper.product_code)} anchorEl={popper.product_code}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {filter.product_description}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {filter.serial_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {filter.warranty}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({...filter,warranty_start:moment(event).format(\"YYYY-MM-DD\")})}\n                    value = {filter.warranty_start == '' ? null : moment(filter.warranty_start).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({...filter,warranty_end:moment(event).format(\"YYYY-MM-DD\")})}\n                    value = {filter.warranty_end == '' ? null : moment(filter.warranty_end).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React, { useEffect, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, Edit, Save, Cancel, SaveAlt, CloudUpload } from '@material-ui/icons';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product_code                : {error:false,message:''},\n    product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''}\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product_code        : '',\n    product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n}\n\n\nconst Products = (props:any) =>{\n    \n    const [ page, setPage ] = React.useState(0);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n\n    const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n    \n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));\n        dispatch(Search.target('products'));\n        checkParams();\n\n        return () =>{\n            // clearInterval(productInterval);\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"products\"}));\n            return;\n        }\n\n        dispatch(productRedux(params));\n        return;\n    }\n\n\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product_code                : {error:false,message:''},\n            product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''}\n        });\n    };\n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(productRedux(params));\n    }\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            let date:any = true;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n                if(counter === 4 || counter === 8 || counter === 9){\n                    if(!(data[i][key] instanceof Date)) date = false; \n                }\n            });\n\n            if(counter !== 9 || !date){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length != 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                console.log(errors);\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date().toString();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : today,\n            warranty_start     : today, \n        });\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const modaladd = () => {\n\n        if(modalAdd){\n            let options;\n            if(supplierState){\n                options = supplierState.data.data.map((value:any) => {\n                    return {\n                        label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                        value : value.id,\n                        target: {\n                            name  : 'supplier',\n                            value : value.id \n                        }\n                    }\n                })\n            }else{\n                options = {\n                    label : '',\n                    value : '',\n                    target: {\n                        name : 'supplier',\n                        value : ''\n                    }\n                }\n            }\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Document #\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(event)=>{\n                                event.persist();\n                                file.click()\n                            }}\n                        >\n                                <CloudUpload />&nbsp;  \n                                Import file\n                        </Button>\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                       \n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const modalshow = () => {\n\n        if(product){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{product.supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                            <TableCell align=\"left\">{product.product_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                            <TableCell align=\"left\">{product.product_description}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                            <TableCell align=\"left\">{product.serial_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                            <TableCell align=\"left\">{product.delivery_date}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                            <TableCell align=\"left\">{product.warranty > 1 ? product.warranty + ' Years ' : product.warranty + \" Year\"}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                            <TableCell align=\"left\">{moment(product.warranty_start).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                            <TableCell align=\"left\">{moment(new Date(product.warranty_start).setFullYear(new Date(product.warranty_start).getFullYear() + product.warranty)).format(\"LL\")}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Document #</TableCell>\n                                            <TableCell align=\"left\">{product.reference_delivery_document}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                            <TableCell align=\"left\">{product.created_by.first_name + \" \" + product.created_by.last_name}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n        \n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('YYYY,MM,DD'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product_code                : product.product_code,\n            product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n    \n    const modaledit = () => {\n\n        let options;\n        if(supplierState){\n            options = supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        if(product){\n        \n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === productInput.supplier)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Document #\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>                                      \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.product_description}>{key.product_description}</TableCell>\n                                        <TableCell align=\"center\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"center\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"center\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={productState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier_code       : \"\",\n        supplier_name       : \"\",\n        address             : \"\",\n        contact_person      : \"\",\n        contact_number      : \"\",\n        email               : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n\n        console.log(filter);\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }else{\n\n            let a = filter;\n\n            setFilter({\n                ...filter,\n                [control] : '',\n            });\n\n            console.log(filter,control);\n            \n            a[control] = \"\";\n            dispatch(Filterer(a,\"supplier\"));\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {filter.supplier_code}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {filter.supplier_name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {filter.address}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {filter.contact_person}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {filter.contact_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.contact_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Search } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n\n    //static variable\n    const params = {page:1,per_page:10};\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        // dispatch when mounting ...\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Search.target(\"suppliers\"));\n        checkParams();\n\n        return () =>{\n            //dispatch when unmouting ...\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n    const checkParams = () => {\n\n        const param =  new URLSearchParams(props.location.search);\n    \n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"suppliers\"}));\n            return;\n        }\n\n        dispatch(supplierAction(params));\n        return;\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n            });\n\n            if(counter !== 7){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length !== 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                console.log(errors);\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(supplierAction(params));\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    const modalshow = () =>{\n\n        if(supplier){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_name}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                            <TableCell align=\"left\">{supplier.tin}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                            <TableCell align=\"left\" title={supplier.address}>{supplier.address}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_person}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact #</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\">{supplier.email}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n\n    };\n    const modaledit = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalEdit}\n                onClose={ () =>setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    const modaladd  = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalAdd}\n                onClose={ () =>setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                            <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions> {/*className=\"product-modal-footer\"*/}\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button \n                            color=\"primary\"\n                            variant=\"contained\"\n                            onClick={(event)=>{\n                                event.persist();\n                                file.click()\n                            }}\n                        >\n                                <CloudUpload />&nbsp;  \n                                Import file\n                    </Button>\n\n                    <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact #</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"center\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"center\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"center\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"center\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={supplierState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const [filter, setFilter] = useState({\n        username        : \"\",\n        name            : \"\",\n        company         : \"\",\n        email           : \"\",\n        level           : \"\",\n        activated       : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n\n        console.log(filter);\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }else{\n\n            let a = filter;\n\n            setFilter({\n                ...filter,\n                [control] : '',\n            });\n\n            console.log(filter,control);\n            \n            a[control] = \"\";\n            dispatch(Filterer(a,\"user\"));\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {filter.username}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {filter.name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {filter.company}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.email}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.level}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"level\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.activated}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={0}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"activated\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search} from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n    const params = {page:1,per_page:10};\n    \n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : null ,\n        level               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        \n        checkParams();\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        dispatch(Search.target('users'));\n        dispatch(NavigationTitle('Users'));\n\n\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"users\"}));\n            return;\n        }\n\n        dispatch(user(params));\n        return;\n    }\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(user(params));\n    }\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"center\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"center\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"center\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"center\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"center\" title={key.level === 1 ? 'Admin' : 'Encoder'}>{key.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        <TableCell align=\"center\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={usersState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.valid()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home\n    },{\n        path : \"/products\",\n        component : Component.Products\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers\n    },{\n        path : \"/users\",\n        component : Component.Users\n    },{\n        path : \"/reports\",\n        component : Component.Reports\n    },{\n        path : '/settings',\n        component : Component.Settings\n    }\n];","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\n\nconst Navigations = (props:any) =>{\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                   \n                    <Route path =\"/\" strict>\n                        <Component.Navigation>\n                            {\n                                InsideNav.map((element,index) => \n                                    <Route exact path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                    // <Route exact path ={element.path} component={element.component} key={index} />\n                                )\n                            }\n                        </Component.Navigation>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()      //comment this for production\n  )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}