{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Services/Requests/MasterCodes.ts","Services/Requests/Category.ts","Services/Requests/Logs.ts","Middleware/ComponentMiddleware.tsx","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Redux/Actions/MasterCodes.ts","Components/Login/index.tsx","Components/Main/Home/Admin.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Summary/Category.tsx","Components/Main/Summary/Add.tsx","Components/Main/Products/Add.tsx","Components/Main/Products/Show.tsx","Components/Main/Products/Edit.tsx","Components/Main/Products/Upload.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/Add.tsx","Components/Main/Suppliers/Edit.tsx","Components/Main/Suppliers/Show.tsx","Components/Main/Suppliers/Upload.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Components/NotFound/index.tsx","Components/Main/Summary/Edit.tsx","Components/Main/Summary/Upload.tsx","Components/Main/Summary/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/MasterCodes.ts","Redux/Reducers/Category.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","prefix","Url","login","logout","refresh","user","products","suppliers","productMasterList","category","logs","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","data","stop","_x2","_handle_error","_callee2","b","_context2","params","retry","callback","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","Promise","resolve","setTimeout","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","MasterCodes","up","pml","Category","Logs","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","react_default","createElement","component","react_router","to","pathname","state","from","location","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","Filter","extra_params","keys","forEach","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","target","name","submitForm","jwt","preventDefault","jwt_decode","sub","checkUser","users","returnUrl","activated","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","console","log","requestLog","setData","rowsPerPage","setPage","setRowsPerPage","_React$useState7","_React$useState8","open","setOpen","_React$useState9","_React$useState10","modal","setModal","_React$useState11","_React$useState12","setTarget","initModal","Fragment","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Table","size","TableBody","TableRow","TableCell","scope","supplier_code","product_code","product_name","serial_number","moment","delivery_date","warranty","warranty_start","warranty_end","reference_delivery_document","remarks","supplier_name","tin","address","contact_person","contact_number","email","first_name","last_name","company","level","ProductMasterList","DialogActions","onClick","dataModal","style","marginTop","Paper","index_es","meta","total","ArrowForward","Typography","padding","fontWeight","textTransform","TableHead","map","hover","updated_at","action","previous","tableCell","align","Skeleton","i","skeletonTable","TablePagination","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","title","control","Home_Admin","Topbar","initUsersError","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","window","reload","updateErrorState","errors","holder","fullWidth","textAlign","overflow","display","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","edge","width","sidebar","toggleSidebar","swipeDrawer","noWrap","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","esm_Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","styles","hidden","visibility","inherited","shadowed","boxShadow","icon","backgroundColor","borderRadius","useStyles","makeStyles","theme","createStyles","root","list","&:hover","sidebar_properties","List","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Dropbox","ProgressWrench","VanUtility","Account","setSidebar","swipe","setSwipe","innerWidth","setWidth","setSearch","setUser","reduxUser","addEventListener","updateBrowserWidth","sidebars","removeEventListener","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","href","navigate","Navigation_SidebarDesktop","Backdrop","children","ref","useRef","product_description","_useState","_useState2","popper","setPopper","reset","controller","Filter_objectSpread","setText","setFilter","setFilterControl","submitFilter","Filterer","onKey","e","length","current","blur","onFocus","onKeyDown","inputRef","Popper","FormControl","Select","MenuItem","selected","allowKeyboardControl","animateYearScrolling","setMessage","setCategory","Close_default","handleClose","handleOption","opti","opt","setOption","disableBackdropClick","InputLabelProps","shrink","container","flexWrap","textField","marginRight","marginBottom","dense","spacing","menu","dialog","select","background","left","zIndex","addCategory","right","transform","outline","&:focus","categoryError","fontSize","Add","initError","classes","option","input","setInput","categoryHandle","setCategoryHandler","categoryParams","queryCategory","handleChangeText","Add_objectSpread","_a","Summary_Category","paperScrollPaper","react_select_browser_esm","options","Fab","Add_default","buttonStyle","productCode","productOption","setProductOption","openAddProduct","setOpenAddProduct","modalAdd","initProduct","handleProductAdd","supplierState","Summary_Add","setModalAdd","isDisabled","productInput","Show","modalShow","setModalShow","created_by","initModalEdit","Edit","defaultValue","find","element","Upload","setUpload","Upload_objectSpread","upload","skipped","maxHeight","result","success","initErrroMessage","initProductInput","setParams","setProduct","_React$useState13","uploading","_React$useState14","_React$useState15","_React$useState16","_React$useState17","_React$useState18","productCodeParam","setProductCodeParam","_React$useState19","_React$useState20","setProductInput","_React$useState21","_React$useState22","productState","getMasterCode","supplierRedux","uploadSheet","Products_objectSpread","togglePointerEvents","productRedux","stat","Products_Edit","Products_Add","Products_Show","Products_Upload","Products_Filter","onDoubleClick","productInfo","height","TableFooter","today","initModalAdd","accept","files","selectedFile","filename","split","pop","click","CloudUpload","colSpan","pams","paran","ActionsComponent","TablePaginationActions","Reports","Settings","Suppliers_Filter_objectSpread","supplierInput","Suppliers_Upload_objectSpread","initSupplierError","initSupplier","setSupplier","setSupplierInput","Suppliers_objectSpread","supplierAction","Suppliers_Show","Suppliers_Edit","Suppliers_Add","Suppliers_Upload","Suppliers_Filter","param","Users_Filter_objectSpread","initUsers","setUsers","usersState","Users_objectSpread","modaledit","modaladd","Users_Filter","initModalShow","NotFound","Edit_objectSpread","Summary_Upload_objectSpread","Summary","masterCode","Summary_objectSpread","openEdit","setOpenEdit","handleAdd","Summary_Edit","Summary_Upload","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","exact","Navigations","initialized","setInitialized","checkToken","react_router_dom","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","NavigationTitle_objectSpread","Search_objectSpread","combineReducers","middleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ipBAGqBA,oGAEEC,GACf,IAAIC,EAAI,IAAIC,KACZD,EAAEE,WAAWF,EAAEG,aAAe,MAEd,IAAIC,KACZC,IAAI,QAAQN,EAAM,CACtBO,QAASN,qCAMb,IAEMD,GAFU,IAAIK,KAEEG,IAAI,SAC1BC,KAAKC,KAAKV,qCAIM,IAAIK,KACZM,OAAO,uCAMf,OAAGZ,EAAMa,SACLH,KAAKI,UACE,IAAIR,KAAUG,IAAI,UAGtB,qCAKP,IACMR,GADU,IAAIK,KACEG,IAAI,SAE1B,YAAaM,IAAVd,GAAiC,OAAVA,GAA4B,KAAVA,oJAezCD,EAAMa,yCACeG,EAASC,KAAKC,oBAA5BhB,UAEDiB,eAA8B,MAAbjB,EAAEkB,8BACpBV,KAAKE,4BACE,iBAEPF,KAAKI,4BACE,qCAIR,gICrETO,EACY,QA0BHC,EAhBH,CAERC,MAfe,QAeUF,EAAY,QACrCG,OAhBe,QAgBUH,EAAY,SACrCI,QAjBe,QAiBUJ,EAAY,UACrCH,MAlBe,QAkBUG,EAAY,QAGrCK,KArBe,QAID,SAkBdC,SAtBe,QAKD,YAkBdC,UAvBe,QAMD,aAkBdC,kBAxBe,QAOD,uBAkBdC,SAzBe,QAQD,YAkBdC,KA1Be,QASD,SCgBLC,EAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAvB,KAAAsB,GAAA,OAAAC,OAAAE,EAAA,EAAAF,CAAAD,EAAA,OAAAI,IAAA,SAAAC,MAAA,SAAAC,GAAA,SAAAC,EAAAC,GAAA,OAAAF,EAAAG,MAAA/B,KAAAgC,WAAA,OAAAH,EAAAI,SAAA,kBAAAL,EAAAK,YAAAJ,EAAA,gBAAAK,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAA,SAAAC,EAGwB9C,GAHxB,IAAA+C,EAAA,OAAAH,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAIYJ,EAAS/C,EAAE+C,OAGX/C,EAAEoD,MAAMC,SAPpB,CAAAJ,EAAAE,KAAA,eAQYJ,EAAO9B,eAAgB,EARnCgC,EAAAK,OAAA,SASmBP,GATnB,cAqBQA,EAAO7B,OAASlB,EAAEoD,MAAMC,SAASnC,OACjC6B,EAAOQ,KAASvD,EAAEoD,MAAMC,SAASE,KAtBzCN,EAAAK,OAAA,SAwBeP,GAxBf,wBAAAE,EAAAO,SAAAV,MAAA,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,MAAAN,IAAA,eAAAC,MAAA,eAAAuB,EAAA3B,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAA,SAAAc,EA6B8BC,GA7B9B,IAAAb,EAAA/C,EAAA,OAAA4C,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,UA8BcJ,EAASa,EAAEb,OAGba,EAAEP,SAjCd,CAAAQ,EAAAV,KAAA,eAkCWJ,EAAO9B,eAAgB,EAlClC4C,EAAAP,OAAA,SAmCkBP,GAnClB,UAoDiC,MAAtBa,EAAEP,SAASnC,OApDtB,CAAA2C,EAAAV,KAAA,WAiEgBS,EAAEE,OAjElB,CAAAD,EAAAV,KAAA,eAAAU,EAAAP,OAAA,SAkEuB9C,KAAKuD,MAAMH,EAAEI,cAASnD,IAlE7C,cAAAgD,EAAAP,OAAA,SAqEmB9C,KAAKuD,MAAMH,EAAEI,SAASJ,EAAEE,SArE3C,UA2EiC,MAAtBF,EAAEP,SAASnC,OA3EtB,CAAA2C,EAAAV,KAAA,aA4EgBnD,EAAQiE,aAAaC,QAAQpE,EAAMS,UAGnCP,EAAI,KAGJmE,SAASnE,IAAM,GAlF/B,CAAA6D,EAAAV,KAAA,gBAAAU,EAAAP,OAAA,SAmFuB9C,KAAKuD,MAAMH,EAAEI,SAASJ,EAAEE,SAnF/C,eAwFQf,EAAO7B,OAAS0C,EAAEP,SAASnC,OAC3B6B,EAAOQ,KAASK,EAAEP,SAASE,KAzFnCM,EAAAP,OAAA,SA0FeP,GA1Ff,yBAAAc,EAAAL,SAAAG,EAAAnD,SAAA,gBAAA4D,GAAA,OAAAV,EAAAnB,MAAA/B,KAAAgC,YAAA,KAAAN,IAAA,QAAAC,MAAA,eAAAkC,EAAAtC,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAA,SAAAyB,EA8FuBN,EAAkBF,GA9FzC,IAAA9D,EAAAuE,EAAA,OAAA3B,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cA+FWrD,EAAMa,UACDsD,aAAaC,QAAQpE,EAAMS,QAGvBP,EAAQiE,aAAaC,QAAQpE,EAAMS,OACnCgE,EAAUJ,SAASnE,GACvBiE,aAAaQ,QAAQ3E,EAAMS,MAAMmE,OAAOH,EAAQ,KAJhDN,aAAaQ,QAAQ3E,EAAMS,MAAMmE,OAAO,KAjGxDF,EAAArB,KAAA,EAyGc3C,KAAKmE,MAAM,KAzGzB,UA2GYb,EA3GZ,CAAAU,EAAArB,KAAA,eAAAqB,EAAAlB,OAAA,SA4GmBU,KA5GnB,cAAAQ,EAAAlB,OAAA,SA+GeU,EAASF,IA/GxB,wBAAAU,EAAAhB,SAAAc,EAAA9D,SAAA,gBAAAoE,EAAAC,GAAA,OAAAR,EAAA9B,MAAA/B,KAAAgC,YAAA,KAAAN,IAAA,QAAAC,MAAA,eAAA2C,EAAA/C,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAA,SAAAkC,EAmHuBC,GAnHvB,OAAApC,EAAA5C,EAAAgD,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA3B,OAAA,SAoHe,IAAI4B,QAAS,SAAAC,GAAO,OAAIC,WAAWD,EAASH,MApH3D,wBAAAC,EAAAzB,SAAAuB,MAAA,gBAAAM,GAAA,OAAAP,EAAAvC,MAAA/B,KAAAgC,YAAA,KAAAN,IAAA,SAAAC,MAAA,SAwHkBpC,GAEV,OAAIA,EAOG,CACHuF,eAA4B,mBAC5BC,OAA4B,mBAC5BC,cAA4B,UAAUzF,GAT/B,CACHuF,eAAiB,mBACjBC,OAAkB,sBA7HlC,CAAArD,IAAA,UAAAC,MAAA,eAAAsD,EAAA1D,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAA,SAAA6C,IAAA,IAAA3C,EAAA4C,EAAA,OAAA/C,EAAA5C,EAAAgD,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cA+IYJ,EAAgB,CAChB9B,eAAgB,EAChBC,OAAS,EACTqC,KAAO,IAELoC,EAASnF,KAAKmF,OAAO7F,EAAMS,OApJzCqF,EAAAzC,KAAA,EAsJc0C,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIG,QAChByE,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAAO,WACNnD,EAAQ,CACJ9B,eAAgB,EAChBC,OAAS,EACTqC,KAAO,MAjKvB,cAAAqC,EAAAtC,OAAA,SAqKeP,GArKf,wBAAA6C,EAAApC,SAAAkC,EAAAlF,SAAA,yBAAAiF,EAAAlD,MAAA/B,KAAAgC,YAAA,MAAAV,EAAA,GAAaA,EAwIFqE,QAAU,SAACnB,GACd,OAAO,SAASoB,GACZ,OAAO,IAAIlB,QAAQ,SAAAC,GAAO,OAAIC,WAAW,kBAAMD,EAAQiB,IAAIpB,WCxDxDjE,6NAlGef,yFAElB+C,EAAgB,CAChB9B,eAAgB,EAChBC,OAAS,EACTqC,KAAO,IAGLoC,gEAEAE,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIC,MAChB2E,QAAYL,EACZpC,KAAY,CACR8C,SAAWrG,EAAEqG,SACbC,SAAWtG,EAAEsG,YAElBL,KAAM,SAAA5C,GACLN,EAAS,CACL9B,eAAgB,EAChBC,OAAgBmC,EAASnC,OACzBqC,KAAgBF,EAASE,QAE9B2C,MAdG,eAAAxD,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAcI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAhB,GAAA,SAAA0F,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKpF,MAChB0B,OAASA,EACTe,OAAS9D,IALP,OACN+C,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MAdJ,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,oCAuBCO,gQAgCHA,EAAgB,CAChB9B,eAAgB,EAChBC,OAAS,EACTqC,KAAO,IAGPzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,4BACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIJ,MAChBgF,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAPG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAhB,GAAA,SAAA8F,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAK7F,MAChB+B,OAASA,IAJP,OACNA,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MAPJ,gBAAAF,GAAA,OAAAwC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAcCO,4GA/FIjB,GCuOJgF,4NAjNOtF,qFACVuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAII,KAAK,SAASA,EAAKuF,KAAK,aAAavF,EAAKwF,SAC1DhB,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAPG,eAAAxD,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAL,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAAStC,IALP,OACNuB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MAPJ,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,oCAeCO,0KAGMmE,qFAETnE,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAII,KAAK0F,EACrBlB,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,KAAKA,OAC7B2C,MAPG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAD,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAKtG,IAChBwC,OAASA,EACTe,OAASoD,IALP,OACNnE,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MAPJ,gBAAAM,GAAA,OAAAgC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAeCO,6KAISvB,qFACZuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,QACZC,IAAY3E,EAAII,KAAKA,EAAK0F,GAC1BlB,QAAYL,EACZ7B,OAAYtC,IACbyE,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MARG,eAAAiB,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAQI,SAAA6C,EAAOtC,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAM,GAAAV,KAAAU,EACsB,CACxBhE,MAAQA,EACRY,SAAWoD,EAAKxG,OAChBmC,OAASA,EACTe,OAAStC,IALP,OACNuB,EADM6C,EAAAe,KAAA,wBAAAf,EAAApC,SAAAkC,MARJ,gBAAAL,GAAA,OAAA8B,EAAA5E,MAAA/B,KAAAgC,YAAA,oCAgBCO,0KAGMvB,qFACTuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAII,KAChBwE,QAAYL,EACZ7B,OAAYtC,IACbyE,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MARG,eAAAmB,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAQI,SAAAyE,EAAOlE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAU,GAAAd,KAAAc,EACsB,CACxBpE,MAAQA,EACRY,SAAWwD,EAAKC,IAChB1E,OAASA,EACTe,OAAStC,IALP,OACNuB,EADMwE,EAAAZ,KAAA,wBAAAY,EAAA/D,SAAA8D,MARJ,gBAAAI,GAAA,OAAAL,EAAA9E,MAAA/B,KAAAgC,YAAA,oCAgBCO,6KAGS4E,qFACZ5E,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAII,KAAK,WAAWmG,EAChC3B,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAPG,eAAA0B,EAAA7F,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAgF,EAAOzE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAiB,GAAArB,KAAAqB,EACsB,CACxB3E,MAAQA,EACRY,SAAW+D,EAAKJ,OAChB5E,OAASA,EACTe,OAAS6D,IALP,OACN5E,EADM+E,EAAAnB,KAAA,wBAAAmB,EAAAtE,SAAAqE,MAPJ,gBAAAG,GAAA,OAAAJ,EAAArF,MAAA/B,KAAAgC,YAAA,oCAeCO,6KAISkF,uFAEZnE,EAAS,IAAIoE,gBAAgBD,GAAQxF,WAGrCM,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAII,KAAK,gBAAgBsC,EACrCkC,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAPG,eAAAiC,EAAApG,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAuF,EAAOhF,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAA+E,GAAA,SAAAwB,GAAA5B,KAAA4B,EACsB,CACxBlF,MAAQA,EACRY,SAAWsE,EAAKL,OAChBlF,OAASA,EACTe,OAASmE,IALP,OACNlF,EADMsF,EAAA1B,KAAA,wBAAA0B,EAAA7E,SAAA4E,MAPJ,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA/B,KAAAgC,YAAA,oCAeCO,8GA9MIjB,GCsRJ0G,4NA3QOhH,qFACVuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,SAGR1C,IAATW,GAA+B,OAATA,IACrBA,EAAO,CACHuF,KAAO,EACPC,SAAW,KAIflH,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIK,SAAS,SAASD,EAAKuF,KAAK,aAAavF,EAAKwF,SAC9DhB,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAxD,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAA/B,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAAStC,IALP,OACNuB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MATJ,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,oCAiBCO,8KA+BS0F,qFAEZ1F,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,QACZC,IAAY3E,EAAIK,SAASgH,EAAQvB,GACjClB,QAAYL,EACZ7B,OAAY2E,IAEfxC,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAA3B,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAKjG,OAChBmC,OAASA,EACTe,OAAS2E,IALP,OACN1F,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MATJ,gBAAAM,GAAA,OAAAgC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAkBCO,0KAOM0F,qFACT1F,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIK,SAChBuE,QAAYL,EACZ7B,OAAY2E,IAEfxC,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAiB,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAA6C,EAAOtC,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAApB,GAAAV,KAAAU,EACsB,CACxBhE,MAAQA,EACRY,SAAWoD,EAAKK,IAChB1E,OAASA,EACTe,OAAS2E,IALP,OACN1F,EADM6C,EAAAe,KAAA,wBAAAf,EAAApC,SAAAkC,MATJ,gBAAAL,GAAA,OAAA8B,EAAA5E,MAAA/B,KAAAgC,YAAA,oCAkBCO,8KAIU2F,uFAEb3F,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGLhD,EAAQD,EAAMS,OACdoI,EAAW,IAAIC,UACZC,OAAO,OAAOH,aAEjB7C,IAAMiD,KAAK1H,EAAIK,SAASkH,EAAS,CACnC3C,QAAS,CACLV,eAA4B,oCAC5BC,OAA4B,mBAC5BC,cAA4B,UAAUzF,KAE7CkG,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAmB,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAyE,EAAOlE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAAhB,GAAAd,KAAAc,EACsB,CACxBpE,MAAQA,EACRY,SAAWwD,EAAKuB,QAChBhG,OAASA,EACTe,OAAS4E,IALP,OACN3F,EADMwE,EAAAZ,KAAA,wBAAAY,EAAA/D,SAAA8D,MATJ,gBAAAI,GAAA,OAAAL,EAAA9E,MAAA/B,KAAAgC,YAAA,qCAkBCO,yKAGS4E,qFACZ5E,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIK,SAAS,WAAWkG,EACpC3B,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAA0B,EAAA7F,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAgF,EAAOzE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAAT,GAAArB,KAAAqB,EACsB,CACxB3E,MAAQA,EACRY,SAAW+D,EAAKJ,OAChB5E,OAASA,EACTe,OAAS6D,IALP,OACN5E,EADM+E,EAAAnB,KAAA,wBAAAmB,EAAAtE,SAAAqE,MATJ,gBAAAG,GAAA,OAAAJ,EAAArF,MAAA/B,KAAAgC,YAAA,oCAiBCO,6KAISkF,uFAEZnE,EAAS,IAAIoE,gBAAgBD,GAAQxF,WAErCM,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIK,SAAS,gBAAgBqC,EACzCkC,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAiC,EAAApG,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAuF,EAAOhF,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAyG,GAAA,SAAAF,GAAA5B,KAAA4B,EACsB,CACxBlF,MAAQA,EACRY,SAAWsE,EAAKL,OAChBlF,OAASA,EACTe,OAASmE,IALP,OACNlF,EADMsF,EAAA1B,KAAA,wBAAA0B,EAAA7E,SAAA4E,MATJ,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA/B,KAAAgC,YAAA,oCAiBCO,8GApQQjB,GCgQRkH,4NA1QOxH,qFAEVuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,SAGR1C,IAATW,GAA+B,OAATA,IACrBA,EAAO,CACHuF,KAAO,EACPC,SAAW,KAIflH,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIM,UAAU,SAASF,EAAKuF,KAAK,aAAavF,EAAKwF,SAC/DhB,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAxD,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAAvC,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAAStC,IALP,OACNuB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MATJ,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,oCAiBCO,8KA+BSkG,qFACZlG,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,QACZC,IAAY3E,EAAIM,UAAUuH,EAAS/B,GACnClB,QAAYL,EACZ7B,OAAYmF,IAGfhD,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAVG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAUI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAAnC,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAKjG,OAChBmC,OAASA,EACTe,OAASmF,IALP,OACNlG,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MAVJ,gBAAAM,GAAA,OAAAgC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAkBCO,0KAOMkG,qFACTlG,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIM,UAChBsE,QAAYL,EACZ7B,OAAYmF,IAGfhD,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAVG,eAAAiB,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAUI,SAAA6C,EAAOtC,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAA5B,GAAAV,KAAAU,EACsB,CACxBhE,MAAQA,EACRY,SAAWoD,EAAKK,IAChB1E,OAASA,EACTe,OAASmF,IALP,OACNlG,EADM6C,EAAAe,KAAA,wBAAAf,EAAApC,SAAAkC,MAVJ,gBAAAL,GAAA,OAAA8B,EAAA5E,MAAA/B,KAAAgC,YAAA,oCAkBCO,8KAGU2F,uFAEb3F,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGLhD,EAAQD,EAAMS,OACdoI,EAAW,IAAIC,UACZC,OAAO,OAAOH,aAEjB7C,IAAMiD,KAAK1H,EAAIM,UAAUiH,EAAS,CACpC3C,QAAS,CACLV,eAA4B,oCAC5BC,OAA4B,mBAC5BC,cAA4B,UAAUzF,KAE7CkG,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAmB,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAyE,EAAOlE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAAxB,GAAAd,KAAAc,EACsB,CACxBpE,MAAQA,EACRY,SAAWwD,EAAKuB,QAChBhG,OAASA,EACTe,OAAS4E,IALP,OACN3F,EADMwE,EAAAZ,KAAA,wBAAAY,EAAA/D,SAAA8D,MATJ,gBAAAI,GAAA,OAAAL,EAAA9E,MAAA/B,KAAAgC,YAAA,qCAkBCO,yKAGS4E,qFAEZ5E,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIM,UAAU,WAAWiG,EACrC3B,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAA0B,EAAA7F,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAgF,EAAOzE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAAjB,GAAArB,KAAAqB,EACsB,CACxB3E,MAAQA,EACRY,SAAW+D,EAAKJ,OAChB5E,OAASA,EACTe,OAAS6D,IALP,OACN5E,EADM+E,EAAAnB,KAAA,wBAAAmB,EAAAtE,SAAAqE,MATJ,gBAAAG,GAAA,OAAAJ,EAAArF,MAAA/B,KAAAgC,YAAA,oCAiBCO,6KAISkF,uFAEZnE,EAAS,IAAIoE,gBAAgBD,GAAQxF,WAErCM,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIM,UAAU,gBAAgBoC,EAC1CkC,QAAYL,IACbM,KAAMzF,KAAK2F,QAAQ,MACrBF,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MARG,eAAAiC,EAAApG,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAQI,SAAAuF,EAAOhF,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAiH,GAAA,SAAAV,GAAA5B,KAAA4B,EACsB,CACxBlF,MAAQA,EACRY,SAAWsE,EAAKL,OAChBlF,OAASA,EACTe,OAASmE,IALP,OACNlF,EADMsF,EAAA1B,KAAA,wBAAA0B,EAAA7E,SAAA4E,MARJ,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA/B,KAAAgC,YAAA,oCAgBCO,8GAnQSjB,GCoNToH,4NAlNO1H,qFAEVuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIO,kBAAkB,SAASH,EAAKuF,KAAK,aAAavF,EAAKwF,SACvEhB,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAxD,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAAzC,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAAStC,IALP,OACNuB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MATJ,gBAAAW,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,oCAiBCO,0KAGMmE,qFAETnE,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIO,kBAAkBuF,EAClClB,QAAYL,IACbM,KAAM,SAAA5C,GACLN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,KAAKA,OAC7B2C,MAPG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAOI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAArC,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAKtG,IAChBwC,OAASA,EACTe,OAASoD,IALP,OACNnE,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MAPJ,gBAAAM,GAAA,OAAAgC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAeCO,6KAISoG,yFACZpG,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGdoC,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,QACZC,IAAY3E,EAAIO,kBAAkBwH,EAAGjC,GACrClB,QAAYL,EACZ7B,OAAYqF,IACblD,KAAM,SAAC5C,GACNN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MARG,eAAAiB,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAQI,SAAA6C,EAAOtC,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAA9B,GAAAV,KAAAU,EACsB,CACxBhE,MAAQA,EACRY,SAAWoD,EAAKxG,OAChBmC,OAASA,EACTe,OAASqF,IALP,OACNpG,EADM6C,EAAAe,KAAA,wBAAAf,EAAApC,SAAAkC,MARJ,gBAAAL,GAAA,OAAA8B,EAAA5E,MAAA/B,KAAAgC,YAAA,oCAgBCO,0KAOMqG,yFACTrG,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAIdoC,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIO,kBAChBqE,QAAYL,EACZ7B,OAAYsF,IAGfnD,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAVG,eAAAmB,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAUI,SAAAyE,EAAOlE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAA1B,GAAAd,KAAAc,EACsB,CACxBpE,MAAQA,EACRY,SAAWwD,EAAKC,IAChB1E,OAASA,EACTe,OAASsF,IALP,OACNrG,EADMwE,EAAAZ,KAAA,wBAAAY,EAAA/D,SAAA8D,MAVJ,gBAAAI,GAAA,OAAAL,EAAA9E,MAAA/B,KAAAgC,YAAA,oCAkBCO,8KAGU2F,uFAEb3F,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGLhD,EAAQD,EAAMS,OACdoI,EAAW,IAAIC,UACZC,OAAO,OAAOH,aAEjB7C,IAAMiD,KAAK1H,EAAIO,kBAAkBgH,EAAS,CAC5C3C,QAAS,CACLV,eAA4B,oCAC5BC,OAA4B,mBAC5BC,cAA4B,UAAUzF,KAE7CkG,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAA0B,EAAA7F,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAgF,EAAOzE,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAA8E,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAAnB,GAAArB,KAAAqB,EACsB,CACxB3E,MAAQA,EACRY,SAAW+D,EAAKgB,QAChBhG,OAASA,EACTe,OAAS4E,IALP,OACN3F,EADM+E,EAAAnB,KAAA,wBAAAmB,EAAAtE,SAAAqE,MATJ,gBAAAG,GAAA,OAAAJ,EAAArF,MAAA/B,KAAAgC,YAAA,qCAkBCO,yKAGSkF,2FAEZnE,EAAS,IAAIoE,gBAAgBD,GAAQxF,WAErCM,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGdoC,EAASnF,KAAKmF,OAAO7F,EAAMS,gBAE3BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIO,kBAAkB,gBAAgBmC,EAClDkC,QAAYL,IACbM,KAAMzF,KAAK2F,QAAQ,MACrBF,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MARG,eAAAiC,EAAApG,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAQI,SAAAuF,EAAOhF,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAqF,GAAA,cAAAA,EAAAnF,KAAAmF,EAAAlF,MAAA,cAAAkF,EAAAlF,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAmH,GAAA,SAAAZ,GAAA5B,KAAA4B,EACsB,CACxBlF,MAAQA,EACRY,SAAWsE,EAAKL,OAChBlF,OAASA,EACTe,OAASmE,IALP,OACNlF,EADMsF,EAAA1B,KAAA,wBAAA0B,EAAA7E,SAAA4E,MARJ,gBAAAG,GAAA,OAAAJ,EAAA5F,MAAA/B,KAAAgC,YAAA,oCAgBCO,6GA3MWjB,GCwNXuH,0UAlNO7H,qFAEVuB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIQ,SAAS,SAASJ,EAAKuF,KAAK,aAAavF,EAAKwF,SAC9DhB,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAsH,GAAA,SAAA5C,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAAStC,IALP,OACNuB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MATJ,gBAAA8B,GAAA,OAAAgC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAiBCO,yRAsEMqG,yFACTrG,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAIdoC,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,OACZC,IAAY3E,EAAIQ,SAChBoE,QAAYL,EACZ7B,OAAYsF,IAGfnD,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MAVG,eAAAmB,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAUI,SAAAyB,EAAOlB,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAArB,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAsH,GAAA,SAAAxC,GAAAH,KAAAG,EACsB,CACxBzD,MAAQA,EACRY,SAAW6C,EAAKY,IAChB1E,OAASA,EACTe,OAASsF,IALP,OACNrG,EADMyB,EAAAmC,KAAA,wBAAAnC,EAAAhB,SAAAc,MAVJ,gBAAAe,GAAA,OAAAgC,EAAA9E,MAAA/B,KAAAgC,YAAA,oCAkBCO,8GArIQjB,GCqBRwH,0UArCOzH,qFAEVkB,EAAgB,CAChB9B,eAAgB,EAChBC,OAAgB,EAChBqC,KAAgB,IAGhBzD,EAAMa,+BACNoC,EAAO7B,OAAS,IAChB6B,EAAOQ,KAAO,sCACPR,iBAGL4C,sDAAsB7F,EAAMS,gBAE5BsF,IAAM,CACRC,OAAY,MACZC,IAAY3E,EAAIS,KAAK,SAASA,EAAKkF,KAAK,aAAalF,EAAKmF,SAC1DhB,QAAYL,IAGfM,KAAM,SAAC5C,GACJN,EAAO7B,OAASmC,EAASnC,OACzB6B,EAAOQ,KAAOF,EAASE,OACxB2C,MATG,eAAAU,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KASI,SAAAC,EAAOM,GAAP,OAAAR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAApB,OAAAwE,EAAA,EAAAxE,QAAAyE,EAAA,EAAAzE,CAAAuH,GAAA,SAAA7C,GAAAC,KAAAD,EACsB,CACxBrD,MAAQA,EACRY,SAAWyC,EAAKQ,KAChBlE,OAASA,EACTe,OAASjC,IALP,OACNkB,EADME,EAAA0D,KAAA,wBAAA1D,EAAAO,SAAAV,MATJ,gBAAAsB,GAAA,OAAAwC,EAAArE,MAAA/B,KAAAgC,YAAA,oCAiBCO,8GAnCIjB,mBC2CJyH,EA9CY,SAACC,GAAa,IAAAC,EAEPC,IAAMC,UAAS,GAFRC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAE7BK,EAF6BF,EAAA,GAErBG,EAFqBH,EAAA,GAAAI,EAGTN,IAAMC,UAAS,GAHNM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAG7BjK,EAH6BkK,EAAA,GAGtBC,EAHsBD,EAAA,GAI/BE,EAAaC,cA4BnB,OA1BAC,oBAAU,WAAI,SAAAC,IAAA,OAAAA,EAAAvI,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KACV,SAAAC,IAAA,OAAAF,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAYOrD,EAAMa,SACLuJ,GAAS,GAGbH,GAAU,GAhBd,wBAAA9G,EAAAO,SAAAV,OADUP,MAAA/B,KAAAgC,YAAA,WAAA8H,EAAA/H,MAAA/B,KAAAgC,WAoBVxB,IAEF,CAACmJ,IAICL,EAID/J,EACQwK,EAAAvK,EAAAwK,cAAChB,EAAMiB,UAAcjB,GAIzBe,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAUC,GAAI,CAACC,SAAS,SAAUC,MAAO,CAAEC,KAAOtB,EAAMuB,SAASH,aAR7D,kICjCFI,EACC,aADDA,EAEC,aAFDA,EAGC,cCRDC,EAAc,SAACjL,GACpB,OAAO,SAACkL,GACJA,EAAS,CACLC,KDLkB,cCMlBC,QAAUpL,MCGbqL,EAAkB,SAACrL,GACxB,OAAO,SAACkL,GACJA,EAAS,CACLC,KFXkB,kBEYlBC,QAAUpL,MCNbwI,EAAW,SAAC1E,GACjB,sBAAApB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAC,EAAOoI,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAECW,IACAA,EAAOiD,KAAW,EAClBjD,EAAOkD,SAAW,IAGtBkE,EAAS,CACLC,KHdkB,WGelBC,QAAU,KATXnI,EAAAE,KAAA,EAcGrC,EAAS0H,SAASvB,KAAKnD,GAAQmC,KAAK,SAAC5C,GAAD,OAAY6H,EAAS,CAC3DC,KHrBkB,WGsBlBC,QAAU/H,MAhBX,wBAAAJ,EAAAO,SAAAV,MAAP,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,ICDKwG,EAAY,SAAClF,GAClB,sBAAApB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAC,EAAOoI,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEH+H,EAAS,CACLC,KJRkB,YISlBC,QAAU,KAGVtH,IACAA,EAAOiD,KAAW,EAClBjD,EAAOkD,SAAW,IATnB/D,EAAAqI,GAYHJ,EAZGjI,EAAAsI,GJLmB,YIKnBtI,EAAAE,KAAA,EAciBrC,EAASkI,UAAU/B,KAAKnD,GAdzC,OAAAb,EAAAuI,GAAAvI,EAAA0D,KAAA1D,EAAAwI,GAAA,CAaCN,KAbDlI,EAAAsI,GAcCH,QAdDnI,EAAAuI,KAAA,EAAAvI,EAAAqI,IAAArI,EAAAwI,IAAA,wBAAAxI,EAAAO,SAAAV,MAAP,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,ICAKkJ,GAAQ,SAAC5H,GAEd,sBAAApB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAC,EAAOoI,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAECW,IACAA,EAAOiD,KAAW,EAClBjD,EAAOkD,SAAW,IAGtBkE,EAAS,CACLC,KLdkB,QKelBC,QAAU,KATXnI,EAAAE,KAAA,EAcGrC,EAASgG,KAAKG,KAAKnD,GAAQmC,KAAK,SAAC5C,GAAD,OAAY6H,EAAS,CACvDC,KLrBkB,QKsBlBC,QAAU/H,MAhBX,wBAAAJ,EAAAO,SAAAV,MAAP,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,ICgFOmJ,GAtEA,SAAC7H,GAEZ,OAAO,SAACoH,GACJA,EAAS,CACLC,KAAUS,EACVR,QAAUtH,MCfT+H,GAAS,SAAC5D,EAAWwC,EAAoBqB,GAE9C,IAAIhI,EAAS,GAcb,OAbA/B,OAAOgK,KAAK9D,GAAQ+D,QAAS,SAAChM,GACvBiI,EAAOjI,GAAGkC,MAEL4B,EADU,KAAXA,EACU9D,EAAE,YAAYiI,EAAOjI,GAAGiI,OAAO,IAAIjI,EAAE,SAASiI,EAAOjI,GAAGkC,IAExD4B,EAAO,IAAI9D,EAAE,YAAYiI,EAAOjI,GAAGiI,OAAO,IAAIjI,EAAE,SAASiI,EAAOjI,GAAGkC,OAKxF4B,EAASA,EAAO,SAASgI,EAAa/E,KAAK,aAAa+E,EAAa9E,SAG9DyD,GACH,IAAK,WACD,sBAAA/H,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAC,EAAOoI,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEH+H,EAAS,CACLC,KP5BU,YO6BVC,QAAU,KAJXnI,EAAAqI,GAQHJ,EARGjI,EAAAsI,GPzBW,YOyBXtI,EAAAE,KAAA,EAUiBrC,EAASkI,UAAUf,OAAOnE,GAV3C,OAAAb,EAAAuI,GAAAvI,EAAA0D,KAAA1D,EAAAwI,GAAA,CASCN,KATDlI,EAAAsI,GAUCH,QAVDnI,EAAAuI,KAAA,EAAAvI,EAAAqI,IAAArI,EAAAwI,IAAA,wBAAAxI,EAAAO,SAAAV,MAAP,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,GAaJ,IAAK,UACD,sBAAAoE,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAc,EAAOuH,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAEH+H,EAAS,CACLC,KP3CU,WO4CVC,QAAU,KAJXvH,EAAAyH,GAQHJ,EARGrH,EAAA0H,GPxCW,WOwCX1H,EAAAV,KAAA,EAUiBrC,EAAS0H,SAASP,OAAOnE,GAV1C,OAAAD,EAAA2H,GAAA3H,EAAA8C,KAAA9C,EAAA4H,GAAA,CASCN,KATDtH,EAAA0H,GAUCH,QAVDvH,EAAA2H,KAAA,EAAA3H,EAAAyH,IAAAzH,EAAA4H,IAAA,wBAAA5H,EAAAL,SAAAG,MAAP,gBAAAF,GAAA,OAAAmD,EAAArE,MAAA/B,KAAAgC,YAAA,GAaJ,IAAK,OACD,sBAAA2E,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAyB,EAAO4G,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAEH+H,EAAS,CACLC,KPvDU,QOwDVC,QAAU,KAJX5G,EAAA8G,GAQHJ,EARG1G,EAAA+G,GPpDW,QOoDX/G,EAAArB,KAAA,EAUiBrC,EAASgG,KAAKmB,OAAOnE,GAVtC,OAAAU,EAAAgH,GAAAhH,EAAAmC,KAAAnC,EAAAiH,GAAA,CASCN,KATD3G,EAAA+G,GAUCH,QAVD5G,EAAAgH,KAAA,EAAAhH,EAAA8G,IAAA9G,EAAAiH,IAAA,wBAAAjH,EAAAhB,SAAAc,MAAP,gBAAAF,GAAA,OAAA+C,EAAA5E,MAAA/B,KAAAgC,YAAA,GAaJ,IAAK,SACD,sBAAA6E,EAAAtF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAO,SAAAkC,EAAOmG,GAAP,OAAAtI,EAAA5C,EAAAgD,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAEH+H,EAAS,CACLC,KPpEU,cOqEVC,QAAU,KAJXnG,EAAAqG,GAQHJ,EARGjG,EAAAsG,GPjEW,cOiEXtG,EAAA9B,KAAA,EAUiBrC,EAASoI,YAAYjB,OAAOnE,GAV7C,OAAAmB,EAAAuG,GAAAvG,EAAA0B,KAAA1B,EAAAwG,GAAA,CASCN,KATDlG,EAAAsG,GAUCH,QAVDnG,EAAAuG,KAAA,EAAAvG,EAAAqG,IAAArG,EAAAwG,IAAA,wBAAAxG,EAAAzB,SAAAuB,MAAP,gBAAAH,GAAA,OAAAyC,EAAA9E,MAAA/B,KAAAgC,YAAA,KCpEH0G,GAAc,SAAClJ,GACpB,OAAO,SAACkL,GACJA,EAAS,CACLC,KRAkB,cQClBC,QAAUpL,6jBCI1B,IAqMeiM,eAlMD,SAACzC,GAAc,IAAAC,EACKC,IAAMC,UAAS,GADpBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GACjByC,EADiBtC,EAAA,GACTuC,EADSvC,EAAA,GAAAI,EAEeN,IAAMC,SAAS,CAACtD,SAAW,GAAGC,SAAW,KAFxD2D,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAEjBoC,EAFiBnC,EAAA,GAEJoC,EAFIpC,EAAA,GAAAqC,EAGG5C,IAAMC,SAAS,CAACzI,QAAS,EAAMqL,QAAS,KAH3CC,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAGjBlJ,EAHiBoJ,EAAA,GAGVC,EAHUD,EAAA,GAInBrC,EAAaC,cAIbsC,EAAoB,SAACC,GACvBN,EAAcO,GAAA,GACPR,EADOrK,OAAA8K,EAAA,EAAA9K,CAAA,GAET4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAIrC6K,EAAU,eAAAtK,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO6J,GAAP,IAAA3M,EAAAiN,EAAAzL,EAAA,OAAAoB,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfwJ,EAAMO,iBACNf,GAAU,GACVM,EAAS,CACLvL,QAAS,EACTqL,QAAS,KALEtJ,EAAAE,KAAA,EAQKrC,EAASC,KAAKM,MAAM,CACpCgF,SAAW+F,EAAY/F,SACvBC,SAAW8F,EAAY9F,WAVZ,WAQTtG,EARSiD,EAAA0D,MAaT1F,cAbS,CAAAgC,EAAAE,KAAA,SAAAF,EAAAqI,GAcJtL,EAAEkB,OAdE+B,EAAAE,KAeF,MAfEF,EAAAqI,GAAA,GA0BF,MA1BErI,EAAAqI,GAAA,2BAgBHe,EAAcO,GAAA,GACPR,EADO,CAEV9F,SAAW,MAEf6F,GAAU,GACVM,EAAS,CACLvL,QAAS,EACTqL,QAAS,iCAvBVtJ,EAAAK,OAAA,2BA2BHxD,EAAMW,KAAKT,EAAEuD,KAAKxD,OACZkN,EAAUE,IAAWrN,EAAMS,OA5B9B0C,EAAAE,KAAA,GA6BerC,EAASgG,KAAKvG,IAAI0M,EAAIG,KA7BrC,eA6BG5L,EA7BHyB,EAAA0D,KA8BH0G,EAAU7L,GA9BPyB,EAAAK,OAAA,2BAiCH+I,EAAcO,GAAA,GACPR,EADO,CAEV9F,SAAW,MAEf6F,GAAU,GACVM,EAAS,CACLvL,QAAS,EACTqL,QAAS,gEAxCVtJ,EAAAK,OAAA,oBAAAL,EAAAE,KAAA,iBA6CXgJ,GAAU,GACVE,EAAcO,GAAA,GACPR,EADO,CAEV9F,SAAW,MAEfmG,EAAS,CACLvL,QAAS,EACTqL,QAAU,6EApDH,eAAAtJ,EAAAK,OAAA,mCAAAL,EAAAO,SAAAV,MAAH,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,GA4DV6K,EAAS,eAAAzG,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAOnC,GAAP,IAAA0F,EAAAoG,EAAAC,EAAA,OAAA3K,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,UAEK,MAAhB3B,EAAKN,OAFM,CAAA2C,EAAAV,KAAA,YAGN3B,EAAK+B,KAAKiK,UAHJ,CAAA3J,EAAAV,KAAA,eAINgJ,GAAU,GACVE,EAAcO,GAAA,GACPR,EADO,CAEV9F,SAAW,MAEfmG,EAAS,CACLvL,QAAS,EACTqL,QAAU,gFAEdzM,EAAMY,SAbAmD,EAAAP,OAAA,wBAkBJ4D,EAASiG,IAAWrN,EAAMS,OAlBtBsD,EAAAV,KAAA,GAmB0BrC,EAASgG,KAAKvG,IAAI2G,EAAGkG,KAnB/C,WAoBU,OADdE,EAnBIzJ,EAAA8C,MAoBDzF,QACLiJ,EAAWrD,EAAKwG,EAAM/J,YAMT1C,KAFX0M,EAAY/D,EAAMuB,SAASF,QAEW,OAAd0C,EA3BpB,CAAA1J,EAAAV,KAAA,gBA4BNqG,EAAMiE,QAAQC,KAAK,KA5Bb7J,EAAAP,OAAA,yBAgCVkG,EAAMiE,QAAQC,KAAKH,EAAUzC,MAhCnBjH,EAAAP,OAAA,yBAqCd6I,GAAU,GACVE,EAAcO,GAAA,GACPR,EADO,CAEV9F,SAAW,MAEfmG,EAAS,CACLvL,QAAS,EACTqL,QAAU,kEAGdzM,EAAMY,SA/CQmD,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAAF,GAAA,OAAAmD,EAAArE,MAAA/B,KAAAgC,YAAA,GAoDf,OACI+H,EAAAvK,EAAAwK,cAACmD,EAAA,EAAD,CAAWC,SAAS,MAChBrD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,cACXtD,EAAAvK,EAAAwK,cAAA,OAAKsD,IApIP,oBAoIkBC,IAAI,SACpBxD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,cAtIjB,2BA0IFtD,EAAAvK,EAAAwK,cAACwD,EAAA,EAAD,CAAMH,UAAU,cACZtD,EAAAvK,EAAAwK,cAACyD,EAAA,EAAD,CACIJ,UAAY,eACZK,OACI3D,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,kBACXtD,EAAAvK,EAAAwK,cAAC2D,EAAA,EAAD,CAAQN,UAAU,mBACdtD,EAAAvK,EAAAwK,cAAC4D,EAAA,EAAD,CAAeP,UAAU,yBAMzCtD,EAAAvK,EAAAwK,cAAC6D,EAAA,EAAD,CAAaR,UAAU,sBACnBtD,EAAAvK,EAAAwK,cAAA,QAAM8D,SAAUtB,GACZzC,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIV,UAAU,iBACVW,MAAM,WACNrD,KAAK,OACL4B,KAAK,WACL0B,aAAa,WACbC,OAAO,SACPC,QAAQ,WACRC,SAAU1C,EACV2C,SAAUnC,EACVvK,MAAOiK,EAAY/F,SACnBjD,MAASA,EAAMlC,OACf4N,UAAQ,IAGZvE,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIV,UAAU,iBACVW,MAAM,WACNrD,KAAK,WACL4B,KAAK,WACL2B,OAAO,SACPC,QAAQ,WACRC,SAAU1C,EACV2C,SAAUnC,EACVvK,MAAOiK,EAAY9F,SACnBlD,MAASA,EAAMlC,OACf6N,WAAe3L,EAAMlC,OAASqJ,EAAAvK,EAAAwK,cAAA,KAAGwE,wBAAyB,CAACC,OAAO7L,EAAMmJ,WAAiB,GACzFuC,UAAQ,IAGZvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gBACXtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUP,SAAU1C,EAAQf,KAAK,UAAnE,SAGQe,EAAS3B,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,MAAuB,wMC4MrDnD,eArYD,SAAEzC,GAEZ,IAAM0B,EAAWd,cACXkD,EAAQ+B,YAAY,SAACxE,GAAD,OAAeA,EAAMa,MAAMnI,OAC/C9B,EAAW4N,YAAY,SAACxE,GAAD,OAAeA,EAAMrC,SAASjF,OACrD7B,EAAY2N,YAAY,SAACxE,GAAD,OAAeA,EAAM7B,UAAUzF,OAE7D+L,QAAQC,IAAI9N,GAEZiI,IAAMW,UAAU,WACZmF,KACF,IAGF,IAAMA,EAAa,WAEftE,EAASlC,EAAU,CAACjC,KAAK,EAAEC,SAAS,MACpCkE,EAASQ,GAAM,CAAC3E,KAAK,EAAEC,SAAS,MAChCkE,EAAS1C,EAAS,CAACzB,KAAK,EAAEC,SAAS,MAEnCyI,EAAQ,MACE3O,EAASwI,KAAKrC,KAAK,CAACD,SAAS0I,EAAY3I,KAAKA,IAAOd,KAAK,SAAC5C,GACjEoM,EAAQpM,EAASE,SAtBGkG,EA2BJC,IAAMC,SAAS,GA3BXC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GA2BrB1C,EA3BqB6C,EAAA,GA2Bf+F,EA3Be/F,EAAA,GAAAI,EA4BUN,IAAMC,SAAS,IA5BzBM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GA4BrB0F,EA5BqBzF,EAAA,GA4BR2F,EA5BQ3F,EAAA,GAAAqC,EA6BJ5C,IAAMC,WA7BF6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GA6BrB/I,EA7BqBiJ,EAAA,GA6BfiD,EA7BejD,EAAA,GAAAqD,EA8BJnG,IAAMC,UAAS,GA9BXmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GA8BrBE,EA9BqBD,EAAA,GA8BfE,EA9BeF,EAAA,GAAAG,EA+BHvG,IAAMC,WA/BHuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GA+BrBE,EA/BqBD,EAAA,GA+BfE,EA/BeF,EAAA,GAAAG,EAgCD3G,IAAMC,WAhCL2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GAgCrBvD,EAhCqBwD,EAAA,GAgCdC,EAhCcD,EAAA,GAiFtBE,EAAY,SAACjN,EAASuJ,GACxBsD,EAAS7M,GACTyM,GAAQ,GACRO,EAAUzD,GAEVwC,QAAQC,IAAIhM,IAkMhB,OACIgH,EAAAvK,EAAAwK,cAAA,WAhMc,WAEd,IAqFiBjH,EAwDjB,OACIgH,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KAEIN,EACI5F,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CAGIX,KAAMA,EACNY,QAAS,kBAAMX,GAAQ,IACvBY,kBAAgB,yBAChB/C,UAAU,iBAEVtD,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,gBACAtG,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAEmB,YAAXnE,GAzEfvJ,EAyE+C4M,EAvExD5F,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,iBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK0F,SAASoI,gBAE/B9G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,gBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKkF,QAAQA,QAAQ6I,eAEtC/G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,gBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKkF,QAAQA,QAAQ8I,eAMtChH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,iBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKiO,gBAEtBjH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,iBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAaM,KAAOlO,EAAKmO,eAAe3O,OAAO,QAEnDwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,YACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKoO,SAAS,cAE/BpH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,kBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAaM,KAAOlO,EAAKqO,gBAAgB7O,OAAO,QAEpDwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,YACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAaM,KAAOlO,EAAKsO,cAAc9O,OAAO,QAElDwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,gBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKuO,8BAEtBvH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,UACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKrC,OAAO6L,OAE7BxC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,WACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKwO,YAyBS,aAAXjF,EA7Gf,SAACvJ,GACd,OACIgH,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,iBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK8N,gBAEtB9G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,iBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKyO,gBAEtBzH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,OACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK0O,MAEtB1H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,WACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK2O,UAEtB3H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,kBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK4O,iBAEtB5H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,eACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK6O,iBAEtB7H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,SACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK8O,SAgFsBpJ,CAASkH,GACtB,SAAXrD,EA7InB,SAACvJ,GACV,OACIgH,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,aACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK8C,WAEtBkE,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,QACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK+O,WAAW,IAAI/O,EAAKgP,YAE1ChI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,WACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKiP,UAEtBjI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,SACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK8O,QAEtB9H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,SACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKkP,MAAM1F,OAE5BxC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,aACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAA0C,IAA7BhN,SAASZ,EAAKiK,WAAmB,MAAQ,QAoHdhM,CAAK2O,GAClB,sBAAXrD,EAjKN,SAACvJ,GACvB,OACIgH,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,gBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK+N,eAEtB/G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,gBACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAKgO,eAEtBhH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW1G,UAAU,KAAK2G,MAAM,OAAhC,YACA7G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAa5N,EAAK3B,SAASmL,QAoJsB2F,CAAkBvC,GAAS,MAK5E5F,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAU,kBAAM5C,GAAQ,KAApE,WAOZ,IAiBH6C,GACDtI,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,6BAA6BiF,MAAO,CAACC,UAAU,UAC1DxI,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gCAAgC+E,QAAU,kBAAMpJ,EAAMiE,QAAQC,KAAK,eAC9EnD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,oBACbtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAMtD,EAAAvK,EAAAwK,cAACyI,GAAA,EAAD,CAASpF,UAAU,gBAE5CtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aAAf,mBACAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,cAAcpM,EAAYA,EAAS8B,KAAK2P,KAAKC,MAAQ,GACpE5I,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YAAf,aAAoCtD,EAAAvK,EAAAwK,cAAC4I,GAAA,EAAD,MAApC,OAGR7I,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gCAAgC+E,QAAU,kBAAMpJ,EAAMiE,QAAQC,KAAK,gBAC9EnD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,oBACbtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAMtD,EAAAvK,EAAAwK,cAACyI,GAAA,EAAD,CAAYpF,UAAU,gBAE/CtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aAAf,mBACAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,cAAcnM,EAAaA,EAAU6B,KAAK2P,KAAKC,MAAQ,GACtE5I,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YAAf,aAAoCtD,EAAAvK,EAAAwK,cAAC4I,GAAA,EAAD,MAApC,OAGR7I,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gCAAgC+E,QAAU,kBAAMpJ,EAAMiE,QAAQC,KAAK,YAC9EnD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,oBACbtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAMtD,EAAAvK,EAAAwK,cAACyI,GAAA,EAAD,CAASpF,UAAU,gBAE5CtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aAAf,eACAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,cAAcP,EAASA,EAAM/J,KAAK2P,KAAKC,MAAQ,GAC9D5I,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YAAf,cAAqCtD,EAAAvK,EAAAwK,cAAC4I,GAAA,EAAD,MAArC,QAIZ7I,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,KACIzI,EAAAvK,EAAAwK,cAAC6I,GAAA,EAAD,CAAY1E,QAAQ,YAAYlE,UAAU,KAAKqI,MAAO,CAACQ,QAAQ,OAAOC,WAAW,SAASC,cAAc,cAAxG,mBAIAjJ,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAW5F,UAAU,wBACjBtD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,aACA5G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,aACA5G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,eACA5G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,eACA5G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,iBACA5G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,iBAGR5G,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAEQ1N,EACAA,EAAKA,KAAKmQ,IAAK,SAACvR,EAAUD,GAAX,OACXqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKC,EAAM+E,GAAIyM,OAAK,GAC1BpJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAAYM,KAAOtP,EAAMyR,YAAY7Q,OAAO,OAC5CwH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW2B,MAAO,CAACU,cAAc,cAAerR,EAAMX,KAAK8Q,WAAW,IAAInQ,EAAMX,KAAK+Q,WACrFhI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAY2B,MAAO,CAACU,cAAc,cAAerR,EAAM0R,QACvDtJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAY2B,MAAO,CAACU,cAAc,cAAerR,EAAM2K,QACvDvC,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAEQhP,EAAM2R,SACFvJ,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYqC,KAAK,QAAQ7B,MAAM,UAAUyD,QAAS,kBAAMpC,EAAUrO,EAAM2R,SAAS3R,EAAM2K,UAAvG,QAIJ,IAGRvC,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,KAEQhP,EAAMvB,OACF2J,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYqC,KAAK,QAAQ7B,MAAM,UAAUyD,QAAS,kBAAMpC,EAAUrO,EAAMvB,OAAOuB,EAAM2K,UAArG,QAIJ,OAxSlB,WAIlB,IAHA,IAAI9M,EAAQ,GAEN+T,EAAYxJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAAQzJ,EAAAvK,EAAAwK,cAACyJ,GAAA,EAAD,CAAUtF,QAAQ,UACrDuF,EAAI,EAAEA,EAAI,GAAGA,IACjBlU,EAAE0N,KACEnD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgS,GACVH,EACAA,EACAA,EACAA,EACAA,EACAA,IAIb,OAAO/T,EA+RamU,KAKZ5J,EAAAvK,EAAAwK,cAAC4J,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAG,GAAG,GAAG,KAC9B5J,UAAU,MACV6J,MAAO/Q,EAAOA,EAAK2P,KAAKC,MAAQ,GAChCzD,YAAaA,EACb3I,KAAMxD,EAAOwD,EAAK,EAAI,EACtBwN,oBAAqB,CACjBC,aAAc,iBAElBC,oBAAqB,CACjBD,aAAc,aAElBE,aA1VS,SAAC/H,EAAWgI,GACjChF,EAAQgF,EAAQ,GAKhBlF,EAAQ,MACE3O,EAASwI,KAAKrC,KAAK,CAACD,SAAS0I,EAAY3I,KAAK4N,EAAQ,IAAI1O,KAAK,SAAC5C,GACtEoM,EAAQpM,EAASE,SAmVTqR,oBA9UgB,SAACjI,GAC1BA,EAAMG,OAAO3K,QAAUuN,IACtBE,EAAejD,EAAMG,OAAO3K,OAC5BwN,EAAQ,GAERF,EAAQ,MACE3O,EAASwI,KAAKrC,KAAK,CAACD,SAAS2F,EAAMG,OAAO3K,MAAM4E,KAAK,IAAId,KAAK,SAAC5C,GACrEoM,EAAQpM,EAASE,gBCjBlB0I,eAvCF,SAACzC,GACV,IAAM0B,EAAWd,cACX5I,EAAO6N,YAAa,SAACxE,GAAD,OAAeA,EAAMI,YAAY1H,OAO3D,OALA8G,oBAAW,WACPa,EAASG,EAAgB,CAACwJ,MAAM,OAAQC,QAAQ,WAClD,CAAC5J,IAICX,EAAAvK,EAAAwK,cAAA,WACqB,IAAfhJ,EAAKiR,MACHlI,EAAAvK,EAAAwK,cAACuK,GAAD,MAEAxK,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,UAAUiF,MAAO,CAACC,UAAU,UACvCxI,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,8BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gCAAgC+E,QAAU,kBAAMpJ,EAAMiE,QAAQC,KAAK,eAC9EnD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,KACIzI,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAMtD,EAAAvK,EAAAwK,cAACyI,GAAA,EAAD,CAASpF,UAAU,eACxCtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAf,cAIRtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gCAAgC+E,QAAU,kBAAMpJ,EAAMiE,QAAQC,KAAK,gBAC9EnD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,KACIzI,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAMtD,EAAAvK,EAAAwK,cAACyI,GAAA,EAAD,CAAYpF,UAAU,eAC3CtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,OAAf,4wBCJpC,IA4jBemH,GA5jBA,SAACxL,GAEZ,IAWMyL,EAAiB,CACnB3C,WAAsB,CAAClP,OAAO,EAAOmJ,QAAU,IAC/CgG,UAAsB,CAACnP,OAAO,EAAOmJ,QAAU,IAC/ClG,SAAsB,CAACjD,OAAO,EAAOmJ,QAAU,IAC/CiG,QAAsB,CAACpP,OAAO,EAAOmJ,QAAU,IAC/C8F,MAAsB,CAACjP,OAAO,EAAOmJ,QAAU,IAC/CjG,SAAsB,CAAClD,OAAO,EAAOmJ,QAAU,IAC/C2I,iBAAsB,CAAC9R,OAAO,EAAOmJ,QAAU,KApBvB9C,EAuBQC,IAAMC,SArBpB,CAClBzC,GAAsB,GACtBoL,WAAsB,GACtBC,UAAsB,GACtBlM,SAAsB,GACtBmM,QAAsB,GACtBH,MAAsB,GACtB/L,SAAsB,GACtB4O,iBAAsB,KAVEtL,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAuBrB0L,EAvBqBvL,EAAA,GAuBTwL,EAvBSxL,EAAA,GAAAI,EAwBMN,IAAMC,UAAS,GAxBrBM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAwBrBkC,EAxBqBjC,EAAA,GAwBdkC,EAxBclC,EAAA,GAAAqC,EAyBM5C,IAAMC,UAAS,GAzBrB6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAyBrB+I,EAzBqB7I,EAAA,GAyBV8I,EAzBU9I,EAAA,GAAAqD,EA0BkBnG,IAAMC,SAASsL,GA1BjCnF,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GA0BrB0F,EA1BqBzF,EAAA,GA0BJ0F,EA1BI1F,EAAA,GAAA2F,EA2BeC,yBAAnCC,EA3BoBF,EA2BpBE,gBAAiBC,EA3BGH,EA2BHG,cAEnBjO,EAAS0H,YAAY,SAACxE,GAAD,OAAaA,EAAMG,SACxCE,EAAWd,cAWXyL,EAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,SAiB/BC,EAAc,SAACpJ,EAAWxK,GACzBwK,GACCyI,EAAcY,GAAA,GACPb,EADMpT,OAAA8K,EAAA,EAAA9K,CAAA,GAER4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAkBzC8T,EAAa,WACfT,EAAmB,CACflD,WAAa,CAAClP,OAAO,EAAOmJ,QAAU,IACtCgG,UAAa,CAACnP,OAAO,EAAOmJ,QAAU,IACtClG,SAAa,CAACjD,OAAO,EAAOmJ,QAAU,IACtCiG,QAAa,CAACpP,OAAO,EAAOmJ,QAAU,IACtC8F,MAAa,CAACjP,OAAO,EAAOmJ,QAAU,IACtCjG,SAAsB,CAAClD,OAAO,EAAOmJ,QAAU,IAC/C2I,iBAAsB,CAAC9R,OAAO,EAAOmJ,QAAU,OAIjDS,EAAU,eAAAtK,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAOgJ,GAAP,OAAA/J,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,UACf8S,IACAtJ,EAAMuJ,UACNvJ,EAAMO,iBACNiJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,WACxDnK,GAAU,GAEPgJ,EAAW7O,WAAa6O,EAAWD,iBARvB,CAAArR,EAAAV,KAAA,gBAUXgJ,GAAU,GACVgK,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,QAExDd,EAAmBQ,GAAA,GACZT,EADW,CAEdL,iBAAmB,CAAC9R,OAAM,EAAKmJ,QAAQ,qCAG3CoJ,EAAgB,uCAAuC,CAAChH,QAAQ,QAAQkF,OAAOgC,IAnBpEhS,EAAAP,OAAA,yBAAAO,EAAAV,KAAA,GAsBTrC,EAASgG,KAAKlG,OAAOuU,GAAYlP,KAAjC,eAAAW,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KACF,SAAAC,EAAOO,GAAP,OAAAT,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACOE,EAASpC,eACR0U,EAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,IACzFP,GAAa,IAEU,MAApBjS,EAASnC,QACRyU,EAAgB,mCAAmC,CAAChH,QAAQ,UAAUkF,OAAOgC,IAC7EP,GAAa,GAEbiB,OAAOxL,SAASyL,WAKhBb,EAAgB,gBAAgB,CAAChH,QAAQ,QAAQkF,OAAOgC,IACxDY,EAAiBpT,EAASE,KAAKmT,SAf3C,wBAAAzT,EAAAO,SAAAV,MADE,gBAAAW,GAAA,OAAAmD,EAAArE,MAAA/B,KAAAgC,YAAA,IAtBS,eA8Cf2J,GAAU,GACVgK,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,QAhDzCzS,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAArB,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,GAoDViU,EAAmB,SAACpT,GACtB,IAAIsT,EAAa1B,EACjB5R,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAEtDiJ,EAAmBmB,IAwMvB,OACIpM,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KApMG4E,EAEK9K,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMsF,EACN1E,QAAU,kBAAK2E,GAAa,IAC5B1E,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,gBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,CAAegC,MAAO,CAACgE,SAAS,YAE5BvM,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAUtB,EAAY9F,GAAG,oBACnDqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,EACZ5T,MAASgT,EAAW9O,SACpBuI,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlP,SAASjD,MAClC2L,WAAcwG,EAAgBlP,SAASkG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,cAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,aACP8B,SAAYkH,EACZ5T,MAASgT,EAAW7C,WACpB1D,SAAY1C,EACZ9I,MAASmS,EAAgBjD,WAAWlP,MACpC2L,WAAcwG,EAAgBjD,WAAW/F,QACzCuC,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,aAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,YACP8B,SAAYkH,EACZ5T,MAASgT,EAAW5C,UACpB3D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBhD,UAAUnP,MACnC2L,WAAcwG,EAAgBhD,UAAUhG,aAKxDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYkH,EACZ5T,MAASgT,EAAW3C,QACpB5D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgB/C,QAAQpP,MACjC2L,WAAcwG,EAAgB/C,QAAQjG,aAKtDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,QACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,QACP8B,SAAYkH,EACZ5T,MAASgT,EAAW9C,MACpBzD,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlD,MAAMjP,MAC/B2L,WAAcwG,EAAgBlD,MAAM9F,aAKpDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,EACZ5T,MAASgT,EAAW7O,SACpBsI,SAAY1C,EACZ9I,MAASmS,EAAgBjP,SAASlD,MAClC2L,WAAcwG,EAAgBjP,SAASiG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,oBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,mBACP8B,SAAYkH,EACZ5T,MAASgT,EAAWD,iBACpBtG,SAAY1C,EACZ9I,MAASmS,EAAgBL,iBAAiB9R,MAC1C2L,WAAcwG,EAAgBL,iBAAiB3I,aAK/DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS5F,EACTmC,MAAM,UACNR,QAAQ,YACRC,SAAU1C,EACV8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAU7K,EAAkB,QAAT,QAAoB2B,UAAU,+BAE/EtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAK0C,GAAa,IAAQnG,MAAM,YAAYR,QAAQ,aACjEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,YAQL,KASPvL,EAAAvK,EAAAwK,cAAC0M,GAAA,EAAD,MACA3M,EAAAvK,EAAAwK,cAAC2M,GAAA,EAAD,CACIC,SAAS,QACTvJ,UAAU,UAEVtD,EAAAvK,EAAAwK,cAAC6M,GAAA,EAAD,KAEI9M,EAAAvK,EAAAwK,cAAC8M,GAAA,EAAD,CACInI,MAAM,UACNqF,aAAW,cACX+C,KAAK,QACL1J,UAAYrE,EAAMqB,MAAM2M,MAAQ,IAC5B,YAEAhO,EAAMqB,MAAM4M,QAAU,yCAA2C,YAErE7E,QAASpJ,EAAMqB,MAAM2M,MAAQ,IAAMhO,EAAMkO,cAAgBlO,EAAMmO,aAE/DpN,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAU,iBACZtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAU,sBAGxBtD,EAAAvK,EAAAwK,cAAC6I,GAAA,EAAD,CAAY1E,QAAQ,KAAKiJ,QAAM,EAAC9E,MAAO,CAACU,cAAgB,cAEnDhK,EAAMqO,YAyBPtN,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gBACXtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACIC,MAAQ,UACRyD,QAAWpJ,EAAMsO,YAEjBvN,EAAAvK,EAAAwK,cAAC2D,EAAA,EAAD,CACIJ,IAAI,gBACJD,IAAI,gBACJD,UAAY,gBAEhBtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACVrE,EAAMhI,KAAK8Q,YAGhB/H,EAAAvK,EAAAwK,cAACuN,GAAA,EAAD,QAMRxN,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,iBAAiBiF,MAAO,CAACiE,QAASvN,EAAMqB,MAAMlD,OAAkB,QAAT,SAC9D4C,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,KACIzI,EAAAvK,EAAAwK,cAACwN,GAAA,EAAD,CAAWC,KAAG,GACV1N,EAAAvK,EAAAwK,cAAC0N,GAAA,EAAD,CACIpD,QACIvK,EAAAvK,EAAAwK,cAAC2N,GAAA,EAAD,CACIhJ,MAAM,UACNiJ,QAA6B,UAAlBzQ,EAAOmF,OAClB+B,SAAY,kBAAI3D,EAASmN,GAAqB,aAGtD7J,MAAM,OACNsE,MAAO,CAACwF,WAAW,KAEvB/N,EAAAvK,EAAAwK,cAAC0N,GAAA,EAAD,CACIpD,QACIvK,EAAAvK,EAAAwK,cAAC2N,GAAA,EAAD,CACIhJ,MAAM,UACNiJ,QAA6B,aAAlBzQ,EAAOmF,OAClB+B,SAAY,kBAAI3D,EAASmN,GAAqB,gBAGtD7J,MAAM,YAEVjE,EAAAvK,EAAAwK,cAAC0N,GAAA,EAAD,CACIpD,QACIvK,EAAAvK,EAAAwK,cAAC2N,GAAA,EAAD,CACIhJ,MAAM,UACNiJ,QAA6B,cAAlBzQ,EAAOmF,OAClB+B,SAAY,kBAAI3D,EAASmN,GAAqB,iBAGtD7J,MAAM,gBAO1BjE,EAAAvK,EAAAwK,cAAC+N,GAAA,EAAD,CACIxI,KAAMyI,QAAQhP,EAAMqB,MAAMrJ,MAC1BiX,SAAUjP,EAAMqB,MAAMrJ,KACtBmP,QAASnH,EAAMsO,WACfY,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhB/K,UAAU,aASVtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,qBACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,uBACXtD,EAAAvK,EAAAwK,cAAC2D,EAAA,EAAD,CACIJ,IAAI,aACJD,IAAI,gBACJD,UAAU,+BAGdtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,2BAA2B+E,QAnapD,WAClBqD,IACAb,EAAc,CACVlO,GAAasC,EAAMhI,KAAK0F,GACxBoL,WAAa9I,EAAMhI,KAAK8Q,WACxBC,UAAa/I,EAAMhI,KAAK+Q,UACxBlM,SAAamD,EAAMhI,KAAK6E,SACxBmM,QAAahJ,EAAMhI,KAAKgR,QACxBH,MAAa7I,EAAMhI,KAAK6Q,QAG5BiD,GAAa,KA0ZoB9L,EAAMhI,KAAK8Q,YAAc9I,EAAMhI,KAAK+Q,UAAY/I,EAAMhI,KAAK8Q,WAAW,IAAI9I,EAAMhI,KAAK+Q,UAAY,GAClGhI,EAAAvK,EAAAwK,cAACqO,GAAA,EAAD,CAAMhL,UAAU,eAEpBtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,mCAEc,OAArBrE,EAAMhI,KAAK6Q,YAAuCxR,IAArB2I,EAAMhI,KAAK6Q,MACpC7I,EAAMhI,KAAK6Q,MACb,KAKd9H,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,qBACXtD,EAAAvK,EAAAwK,cAAA,YAoBJD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,uBACXtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACIP,QAAS,WACTQ,MAAS,UACTyD,QAAWpJ,EAAMlI,QAEjBiJ,EAAAvK,EAAAwK,cAACsO,GAAA,EAAD,MACCtP,EAAMhI,KAAK8Q,YAAc9I,EAAMhI,KAAK+Q,UAAY,UAAY,qCCnhBtFwG,GAhBQ,SAACvP,GAEpB,OACIe,EAAAvK,EAAAwK,cAACwO,GAAA,EAAD,CACCrK,QAAQ,YACRd,UAAWrE,EAAMqB,MAAM4M,QAAU,eAAiB,gBACxD1H,KAAMvG,EAAMqB,MAAM4M,SAIjBjO,EAAMyP,aACP1O,EAAAvK,EAAAwK,cAAC0O,GAAA,EAAD,QCEYC,GAlBO,SAAC3P,GACnB,OACIe,EAAAvK,EAAAwK,cAAA,OACIqD,UAAU,aACRuL,KAAK,gBAEP7O,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,eACXtD,EAAAvK,EAAAwK,cAAA,OAAKsD,IAAKtE,EAAM6P,KAAMtL,IAAKvE,EAAMqO,aACjCtN,EAAAvK,EAAAwK,cAAA,SAAIhB,EAAMqO,aAGdtN,EAAAvK,EAAAwK,cAAC0O,GAAA,EAAD,MACC1P,EAAMyP,aACP1O,EAAAvK,EAAAwK,cAAC0O,GAAA,EAAD,oHCfNI,GAAS,CACXC,OAAS,CACLC,WAAW,UAEfC,UAAY,CACRrC,SAAW,WAEfsC,SAAW,CACPC,UAAY,kHAEhBC,KAAO,CACHC,gBAAkB,UAClB1K,MAAkB,QAClB2K,aAAkB,OAClBxG,QAAkB,QAIpByG,GAAYC,aAAW,SAACC,GAAD,OACzBC,aAAa,CACTC,KAAM,CACF/C,SAAW,WAEfgD,KAAO,CACHD,KAAO,CACHX,WAAa,SACba,UAAY,CACRb,WAAa,iBA8FlBvN,eAtFK,SAACzC,GACjB,IAAMsL,EAAUzF,YAAa,SAACxE,GAAD,OAAeA,EAAMQ,gBAAgByJ,UAI9DsF,GAHYL,GAAUvQ,GAGfA,EAAM8Q,oBALc7Q,EAMCC,IAAMC,SAA6B,MANpCC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAMxBgP,EANwB7O,EAAA,GAAAA,EAAA,GAgBlB4O,QAAQC,GAErB,OACIlO,EAAAvK,EAAAwK,cAAC+P,GAAA,EAAD,KACKH,EAAK1G,IAAI,SAAC8G,EAAUC,GAAX,OACNlQ,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,CAAgBvO,IAAKuY,GACjBlQ,EAAAvK,EAAAwK,cAACkQ,GAAA,EAAD,CAAU7M,UAAW2M,EAAK1F,UAAYA,EAAU,aAAe,GAAI6F,QAAM,EAAC/H,QAAS,WAM3E4H,EAAKhR,MAMLA,EAAMoR,gBAAN7Y,OAAA8K,EAAA,EAAA9K,CAAA,GACKyY,EAAKzN,MAASvD,EAAMqR,aAAaL,EAAKzN,QANxCvD,EAAMuB,SAASH,WAAa4P,EAAKzU,KAChCyD,EAAMiE,QAAQC,KAAK8M,EAAKzU,OAa1ByU,EAAKhR,MAMHe,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAACsQ,GAAA,EAAD,KACKvQ,EAAAvK,EAAAwK,cAACgQ,EAAKZ,KAAN,OAELrP,EAAAvK,EAAAwK,cAACuQ,GAAA,EAAD,KAAeP,EAAKzN,MACnBvD,EAAMqR,aAAaL,EAAKzN,MAAQxC,EAAAvK,EAAAwK,cAACwQ,GAAA,EAAD,MAAiBzQ,EAAAvK,EAAAwK,cAACyQ,GAAA,EAAD,OAVtD1Q,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAACsQ,GAAA,EAAD,KAAevQ,EAAAvK,EAAAwK,cAACgQ,EAAKZ,KAAN,CAAW9G,MAAOwG,GAAOM,QACxCrP,EAAAvK,EAAAwK,cAACuQ,GAAA,EAAD,KAA4CP,EAAKzN,QAe5DyN,EAAKhR,MACFe,EAAAvK,EAAAwK,cAAC0Q,GAAA,EAAD,CAAUC,GAAI3R,EAAMqR,aAAaL,EAAKzN,MAAOqO,QAAQ,OAAOC,eAAa,EAACxN,UAAYrE,EAAMiO,QAA2B,GAAjB,gBAClGlN,EAAAvK,EAAAwK,cAAC+P,GAAA,EAAD,CAAM9P,UAAU,MAAM6Q,gBAAc,GAE5Bd,EAAKhR,MAAMkK,IAAI,SAACvR,EAAUD,GAAX,OACXqI,EAAAvK,EAAAwK,cAACkQ,GAAA,EAAD,CAAUC,QAAM,EAACzY,IAAKA,EAAK2L,UAAU,iBAGjCtD,EAAAvK,EAAAwK,cAACsQ,GAAA,EAAD,KAAcvQ,EAAAvK,EAAAwK,cAAC+Q,GAAA,EAAD,OACdhR,EAAAvK,EAAAwK,cAACuQ,GAAA,EAAD,KACK5Y,EAAM4K,WAO7B,4BC2Hfd,eApOI,SAACzC,GAEnB,IAAM6P,EAAO,oBACTiB,EAAqB,CACxB,CACCvN,KAAO,OACP+H,QAAU,OACV8E,KAAO4B,KACPzV,IAAO,KAEN,CACDgH,KAAO,WACP+H,QAAU,WACV8E,KAAO6B,KACP1V,IAAO,aAEN,CACDgH,KAAO,sBACP+H,QAAU,kCACV8E,KAAQ8B,KACR3V,IAAQ,YACP,CACDgH,KAAO,YACP+H,QAAU,YACV8E,KAAQ+B,KACR5V,IAAO,cACN,CACDgH,KAAO,QACP+H,QAAU,QACV8E,KAAQgC,KACR7V,IAAO,SACPyD,MAAO,KA/BwBC,EAyCAC,IAAMC,UAAS,GAzCfC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAyCzBgO,EAzCyB7N,EAAA,GAyCfiS,EAzCejS,EAAA,GAAAI,EA0CSN,IAAMC,SAAS,IA1CxBM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GA0CzB6Q,EA1CyB5Q,EAAA,GA0CX2Q,EA1CW3Q,EAAA,GAAAqC,EA2CL5C,IAAMC,UAAS,GA3CV6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GA2CzBwP,EA3CyBtP,EAAA,GA2ClBuP,EA3CkBvP,EAAA,GAAAqD,EA4CLnG,IAAMC,SAAU4M,OAAOyF,YA5ClBlM,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GA4CzB2H,EA5CyB1H,EAAA,GA4ClBmM,EA5CkBnM,EAAA,GAAAG,EA6CHvG,IAAMC,UAAU,GA7CbuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GA6CzBtI,EA7CyBuI,EAAA,GA6CjBgM,EA7CiBhM,EAAA,GAAAG,EA8CP3G,IAAMC,SAAS,MA9CR2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GA8CzB7O,EA9CyB8O,EAAA,GA8CnB6L,EA9CmB7L,EAAA,GA+C3B8L,EAAY/M,YAAa,SAACxE,GAAD,OAAeA,EAAMI,YAAY1H,OAC1DsU,EAAaxI,YAAa,SAACxE,GAAD,OAAeA,EAAMQ,gBAAgBwJ,QACpDzK,cAGjBC,oBAAU,WAGTkM,OAAO8F,iBAAiB,SAAUC,GAElC,IAAIC,EAAe,GAUnB,OATAjC,EAAmBtO,QAAQ,SAAC7J,GACxBA,EAAMqH,QACR+S,EAASpa,EAAM4K,OAAQ,KAIzB6N,EAAgB2B,GAGT,WACNhG,OAAOiG,oBAAoB,SAAUF,KAErC,CAACF,IAGoB,IAApBA,EAAU3J,QACZ6H,EAAqB,CACpB,CACCvN,KAAO,OACP+H,QAAU,OACV8E,KAAO4B,KACPzV,IAAO,KACN,CACDgH,KAAO,WACP+H,QAAU,WACV8E,KAAO6B,KACP1V,IAAO,aACN,CACDgH,KAAO,YACP+H,QAAU,YACV8E,KAAQ+B,KACR5V,IAAO,gBAeV,IAAMuW,EAAqB,WAC1BL,EAAU1F,OAAOyF,aAOZtE,EAAgB,WAGlB/P,GACF8U,GAAa,GAEdZ,GAAYpE,IAGPgF,EAAe,SAACzc,GAGlByX,GACFC,IAEDwE,EAAUlc,IAGL2X,EAAc,SAAChL,KACfA,GAAwB,YAAfA,EAAMxB,MAA8D,QAAtCwB,EAA8BzK,KAAwD,UAAtCyK,EAA8BzK,MAG1H6Z,GAAUD,IA8BX,OACCvR,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CAAyBC,MAAOC,MAChCrS,EAAAvK,EAAAwK,cAAA,OAAKoI,QAdY,WACb9S,EAAMa,SACT6I,EAAMiE,QAAQC,KAAK,YAanBnD,EAAAvK,EAAAwK,cAACqS,GAAA,EAAD,CACC9M,KAAM+L,EACAnL,QAASgH,EACTmF,OAAQnF,GAEXpN,EAAAvK,EAAAwK,cAACuS,GAAD,CACF1D,KAAUA,EACVxB,WAAcA,EACdoB,aACC1O,EAAAvK,EAAAwK,cAACwS,GAAD,CACCvF,QAAcA,EACd6C,mBAAuBA,EACvBO,aAAkBA,EAClBD,gBAAoBA,EACpBlD,cAAkBA,OAOtBnN,EAAAvK,EAAAwK,cAACyS,GAAD,CACCpS,MAAY,CAAC2M,QAAMC,UAAQjW,OAAKmG,UAChC0R,KAAYA,EACZxB,WAAgBA,EAChBrW,KAAW4a,EACXK,aAAgBA,EAChB/E,cAAiBA,EACjBI,WAvFgB,SAACnL,GACnBwP,EAAQ3a,EAAO,KAAOmL,EAAMuQ,gBAuF1BvF,YAAgBA,EAChBrW,OA5DY,WAEdxB,EAAMY,SAGL6V,OAAOxL,SAASoS,KAAO,UAwDtBpS,SAAavB,EAAMuB,SAASH,SAC5BwS,SAzCc,SAACrX,GACjByD,EAAMiE,QAAQC,KAAK3H,MA2ClBwE,EAAAvK,EAAAwK,cAAC6S,GAAD,CACCxS,MAAW,CAAC4M,WACZwB,aACC1O,EAAAvK,EAAAwK,cAACwS,GAAD,CACCvF,QAAcA,EACd6C,mBAAuBA,EACvBO,aAAkBA,EAClBD,gBAAoBA,EACpBlD,cAAkBA,IAGpBA,cAAiBA,IAGlBnN,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,kBACdtD,EAAAvK,EAAAwK,cAAC8S,GAAA,EAAD,CAAUvN,KAAM0H,EAAS7E,QAAS8E,EAAe7J,UAAU,qCAC3DtD,EAAAvK,EAAAwK,cAAC8S,GAAA,EAAD,CAAUvN,KAAMpI,EAAQiL,QAAU,kBAAM6J,GAAa,IAAS5O,UAAU,oCACvEtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACbrE,EAAM+T,sqBCpOb,IAyee1R,GAzeA,SAACrC,GAIZ,IAAM0B,EAAWd,cAOXoT,EAAU,CACZvU,SAAsBS,IAAM+T,OAAO,MACnChV,QAAsBiB,IAAM+T,OAAO,MACnCC,oBAAsBhU,IAAM+T,OAAO,MACnCjM,cAAsB9H,IAAM+T,OAAO,MACnC9L,SAAsBjI,IAAM+T,OAAO,MACnC7L,eAAsBlI,IAAM+T,OAAO,MACnC5L,aAAsBnI,IAAM+T,OAAO,MACnCvc,OAAsBwI,IAAM+T,OAAO,OAnBbE,EAsBChU,mBAAS,CAChCV,SAAsB,KACtBR,QAAsB,KACtBiV,oBAAsB,KACtBlM,cAAsB,KACtBG,SAAsB,KACtBC,eAAsB,KACtBC,aAAsB,KACtB3Q,OAAsB,OA9BA0c,EAAA7b,OAAA8H,EAAA,EAAA9H,CAAA4b,EAAA,GAsBnBE,EAtBmBD,EAAA,GAsBZE,EAtBYF,EAAA,GA4CpBG,EAAQ,WAEV,IAAI/d,EAAI6d,EACR7d,EAAEiJ,SAAwB,KAC1BjJ,EAAEyI,QAAwB,KAC1BzI,EAAE0d,oBAAwB,KAC1B1d,EAAEwR,cAAwB,KAC1BxR,EAAE2R,SAAwB,KAC1B3R,EAAE6R,aAAwB,KAC1B7R,EAAE4R,eAAwB,KAC1B5R,EAAE6R,aAAwB,KAC1B7R,EAAEkB,OAAwB,KAC1B4c,EAAU9d,IAGRge,EAAa,SAACrR,EAAUmI,EAAgBjB,GAE1CkK,IAGID,EAAUG,GAAA,GACHJ,EAFG,SAAXhK,EACU9R,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAWnI,EAAMuQ,eAGbnb,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,SAKlBoJ,EAAQ,SAACvR,GACX,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANF,GAAA,GACOzU,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlBkR,GAAA,GAGWzU,EAAMvB,OAAOjI,GAHxB,CAIQkC,IAAMyK,EAAMG,OAAO3K,YAKzBic,EAAiB,SAACzR,GACpB,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANF,GAAA,GACOzU,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlBkR,GAAA,GAGWzU,EAAMvB,OAAOjI,GAHxB,CAIQiI,OAAS0E,EAAMG,OAAO3K,YAK5Bkc,EAAY,eAAA3b,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO+Q,EAAciB,GAArB,IAAA9U,EAAA,OAAA4C,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOH,WAAX0Q,GACCkK,IACiC,KAA9BvU,EAAMvB,OAAO6M,GAAS5S,KACrBgJ,EAASoT,GAAS9U,EAAMvB,OAAO,UAAUuB,EAAM1F,UAGlB,KAA9B0F,EAAMvB,OAAO6M,GAAS5S,KACjBlC,EAAIwJ,EAAMvB,OAEduB,EAAM2U,UAANF,GAAA,GACOzU,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK+S,EAFLmJ,GAAA,GAGWzU,EAAMvB,OAAO6M,GAHxB,CAIQ5S,IAAM,QAIdlC,EAAE8U,GAAS5S,IAAM,GACjBgJ,EAASoT,GAASte,EAAE,UAAUwJ,EAAM1F,UAEpCga,EAAUG,GAAA,GACHJ,EADE9b,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,QA7BP,wBAAA7R,EAAAO,SAAAV,MAAH,gBAAAR,EAAAmB,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,GAmCZ+b,EAAQ,SAACC,GAEX,GAAa,cAAVA,EAAEtc,KAC4B,IAA1Bsc,EAAE1R,OAAO3K,MAAMsc,OAAa,CAG3B,IAAIze,EAAQwJ,EAAMvB,OAClBjI,EAAEwe,EAAE1R,OAAOC,MAAM7K,IAAM,GACvBgJ,EAASoT,GAASte,EAAE,UAAUwJ,EAAM1F,SAI/B,UAAV0a,EAAEtc,KACqB,KAAnBsc,EAAE1R,OAAO3K,QACR4b,IACAP,EAAIgB,EAAE1R,OAAOC,MAAM2R,QAAQC,OAC3BzT,EAASoT,GAAS9U,EAAMvB,OAAO,UAAUuB,EAAM1F,WAM3D,OACIyG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,WACP5K,MAASqH,EAAMvB,OAAOgB,SAAS/G,IAC/B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,WAAW,SAChDkS,UAAaN,EACbO,SAAYtB,EAAIvU,WAGpBsB,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO5U,UAAW,qBAAkBpI,EAAWkP,KAAMyI,QAAQqF,EAAO5U,UAAWwP,SAAUoF,EAAO5U,UACxIsB,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOgB,SAAShB,OAC7B4G,SAAUuP,EACVrR,KAAO,YAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAIRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,cAC3C,KAA9B7U,EAAMvB,OAAOgB,SAAS/G,IAAY,QAAU,SAEjDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,aAAazP,SAAwC,KAA9BpF,EAAMvB,OAAOgB,SAAS/G,KAA9H,aAQZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAEhCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,UACP5K,MAASqH,EAAMvB,OAAOQ,QAAQvG,IAC9B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,UAAU,SAC/CkS,UAAaN,EACbO,SAAYtB,EAAI/U,UAGpB8B,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOpV,SAAU,qBAAkB5H,EAAWkP,KAAMyI,QAAQqF,EAAOpV,SAAUgQ,SAAUoF,EAAOpV,SACtI8B,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOQ,QAAQR,OAC5B4G,SAAUuP,EACVrR,KAAO,WAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,aAC5C,KAA7B7U,EAAMvB,OAAOQ,QAAQvG,IAAY,QAAU,SAEhDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,YAAYzP,SAAuC,KAA7BpF,EAAMvB,OAAOQ,QAAQvG,KAA5H,aAOZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,sBACP5K,MAASqH,EAAMvB,OAAOyV,oBAAoBxb,IAC1C2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,sBAAsB,SAC3DkS,UAAaN,EACbO,SAAYtB,EAAIE,sBAGpBnT,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOH,qBAAsB,qBAAkB7c,EAAWkP,KAAMyI,QAAQqF,EAAOH,qBAAsBjF,SAAUoF,EAAOH,qBAC9JnT,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOyV,oBAAoBzV,OACxC4G,SAAUuP,EACVrR,KAAO,uBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,yBAChC,KAAzC7U,EAAMvB,OAAOyV,oBAAoBxb,IAAY,QAAU,SAE5DqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,wBAAwBzP,SAAmD,KAAzCpF,EAAMvB,OAAOyV,oBAAoBxb,KAApJ,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,gBACP5K,MAASqH,EAAMvB,OAAOuJ,cAActP,IACpC2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,gBAAgB,SACrDkS,UAAaN,EACbO,SAAYtB,EAAIhM,gBAGpBjH,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOrM,eAAgB,qBAAkB3Q,EAAWkP,KAAMyI,QAAQqF,EAAOrM,eAAgBiH,SAAUoF,EAAOrM,eAClJjH,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOuJ,cAAcvJ,OAClC4G,SAAUuP,EACVrR,KAAO,iBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,mBACtC,KAAnC7U,EAAMvB,OAAOuJ,cAActP,IAAY,QAAU,SAEtDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,kBAAkBzP,SAA6C,KAAnCpF,EAAMvB,OAAOuJ,cAActP,KAAxI,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACRxD,KAAO,SACP4B,KAAO,WACP5K,MAASqH,EAAMvB,OAAO0J,SAASzP,IAC/B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,WAAW,SAChDkS,UAAaN,EACbO,SAAYtB,EAAI7L,WAGpBpH,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOlM,UAAW,qBAAkB9Q,EAAWkP,KAAMyI,QAAQqF,EAAOlM,UAAW8G,SAAUoF,EAAOlM,UACxIpH,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO0J,SAAS1J,OAC7B4G,SAAUuP,EACVrR,KAAO,YAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,cAC3C,KAA9B7U,EAAMvB,OAAO0J,SAASzP,IAAY,QAAU,SAEjDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,aAAazP,SAAwC,KAA9BpF,EAAMvB,OAAO0J,SAASzP,KAA9H,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAU,QACVgB,SAAY,SAAClC,GAAD,OAAWnD,EAAM2U,UAANF,GAAA,GACZzU,EAAMvB,OADM,CAEf2J,eAAeqM,GAAA,GACRzU,EAAMvB,OAAN,eADO,CAEV/F,IAAMuP,KAAO9E,GAAO5J,OAAO,oBAIvCZ,MAA4C,IAAnCqH,EAAMvB,OAAO2J,eAAe1P,IAAY,KAAOuP,KAAOjI,EAAMvB,OAAO2J,eAAe1P,KAAKa,SAChG6b,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,iBAAiB,WAM1DpC,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOjM,gBAAiB,qBAAkB/Q,EAAWkP,KAAMyI,QAAQqF,EAAOjM,gBAAiB6G,SAAUoF,EAAOjM,gBACpJrH,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO2J,eAAe3J,OACnC4G,SAAUuP,EACVrR,KAAO,kBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,oBACrC,KAApC7U,EAAMvB,OAAO2J,eAAe1P,IAAY,QAAU,SAEvDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,mBAAmBzP,SAA8C,KAApCpF,EAAMvB,OAAO2J,eAAe1P,KAA1I,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAU,QACVgB,SAAY,SAAClC,GAAD,OAAWnD,EAAM2U,UAANF,GAAA,GACZzU,EAAMvB,OADM,CAEf4J,aAAaoM,GAAA,GACNzU,EAAMvB,OAAN,aADK,CAER/F,IAAMuP,KAAO9E,GAAO5J,OAAO,oBAIvCZ,MAA0C,IAAjCqH,EAAMvB,OAAO4J,aAAa3P,IAAY,KAAOuP,KAAOjI,EAAMvB,OAAO4J,aAAa3P,KAAKa,SAC5F6b,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,eAAe,WAMxDpC,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOhM,cAAe,qBAAkBhR,EAAWkP,KAAMyI,QAAQqF,EAAOhM,cAAe4G,SAAUoF,EAAOhM,cAChJtH,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO4J,aAAa5J,OACjC4G,SAAUuP,EACVrR,KAAO,gBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,kBACvC,KAAlC7U,EAAMvB,OAAO4J,aAAa3P,IAAY,QAAU,SAErDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,iBAAiBzP,SAA4C,KAAlCpF,EAAMvB,OAAO4J,aAAa3P,KAAtI,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UACbzJ,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWmE,MAAO,CAAC0E,MAAM,SAC1CjN,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO/G,OAAOgB,IAC3B2M,SAAUqP,EACVnR,KAAK,SACL6R,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,SAAS,UAE9CpC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,OACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,OACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,cAIRoI,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO3c,QAAS,qBAAkBL,EAAWkP,KAAMyI,QAAQqF,EAAO3c,QAASuX,SAAUoF,EAAO3c,QACpIqJ,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIkL,EAAUG,GAAA,GAAIJ,EAAL,CAAY3c,OAAO,UAArF,SAGAqJ,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,YAAjF,2ECjVThV,GAtIE,SAACG,GAAmB,IAAAC,EAGHC,IAAMC,UAAS,GAHZC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAGzByC,EAHyBtC,EAAA,GAGjBuC,EAHiBvC,EAAA,GAAAI,EAILN,IAAMC,UAAS,GAJVM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAIzB5G,EAJyB6G,EAAA,GAIlBwC,EAJkBxC,EAAA,GAAAqC,EAKD5C,IAAMC,SAAS,IALd6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAKzBC,EALyBC,EAAA,GAKhB8S,EALgB9S,EAAA,GAAAqD,EAMAnG,IAAMC,SAAS,IANfmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAM1BjO,EAN0BkO,EAAA,GAMhByP,EANgBzP,EAAA,GAAA2F,EAOUC,yBAAnCC,EAPyBF,EAOzBE,gBAAiBC,EAPQH,EAORG,cAEnBC,EAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACgV,GAAAxf,EAAD,SAI/Byf,EAAc,WAChBjW,EAAMwG,SAASxG,EAAMuG,OAInB2P,EAAY,eAAAhd,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAA9C,EAAAkT,EAAAyM,EAAA/b,EAAAgc,EAAA,OAAAhd,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDrC,EAASuI,SAASpC,KAAKuC,EAAM1F,QAD5B,UACX9D,EADWiD,EAAA0D,QAGbuM,EAAOlT,EAAEuD,KAAK2P,MAIVC,MAAQD,EAAKlM,UAPJ,CAAA/D,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQErC,EAASuI,SAASpC,KAAK,CAACD,SAASkM,EAAKC,MAAMpM,KAAK,IARnD,OAQTnD,EARSX,EAAA0D,KASbgZ,EAAO/b,EAAEL,KAAKA,KACdiG,EAAM1F,OAAOiD,KAAO,EACpByC,EAAM1F,OAAOkD,SAAWkM,EAAKC,MAXhBlQ,EAAAE,KAAA,iBAaboc,EAAYvf,EAAEuD,KAAKA,MACnBoc,EAAO3f,EAAEuD,KAAKA,KAdD,QAmBbqc,EAAMD,EAAKjM,IAAI,SAACvR,GAChB,MAAO,CACHqM,MAAQrM,EAAM4K,KACd5K,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,WACR5K,MAAQA,EAAM+E,OAK1BsC,EAAMqW,UAAUD,GA9BC,yBAAA3c,EAAAO,SAAAV,MAAH,yBAAAJ,EAAAH,MAAA/B,KAAAgC,YAAA,GAiCZwK,EAAU,eAAApG,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,IAAA,IAAA3D,EAAA,OAAA4C,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,UACfsJ,GAAS,GACTN,GAAU,GACM,KAAbvK,EAHY,CAAAiC,EAAAV,KAAA,eAIXgJ,GAAU,GACVM,GAAS,GACT6S,EAAW,6BANAzb,EAAAP,OAAA,wBAAAO,EAAAV,KAAA,EAUDrC,EAASuI,SAAS5B,IAAI,CAACsF,KAAKnL,IAV3B,YAUX5B,EAVW6D,EAAA8C,MAYV1F,cAZU,CAAA4C,EAAAV,KAAA,SAaXwS,EAAgB,+CAA+C,CAAChH,QAAQ,QAAQkF,OAAOgC,IAb5EhS,EAAAV,KAAA,oBAeK,MAAbnD,EAAEkB,OAfM,CAAA2C,EAAAV,KAAA,SAgBPuc,IACAD,IACA9J,EAAgB,qCAAqC,CAAChH,QAAQ,UAAUkF,OAAOgC,IAlBxEhS,EAAAV,KAAA,oBAqBS,MAAbnD,EAAEkB,OArBE,CAAA2C,EAAAV,KAAA,gBAsBHgJ,GAAU,GACVM,GAAS,GACT6S,EAAW,gCAxBRzb,EAAAP,OAAA,kBA2BHqS,EAAgB,0CAA0C,CAAChH,QAAQ,QAAQkF,OAAOgC,IA3B/E,QAgCf1J,GAAU,GACVM,GAAS,GACT6S,EAAW,IAlCI,yBAAAzb,EAAAL,SAAAG,MAAH,yBAAAiD,EAAArE,MAAA/B,KAAAgC,YAAA,GAqChB,OACI+H,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIoP,sBAAoB,EACpBlS,SAAS,KACTmC,KAAMvG,EAAMuG,KACZY,QAAS8O,EACT7O,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,oBACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACHsH,MAAM,gBAENrD,KAAK,OACL4B,KAAK,WACL5K,MAASP,EACT8M,OAAO,SACPC,QAAQ,WACRoR,gBAAiB,CACbC,QAAQ,GAEZnR,SAAY,SAAClC,GAAD,OAAW4S,EAAY5S,EAAMG,OAAO3K,QAChDiB,MAASA,EACT2L,WAAcxC,EACdqC,SAAU1C,KAGlB3B,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQN,SAAU1C,EAAQ0G,QAAS6M,EAAatQ,MAAM,YAAYR,QAAQ,aAA1E,UAIApE,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQN,SAAU1C,EAAQ0G,QAAS5F,EAAYmC,MAAM,UAAUR,QAAQ,aAAvE,2OCvHpB,IAAMoL,GAAYC,aAAW,SAACC,GAAD,OACzBC,aAAa,CACT+F,UAAW,CACPlJ,QAAS,OACTmJ,SAAU,QAEdC,UAAW,CACP7H,WAAY,EACZ8H,YAAa,EACb5I,MAAQ,OACR6I,aAAc,OACdtN,UAAU,KAGduN,MAAO,CACHvN,UAAWkH,EAAMsG,QAAQ,IAE7BC,KAAM,CACFhJ,MAAO,KAEXiJ,OAAS,CACL3J,SAAU,WAEd4J,OAAS,CACLC,WAAa,QACbvJ,SAAW,WACXjI,MAAQ,UACR4D,UAAY,QACZ6N,KAAO,OACPC,OAAS,GAIbjf,SAAW,CACP4V,MAAQ,OAEZsJ,YAAc,CACX/N,UAAY,QACZgO,MAAQ,OACR3J,SAAW,WACX4J,UAAY,aACZC,QAAQ,OAEPC,UAAW,CACPD,QAAS,SAGjBE,cAAgB,CACZC,SAAU,UACVjS,MAAU,UACViI,SAAW,gBA2RRiK,GArRH,SAAC7X,GAET,IAAM8X,EAAY,CACdhQ,aAAe,CAAClO,OAAO,EAAOmJ,QAAU,IACxCgF,aAAe,CAACnO,OAAO,EAAOmJ,QAAU,IACxC3K,SAAe,CAACwB,OAAO,EAAOmJ,QAAU,KAGtCgV,EAAUxH,GAAUvQ,GAEpB0B,EAAWd,cAVMqL,EAWoBC,yBAAnCC,EAXeF,EAWfE,gBAAiBC,EAXFH,EAWEG,cAXFnM,EAYWC,IAAMC,WAZjBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAYL8V,GAZK3V,EAAA,GAAAA,EAAA,IAAAI,EAaON,IAAMC,WAbbM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAafwX,EAbevX,EAAA,GAaP4V,EAbO5V,EAAA,GAAAqC,EAcG5C,IAAMC,SAAS,CACrC2H,aAAe,GACfC,aAAe,GACf3P,SAAe,KAjBI4K,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAchBmV,EAdgBjV,EAAA,GAcTkV,EAdSlV,EAAA,GAAAqD,EAmBMnG,IAAMC,UAAS,GAnBrBmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAmBhB3D,EAnBgB4D,EAAA,GAmBR3D,EAnBQ2D,EAAA,GAAAG,EAoBGvG,IAAMC,SAAS2X,GApBlBpR,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAoBhB7M,EApBgB8M,EAAA,GAoBTzD,EApBSyD,EAAA,GAAAG,EAqBwB3G,IAAMC,UAAS,GArBvC2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GAqBfsR,EArBerR,EAAA,GAqBCsR,EArBDtR,EAAA,GAwBjBuR,EAAiB,CACnB7a,SAAW,GACXD,KAAO,GAIX2C,IAAMW,UAAW,WACVb,EAAMuG,MACL+R,KAEN,CAACtY,IAEH,IAAMqM,EAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACgV,GAAAxf,EAAD,SAK/B8hB,EAAa,eAAApf,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAA9C,EAAAkT,EAAAyM,EAAA/b,EAAAgc,EAAA,OAAAhd,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFrC,EAASuI,SAASpC,KAAK4a,GADrB,UACZ7hB,EADYiD,EAAA0D,QAGduM,EAAOlT,EAAEuD,KAAK2P,MAIVC,MAAQD,EAAKlM,UAPH,CAAA/D,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQCrC,EAASuI,SAASpC,KAAK,CAACD,SAASkM,EAAKC,MAAMpM,KAAK,IARlD,OAQVnD,EARUX,EAAA0D,KASd4Y,EAAY3b,EAAEL,KAAKA,MACnBoc,EAAO/b,EAAEL,KAAKA,KACdse,EAAe9a,KAAO,EACtB8a,EAAe7a,SAAWkM,EAAKC,MAZjBlQ,EAAAE,KAAA,iBAcdoc,EAAYvf,EAAEuD,KAAKA,MACnBoc,EAAO3f,EAAEuD,KAAKA,KAfA,QAoBdqc,EAAMD,EAAKjM,IAAI,SAACvR,GAChB,MAAO,CACHqM,MAAQrM,EAAM4K,KACd5K,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,WACR5K,MAAQA,EAAM+E,OAK1B2Y,EAAUD,GA/BQ,yBAAA3c,EAAAO,SAAAV,MAAH,yBAAAJ,EAAAH,MAAA/B,KAAAgC,YAAA,GAkCbuf,EAAmB,SAACpV,GACtB+U,yVAASM,CAAA,GACFP,EADC1f,OAAA8K,EAAA,EAAA9K,CAAA,GAEH4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAqDrC6K,EAAU,eAAApG,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAOgJ,GAAP,IAAA3M,EAAAiiB,EAAA,OAAArf,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAEfsJ,EAAS6U,GACTnV,GAAU,GACVQ,EAAMO,iBAJSrJ,EAAAV,KAAA,EAWDrC,EAASoI,YAAYzB,IAAIga,GAXxB,YAWXzhB,EAXW6D,EAAA8C,MAcV1F,cAdU,CAAA4C,EAAAV,KAAA,SAeXwS,EAAgB,+CAA+C,CAAChH,QAAQ,QAAQkF,OAAOgC,IAf5EhS,EAAAV,KAAA,oBAiBK,MAAbnD,EAAEkB,OAjBM,CAAA2C,EAAAV,KAAA,gBAkBPwS,EAAgB,kCAAkC,CAAChH,QAAQ,UAAUkF,OAAOgC,IAlBrEhS,EAAAV,KAAA,GAoBOrC,EAASoI,YAAYjC,KAAK,CAACD,SAASwC,EAAMxC,SAASD,KAAKyC,EAAMzC,OApBrE,QAsBS,OAFZ/G,EApBG6D,EAAA8C,MAsBFzF,QACDgK,EAAShC,GAAYlJ,IAIzBwJ,EAAMiW,cA3BC5b,EAAAV,KAAA,iBA8BS,MAAbnD,EAAEkB,QACDuV,EAAiBzW,EAAEuD,KAAKmT,QAE5Bf,EAAgB,8BAA8B,CAAChH,QAAQ,QAAQkF,OAAOgC,IAjC/D,eAqCf1J,GAAU,GArCKtI,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAArB,GAAA,OAAAsE,EAAArE,MAAA/B,KAAAgC,YAAA,GA0CViU,EAAmB,SAACpT,GACtB,IAAIsT,EAAa2K,EACjBje,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAEtDE,EAASkK,IAIb,OACIpM,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0X,GAAD,CACIpe,OAAU+d,EACV9R,KAAQ4R,EACR3R,QAAW4R,EACX/B,UAAaA,IAEjBtV,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIoP,sBAAoB,EACpBlS,SAAS,KACTmC,KAAMvG,EAAMuG,KACZY,QAASnH,EAAMiW,YACf7O,kBAAgB,yBAChB2Q,QAAW,CAAEY,iBAAkBZ,EAAQd,SAEvClW,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,mBACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,CAAejD,UAAW0T,EAAQd,QAC9BlW,EAAAvK,EAAAwK,cAAA,QAAM8D,SAAUtB,EAAY9F,GAAG,eAE3BqD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACHsH,MAAM,eACNX,UAAW0T,EAAQpB,UACnBhV,KAAK,OACL4B,KAAK,eACL5K,MAASsf,EAAMnQ,aACf5C,OAAO,SACPC,QAAQ,WACRoR,gBAAiB,CACbC,QAAQ,GAEZnR,SAAYkT,EACZ3e,MAASA,EAAMkO,aAAalO,MAC5B2L,WAAc3L,EAAMkO,aAAalO,MAAQA,EAAMkO,aAAa/E,QAAU,GACtEqC,SAAU1C,IAGd3B,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACHsH,MAAM,eACNX,UAAW0T,EAAQpB,UACnBhV,KAAK,OACL4B,KAAK,eACL5K,MAASsf,EAAMlQ,aACf7C,OAAO,SACPC,QAAQ,WACRoR,gBAAiB,CACbC,QAAQ,GAEZnR,SAAYkT,EACZ3e,QAASA,EAAMmO,aAAanO,MAC5B2L,WAAc3L,EAAMmO,aAAahF,QACjCqC,SAAU1C,IAGd3B,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAACsE,SAAS,aAClB7M,EAAAvK,EAAAwK,cAAA,SAAOqD,UAAW0T,EAAQb,QAA1B,YACAnW,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASb,EAETzU,KAAO,WACP8B,SAAYkT,EAKZlU,UAAqC0T,EAAQ3f,SAC7CkN,UAAQ,EACRF,SAAU1C,IAEd3B,EAAAvK,EAAAwK,cAAA,OAAK+O,QAASnW,EAAMxB,SAASwB,MAAmCyK,UAAW0T,EAAQJ,eAAgB/d,EAAMxB,SAAS2K,UAGtHhC,EAAAvK,EAAAwK,cAAC8X,GAAA,EAAD,CAAKnT,MAAM,UAAUqF,aAAW,MAAM3G,UAAW0T,EAAQT,YAAalO,QAAY,kBAAMgP,GAAmB,KACvGrX,EAAAvK,EAAAwK,cAAC+X,GAAAviB,EAAD,SAIZuK,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQN,SAAU1C,EAAQ0G,QAASpJ,EAAMiW,YAAatQ,MAAM,YAAYR,QAAQ,aAAhF,SAIApE,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ8H,KAAK,KAAKpI,SAAU1C,EAAQ0G,QAAS5F,EAAYmC,MAAM,UAAUR,QAAQ,aAAjF,cC/Ud2K,GAAS,CACXoH,OAAS,CACLU,SAAU,UACVjS,MAAU,YAIZqT,GAAc,CAChBxB,UAAW,aACX1I,WAAY,QACZ2I,QAAS,QAsWEI,GApVH,SAAC7X,GAGT,IAAMiZ,EAAcpT,YAAa,SAACxE,GAAD,OAAeA,EAAM3B,YAAY3F,KAAKA,OAHhDkG,EAImBC,IAAMC,WAJzBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAIhBiZ,EAJgB9Y,EAAA,GAID+Y,EAJC/Y,EAAA,GAAAI,EAKqBN,IAAMC,UAAS,GALpCM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAKhB4Y,EALgB3Y,EAAA,GAKA4Y,EALA5Y,EAAA,GAOvBP,IAAMW,UAAW,WACVoY,GAAejZ,EAAMsZ,UACpBC,KAEN,CAACN,EAAYjZ,IAEf,IAAMuZ,EAAc,WAGhB,IAAInD,EAAM6C,EAAYlf,KAAKmQ,IAAI,SAACvR,GAC5B,MAAO,CACHqM,MAAQrM,EAAMmP,aACdnP,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,UACR5K,MAAQA,EAAM+E,OAK1Byb,EAAiB/C,IAIfoD,EAAmB,WACrBH,GAAmBD,IAIvB,GAAGpZ,EAAMsZ,SAAS,CACd,IAAIT,EAwDJ,OArDIA,EADD7Y,EAAMyZ,cACKzZ,EAAMyZ,cAAc1f,KAAKA,KAAKmQ,IAAI,SAACvR,GACzC,MAAO,CACHqM,MAAQrM,EAAMkP,cAAgB,MAAOlP,EAAM6P,cAAe,MAC1D7P,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,WACR5K,MAAQA,EAAM+E,OAKhB,CACNsH,MAAQ,GACRrM,MAAQ,GACR2K,OAAQ,CACJC,KAAO,WACP5K,MAAQ,KAsChBoI,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACGlG,EAAAvK,EAAAwK,cAAC0Y,GAAD,CAAanT,KAAM6S,EAAgBnD,YAAauD,EAAkBhc,SAAUwC,EAAM1F,OAAOkD,SAAUD,KAAMyC,EAAM1F,OAAOiD,OAErHwD,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAMsZ,SACZnS,QAAU,kBAAKnH,EAAM2Z,aAAY,IACjCvS,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,mBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,QAAQzF,GAAG,oBACrFqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASA,EAETtV,KAAO,WAEP8B,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB2B,UAAWrE,EAAM+L,gBAAgBtM,SAAS7F,MAAO,eAAiB,GAClE0L,UAAQ,IAEZvE,EAAAvK,EAAAwK,cAAA,OAAK+O,QAAS/P,EAAM+L,gBAAgBtM,SAAS7F,MAAO0P,MAASwG,GAAOoH,QAASlX,EAAM+L,gBAAgBtM,SAASsD,YAIxHhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,yBAAyBiF,MAAO,CAACsE,SAAS,aACrD7M,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASK,EAET3V,KAAO,UAEP8B,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB2B,UAAWrE,EAAM+L,gBAAgB9M,QAAQrF,MAAO,eAAiB,GACjE0L,UAAQ,IAEZvE,EAAAvK,EAAAwK,cAAA,OAAK+O,QAAS/P,EAAM+L,gBAAgB9M,QAAQrF,MAAO0P,MAASwG,GAAOoH,QAASlX,EAAM+L,gBAAgB9M,QAAQ8D,UAE9GhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC8X,GAAA,EAAD,CAAKnT,MAAM,UAAUqF,aAAW,MAAM1B,MAAO0P,GAAa5P,QAAWoQ,GACjEzY,EAAAvK,EAAAwK,cAAC+X,GAAAviB,EAAD,UAKhBuK,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAa7R,cAC5B5C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB/D,cAAcpO,MAC7C2L,WAAcvF,EAAM+L,gBAAgB/D,cAAcjF,aAKlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,UAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAzH3B,CACT,CACI7T,MAAQ,MACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,KAgGoB4K,KAAO,SAEP8B,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB2B,UAAWrE,EAAM+L,gBAAgBrU,OAAOkC,MAAO,eAAiB,GAChE0L,UAAQ,IAEZvE,EAAAvK,EAAAwK,cAAA,OAAK+O,QAAS/P,EAAM+L,gBAAgBrU,OAAOkC,MAAO0P,MAASwG,GAAOoH,QAASlX,EAAM+L,gBAAgBrU,OAAOqL,YAIpHhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAY,wCACZgB,SAAY,SAAClC,GAAD,OAAWnD,EAAMuM,YAAYpJ,EAAM,kBAC/CxK,MAASqH,EAAM6Z,aAAa3R,cAC5B9C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB7D,cAActO,MAC7C2L,WAAcvF,EAAM+L,gBAAgB7D,cAAcnF,aAMlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,8BACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAavR,4BAC5BlD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBzD,4BAA4B1O,MAC3D2L,WAAcvF,EAAM+L,gBAAgBzD,4BAA4BvF,aAKhFhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,mBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,SACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAa1R,SAC5B/C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB5D,SAASvO,MACxC2L,WAAcvF,EAAM+L,gBAAgB5D,SAASpF,aAK7DhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,kBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAY,wCACZgB,SAAY,SAAClC,GAAD,OAAWnD,EAAMuM,YAAYpJ,EAAM,mBAC/CxK,MAASqH,EAAM6Z,aAAazR,eAE5BhD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB3D,eAAexO,MAC9C2L,WAAcvF,EAAM+L,gBAAgB3D,eAAerF,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CAEIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAatR,QAC5BnD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBxD,QAAQ3O,MACvC2L,WAAcvF,EAAM+L,gBAAgBxD,QAAQxF,aAK5DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KAEIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKpJ,EAAM2Z,aAAY,IAAQhU,MAAM,YAAYR,QAAQ,aACtEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,UAKAvL,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,QAC/CwC,MAAM,UACNR,QAAQ,YACRC,SAAUpF,EAAM0C,OAChB8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAUvN,EAAM0C,OAAkB,QAAT,QAAoB2B,UAAU,kCAQrG,OAAO,MCrPAyV,GA/GF,SAAC9Z,GAEV,OAAGA,EAAMf,QAED8B,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM+Z,UACZ5S,QAAU,kBAAMnH,EAAMga,cAAa,IACnC5S,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,mBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,uBACTtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,sBACbtD,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,iBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQQ,SAASoI,gBAE9E9G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,gBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQA,QAAQ6I,eAE7E/G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,gBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQA,QAAQ8I,eAE7EhH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,YACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQA,QAAQ7G,SAASmL,OAEtFxC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,iBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQ+I,gBAErEjH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,iBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQvC,KAAOjI,EAAMf,QAAQiJ,eAAe3O,OAAO,QAElGwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,YACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQkJ,SAAW,EAAInI,EAAMf,QAAQkJ,SAAW,WAAanI,EAAMf,QAAQkJ,SAAW,WAEnJpH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,kBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQvC,KAAOjI,EAAMf,QAAQmJ,gBAAgB7O,OAAO,QAEnGwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,YACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQvC,KAAO,IAAIxR,KAAKuJ,EAAMf,QAAQoJ,eAAe9O,OAAO,QAG3GwH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,gBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQqJ,8BAGrEvH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,cACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQgb,WAAWnR,WAAa,IAAM9I,EAAMf,QAAQgb,WAAWlR,YAG5HhI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,UACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QACd,IAAzBxK,EAAMf,QAAQvH,OAAe,MACJ,IAAzBsI,EAAMf,QAAQvH,OAAe,WACJ,IAAzBsI,EAAMf,QAAQvH,OAAe,WAAa,aAIlDqJ,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,WACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMf,QAAQsJ,cAQzFxH,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAEI,IAArBrE,EAAMhI,KAAKiR,MACPlI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAASpJ,EAAMka,cACfvU,MAAM,UACNR,QAAQ,aAERpE,EAAAvK,EAAAwK,cAACqO,GAAA,EAAD,MALJ,QAQF,KAGNtO,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAMpJ,EAAMga,cAAa,IAAQrU,MAAM,YAAYR,QAAQ,aACxEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,WAQL,MCjGTwD,GAAS,CACXoH,OAAS,CACLU,SAAU,UACVjS,MAAU,YAIZqT,GAAc,CAChBxB,UAAW,aACX1I,WAAY,QACZ2I,QAAS,QAgVE0C,GA7UF,SAACna,GAGV,IAAMiZ,EAAcpT,YAAa,SAACxE,GAAD,OAAeA,EAAM3B,YAAY3F,KAAKA,OAH9CkG,EAIiBC,IAAMC,WAJvBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAIlBiZ,EAJkB9Y,EAAA,GAIH+Y,EAJG/Y,EAAA,GAAAI,EAKmBN,IAAMC,UAAS,GALlCM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAKlB4Y,EALkB3Y,EAAA,GAKF4Y,EALE5Y,EAAA,GAQzBP,IAAMW,UAAW,WACVoY,GAAejZ,EAAM6L,WACpB0N,KAEN,CAACN,EAAYjZ,IAEf,IAoBI6Y,EApBEU,EAAc,WAChB,IAAInD,EAAM6C,EAAYlf,KAAKmQ,IAAI,SAACvR,GAC5B,MAAO,CACHqM,MAAQrM,EAAMmP,aACdnP,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,UACR5K,MAAQA,EAAM+E,OAK1Byb,EAAiB/C,IAGfoD,EAAmB,WACrBH,GAAmBD,IAMnBP,EADD7Y,EAAMyZ,cACKzZ,EAAMyZ,cAAc1f,KAAKA,KAAKmQ,IAAI,SAACvR,GACzC,MAAO,CACHqM,MAAQrM,EAAMkP,cAAgB,MAAOlP,EAAM6P,cAAe,MAC1D7P,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,WACR5K,MAAQA,EAAM+E,OAKhB,CACNsH,MAAQ,GACRrM,MAAQ,GACR2K,OAAQ,CACJC,KAAO,WACP5K,MAAQ,KAKpB,IAAIjB,EAAS,CACT,CACIsN,MAAQ,MACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,IAEd,CACEqM,MAAQ,WACRrM,MAAQ,EACR2K,OAAQ,CACJC,KAAO,SACP5K,MAAQ,KAKpB,OAAGqH,EAAMf,SAAWia,EAIZnY,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACGlG,EAAAvK,EAAAwK,cAAC0Y,GAAD,CAAanT,KAAM6S,EAAgBnD,YAAauD,EAAkBhc,SAAUwC,EAAM1F,OAAOkD,SAAUD,KAAMyC,EAAM1F,OAAOiD,OACrHwD,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM6L,UACZ1E,QAAU,kBAAKnH,EAAM8L,cAAa,IAClC1E,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,wBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,SAASzF,GAAG,oBACtFqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASA,EAETtV,KAAO,WACP6W,aAAgBvB,EAAQwB,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUqH,EAAM6Z,aAAapa,WACnF4F,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB4C,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,yBAAyBiF,MAAO,CAACsE,SAAS,aACrD7M,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASK,EAET3V,KAAO,UACP6W,aAAgBlB,EAAeA,EAAcmB,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUqH,EAAM6Z,aAAa5a,UAAU,GAClHoG,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB2B,UAAWrE,EAAM+L,gBAAgB9M,QAAQrF,MAAO,eAAiB,GACjE0L,UAAQ,IAEZvE,EAAAvK,EAAAwK,cAAA,OAAK+O,QAAS/P,EAAM+L,gBAAgB9M,QAAQrF,MAAO0P,MAASwG,GAAOoH,QAASlX,EAAM+L,gBAAgB9M,QAAQ8D,UAE9GhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC8X,GAAA,EAAD,CAAKnT,MAAM,UAAUqF,aAAW,MAAM1B,MAAO0P,GAAa5P,QAAWoQ,GACjEzY,EAAAvK,EAAAwK,cAAC+X,GAAAviB,EAAD,UAKhBuK,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAa7R,cAC5B5C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB/D,cAAcpO,MAC7C2L,WAAcvF,EAAM+L,gBAAgB/D,cAAcjF,aAKlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,UAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASnhB,EAET6L,KAAO,SACP6W,aAAgB1iB,EAAO2iB,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUqH,EAAM6Z,aAAaniB,SAClF2N,SAAYrF,EAAMuM,YAClBqN,WAAc5Z,EAAM0C,OACpB2B,UAAWrE,EAAM+L,gBAAgBrU,OAAOkC,MAAO,eAAiB,GAChE0L,UAAQ,IAEZvE,EAAAvK,EAAAwK,cAAA,OAAK+O,QAAS/P,EAAM+L,gBAAgBrU,OAAOkC,MAAO0P,MAASwG,GAAOoH,QAASlX,EAAM+L,gBAAgBrU,OAAOqL,YAIpHhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAY,wCACZgB,SAAY,SAAClC,GAAD,OAAWnD,EAAMuM,YAAYpJ,EAAM,kBAC/CxK,MAASqH,EAAM6Z,aAAa3R,cAC5B9C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB7D,cAActO,MAC7C2L,WAAcvF,EAAM+L,gBAAgB7D,cAAcnF,aAKlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,8BACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAavR,4BAC5BlD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBzD,4BAA4B1O,MAC3D2L,WAAcvF,EAAM+L,gBAAgBzD,4BAA4BvF,aAKhFhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,mBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,SACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAa1R,SAC5B/C,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB5D,SAASvO,MACxC2L,WAAcvF,EAAM+L,gBAAgB5D,SAASpF,aAK7DhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,kBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAACkS,GAAA,EAAD,CACI3Z,OAAO,aACPqc,sBAAoB,EACpBC,sBAAoB,EACpB1Q,QAAU,WACVd,UAAY,wCACZgB,SAAY,SAAClC,GAAD,OAAWnD,EAAMuM,YAAYpJ,EAAM,mBAC/CxK,MAASqH,EAAM6Z,aAAazR,eAE5BhD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgB3D,eAAexO,MAC9C2L,WAAcvF,EAAM+L,gBAAgB3D,eAAerF,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CAEIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAM6Z,aAAatR,QAC5BnD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBxD,QAAQ3O,MACvC2L,WAAcvF,EAAM+L,gBAAgBxD,QAAQxF,aAK5DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,SAC/CwC,MAAM,UACNR,QAAQ,YACRC,SAAUpF,EAAM0C,OAChB8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAUvN,EAAM0C,OAAkB,QAAT,QAAoB2B,UAAU,+BAErFtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKpJ,EAAM8L,cAAa,IAAQnG,MAAM,YAAYR,QAAQ,aACvEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,aAST,mOCvWf,IAiKeiO,GAjKA,SAACva,GAEZ,IAAMiW,EAAc,WAChBjW,EAAMwa,iWAANC,CAAA,GACOza,EAAM0a,OADb,CAEInU,MAAU,MAKZoU,EAAU,CACZrN,SAAW,OACXsN,UAAY,QACZxW,SAAW,QASf,OAAGpE,EAAM0a,OAAOnU,KAGRxF,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM0a,OAAOnU,KACnBY,QAAS8O,EACT7O,kBAAgB,yBAChBkP,sBAAsB,GAEtBvV,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,UACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,0BACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAkB,YACjCtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBAEAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,UACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,WACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,mBAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE8C,IAAtCzH,EAAM0a,OAAOG,OAAO3N,OAAO+H,OACvBjV,EAAM0a,OAAOG,OAAO3N,OAAOhD,IAAI,SAACvR,EAAUD,GAAX,OAC3BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUyC,OAAK,EAAEzR,IAAKA,GAClBqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK8N,eACzD9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK+N,cAEzD/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKmO,eACzDnH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKuO,6BACzDvH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKiO,cAAzD,KACAjH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKoO,SAAzD,KACApH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKqO,eAAzD,KACArH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKsO,aAAzD,KACAtH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKrC,OAAzD,KACAqJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKwO,QAAzD,KACAxH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,QAAQ7R,EAAMoK,QAAlD,QAIRhC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QAEAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YAMxBzJ,EAAAvK,EAAAwK,cAAA,WACAD,EAAAvK,EAAAwK,cAAA,mCACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAgB,YAC/BtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBAEAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,UACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,aAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE+C,IAAvCzH,EAAM0a,OAAOG,OAAOC,QAAQ7F,OACxBjV,EAAM0a,OAAOG,OAAOC,QAAQ5Q,IAAI,SAACvR,EAAUD,GAAX,OAC5BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKA,EAAKyR,OAAK,GACrBpJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMkP,eACpD9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMmP,cAEpD/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMuP,eACpDnH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAM2P,6BACpDvH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMqP,cAApD,KACAjH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMwP,SAApD,KACApH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMyP,eAApD,KACArH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAM0P,aAApD,KACAtH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMjB,OAApD,KACAqJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAM4P,QAApD,QAIRxH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QAEAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,aAO5BzJ,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS6M,EAAatQ,MAAM,WAApC,WAOL,6jBClJf,IAqiBelD,eAriBE,SAACzC,GAEd,IA4DId,EA5DE6b,EAAmB,CACrBrd,GAA8B,CAAC9D,OAAM,EAAMmJ,QAAQ,IACnDtD,SAA8B,CAAC7F,OAAM,EAAMmJ,QAAQ,IACnD9D,QAA8B,CAACrF,OAAM,EAAMmJ,QAAQ,IAEnDmF,cAA8B,CAACtO,OAAM,EAAMmJ,QAAQ,IACnDuF,4BAA8B,CAAC1O,OAAM,EAAMmJ,QAAQ,IACnDiF,cAA8B,CAACpO,OAAM,EAAMmJ,QAAQ,IACnDoF,SAA8B,CAACvO,OAAM,EAAMmJ,QAAQ,IACnDqF,eAA8B,CAACxO,OAAM,EAAMmJ,QAAQ,IACnDrL,OAA8B,CAACkC,OAAM,EAAMmJ,QAAQ,IACnDwF,QAA8B,CAAC3O,OAAM,EAAMmJ,QAAQ,KAGjDiY,EAAmB,CACrBtd,GAAsB,GACtB+B,SAAsB,GACtBR,QAAsB,GAEtBiJ,cAAsB,GACtBI,4BAA8B,GAC9BN,cAAsB,GACtBG,SAAsB,GACtBC,eAAsB,GACtB1Q,OAAsB,GACtB6Q,QAAsB,IA3BCtI,EAiCGC,IAAMC,SAAS,CACzC5C,KAAW,EACXC,SAAW,KAnCY4C,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAiCnB3F,EAjCmB8F,EAAA,GAiCX6a,EAjCW7a,EAAA,GAAAI,EAqCSN,IAAMC,UAAS,GArCxBM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAqCnBqL,EArCmBpL,EAAA,GAqCRqL,EArCQrL,EAAA,GAAAqC,EAsCS5C,IAAMC,UAAS,GAtCxB6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAsCnBiX,EAtCmB/W,EAAA,GAsCRgX,EAtCQhX,EAAA,GAAAqD,EAuCOnG,IAAMC,UAAS,GAvCtBmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAuCnBiT,EAvCmBhT,EAAA,GAuCTqT,EAvCSrT,EAAA,GAAAG,EAwCKvG,IAAMC,WAxCXuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAwCnBxH,EAxCmByH,EAAA,GAwCVwU,EAxCUxU,EAAA,GAAAG,EAyCG3G,IAAMC,UAAS,GAzClB2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GAyCnBnE,EAzCmBoE,EAAA,GAyCXnE,EAzCWmE,EAAA,GAAAmF,EA0CgBC,yBAAnCC,EA1CmBF,EA0CnBE,gBAAiBC,EA1CEH,EA0CFG,cA1CE+O,EA2CEjb,IAAMC,SAAS,CACxCib,WAAc,EACd7U,MAAa,EACbsU,OAAY,KA9CWQ,EAAA9iB,OAAA8H,EAAA,EAAA9H,CAAA4iB,EAAA,GA2CnBT,EA3CmBW,EAAA,GA2CZb,EA3CYa,EAAA,GAAAC,EAgDCpb,IAAMC,SAAS,CACvCV,SAAsB,CAAChB,OAAO,MAAM/F,IAAI,IACxCuG,QAAsB,CAACR,OAAO,MAAM/F,IAAI,IACxCwb,oBAAsB,CAACzV,OAAO,MAAM/F,IAAI,IACxCsP,cAAsB,CAACvJ,OAAO,MAAM/F,IAAI,IACxCyP,SAAsB,CAAC1J,OAAO,MAAM/F,IAAI,IACxC0P,eAAsB,CAAC3J,OAAO,MAAM/F,IAAI,IACxC2P,aAAsB,CAAC5J,OAAO,MAAM/F,IAAI,IACxChB,OAAsB,CAAC+G,OAAO,MAAM/F,IAAI,MAxDjB6iB,EAAAhjB,OAAA8H,EAAA,EAAA9H,CAAA+iB,EAAA,GAgDpB7c,EAhDoB8c,EAAA,GAgDZ5G,EAhDY4G,EAAA,GAAAC,EA0DuBtb,IAAMC,WA1D7Bsb,EAAAljB,OAAA8H,EAAA,EAAA9H,CAAAijB,EAAA,GA0DnBE,GA1DmBD,EAAA,GA0DDE,GA1DCF,EAAA,GAAAG,GAgEe1b,IAAMC,SAAS6a,GAhE9Ba,GAAAtjB,OAAA8H,EAAA,EAAA9H,CAAAqjB,GAAA,GAgEnB/B,GAhEmBgC,GAAA,GAgELC,GAhEKD,GAAA,GAAAE,GAkEmB7b,IAAMC,SAAS4a,GAlElCiB,GAAAzjB,OAAA8H,EAAA,EAAA9H,CAAAwjB,GAAA,GAkEpBhQ,GAlEoBiQ,GAAA,GAkEHhQ,GAlEGgQ,GAAA,GAoErBC,GAAepW,YAAa,SAACxE,GAAD,OAAeA,EAAMrC,SAASjF,OAC1D0f,GAAiB5T,YAAc,SAACxE,GAAD,OAAeA,EAAM7B,UAAUzF,OAC9D/B,GAAQ6N,YAAa,SAACxE,GAAD,OAAeA,EAAMI,YAAY1H,OAEtD2H,GAAWd,cAGXsb,GAAa,eAAAhjB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAA9C,EAAAkT,EAAAtP,EAAA,OAAAhB,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRrC,EAASoI,YAAYjC,KAAK,CAACF,KAAK,EAAEC,SAAS,KADnC,UAClBhH,EADkBiD,EAAA0D,QAGpBuM,EAAOlT,EAAEuD,KAAK2P,MAIVlM,SAAWkM,EAAKC,OAPA,CAAAlQ,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQJrC,EAASoI,YAAYjC,KAAK,CAACF,KAAK,EAAEC,SAASkM,EAAKC,QAR5C,OAQdvP,EARcX,EAAA0D,KASdwe,GAAoB,CAChBpe,KAAO,EACPC,SAAWkM,EAAKC,QAXNlQ,EAAAE,KAAA,iBAcdS,EAAI5D,EACJmlB,GAAoB,CAChBpe,KAAO,EACPC,SAAW,KAjBD,QAsBxBkE,GAAShC,GAAYtF,IAtBG,yBAAAX,EAAAO,SAAAV,MAAH,yBAAAJ,EAAAH,MAAA/B,KAAAgC,YAAA,GA2BnB6H,oBAAU,WACNqb,KAEAxa,GAASG,EAAgB,CAACwJ,MAAQ,WAAWC,QAAQ,cACrD5J,GAASya,EAAc,CAAC5e,KAAO,EAAGC,SAAW,OAC7CkE,GAASoT,GAASrW,EAAO,UAAUnE,KAKrC,CAAC0F,IAGH,IAAMqM,GAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,SAK/BG,GAAa,WACfT,GAAmB+O,IA2CjBqB,GAAW,eAAAhf,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAO+E,GAAP,IAAArF,EAAA,OAAAT,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAGhB6gB,EAAU6B,GAAA,GACH3B,EADE,CAELU,WAAY,KALA/gB,EAAAV,KAAA,EAQKrC,EAAS0H,SAASO,QAAQL,GAR/B,OAQZrF,EARYQ,EAAA8C,KAAA9C,EAAAyH,GAUTjI,EAASnC,OAVA2C,EAAAV,KAWP,MAXOU,EAAAyH,GAAA,EAmBP,MAnBOzH,EAAAyH,GAAA,0BAYRqK,EAAgB,gCAAgC,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxEiQ,IAAoB,GACpB9B,EAAU6B,GAAA,GACH3B,EADE,CAELU,WAAY,KAhBR/gB,EAAAP,OAAA,yBAqBRqS,EAAgB,gCAAgC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAE1EiQ,IAAoB,GACpB5a,GAASoT,GAASrW,EAAO,UAAUnE,IACnCkgB,EAAU,CACNjU,MAAY,EACZ6U,WAAY,EACZP,OAAYhhB,EAASE,OA5BjBM,EAAAP,OAAA,yBAiCRqS,EAAgB,yCAAyC,CAAChH,QAAQ,QAAQkF,OAAOgC,KACjFiQ,IAAoB,GAEpB9B,EAAU6B,GAAA,GACH3B,EADE,CAELU,WAAY,KAtCR/gB,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAArB,GAAA,OAAAsE,EAAArE,MAAA/B,KAAAgC,YAAA,GA8FXsjB,GAAsB,SAACnZ,GACtBA,GACCwJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,UAExDH,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,aA4B1DP,GAAc,SAACpJ,EAAWxK,GAEzBwK,IACIA,aAAiB1M,KAChBqlB,GAAgBO,GAAA,GACTxC,GADQthB,OAAA8K,EAAA,EAAA9K,CAAA,GAEVI,EAASsP,KAAO9E,GAAO5J,OAAO,iBAGnCuiB,GAAgBO,GAAA,GACTxC,GADQthB,OAAA8K,EAAA,EAAA9K,CAAA,GAEV4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,WAgC7C6K,GAAU,eAAA7F,EAAApF,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAyB,EAAOqI,EAAWkH,GAAlB,OAAAjR,EAAA5C,EAAAgD,KAAA,SAAAwB,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,OAEf8S,KAKAtJ,EAAMuJ,UACNvJ,EAAMO,iBACN4Y,IAAoB,GACpB3Z,GAAU,GAVK3H,EAAA8G,GAYRuI,EAZQrP,EAAArB,KAaN,SAbMqB,EAAA8G,GAAA,EAoCN,QApCM9G,EAAA8G,GAAA,0BAAA9G,EAAArB,KAAA,GAcDrC,EAAS0H,SAAS5H,OAAOyiB,IAAcpd,KACzC,SAAC5C,GACMA,EAASpC,eACR0U,EAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFP,GAAa,IAEU,MAApBjS,EAASnC,QACRyU,EAAgB,kCAAkC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC5EP,GAAa,GACbpK,GAAS6a,EAAajiB,MAGtB6R,EAAgB,gBAAgB,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxDY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,WACJyP,EAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,KACpFP,GAAa,KAjCV,eAAA9Q,EAAAlB,OAAA,2BAAAkB,EAAArB,KAAA,GAqCDrC,EAAS0H,SAASf,IAAI4b,IAAcpd,KACtC,SAAC5C,GACMA,EAASpC,eACR0U,EAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFsN,GAAY,IAEW,MAApB9f,EAASnC,QACRyU,EAAgB,gCAAgC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC1EsN,GAAY,GACZjY,GAAS6a,EAAajiB,MAGtB6R,EAAgB,2BAA2B,CAAChH,QAAQ,QAAQkF,OAAOgC,KACnEY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,SAACsY,GACL7I,EAAgB,8CAA+C6I,EAAG,CAAC7P,QAAQ,QAAQkF,OAAOgC,KAC1FsN,GAAY,KAxDT,eAAA3e,EAAAlB,OAAA,2BA6Df6I,GAAU,GACV2Z,IAAoB,GA9DLthB,EAAAlB,OAAA,mCAAAkB,EAAAhB,SAAAc,MAAH,gBAAAb,EAAAW,GAAA,OAAA+C,EAAA5E,MAAA/B,KAAAgC,YAAA,GAkEViU,GAAmB,SAACpT,GACtB,IAAIsT,EAAa4N,EACjBlhB,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAGtDiJ,GAAmBmB,IAGjBzV,GAAS,SAAC8kB,GACZ,OAAOA,GACH,KAAK,EACD,MAAO,MACX,KAAK,EACD,MAAO,WACX,KAAK,EACD,MAAO,WACX,KAAK,EACD,MAAO,aAKnB,OACIzb,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAACyb,GAAD,CACIhD,cAAmBA,GACnB5N,UAAmBA,EACnBU,YAAmBA,GACnB7J,OAAmBA,EACnBqJ,gBAAmBA,GACnB8N,aAAmBA,GACnB5a,QAAmBA,EACnBuE,WAAmBA,GACnBsI,aAAmBA,EACnBxR,OAAmBohB,KAEvB3a,EAAAvK,EAAAwK,cAAC0b,GAAD,CACIpD,SAAmBA,EACnBK,YAAmBA,EACnBpN,YAAmBA,GACnBsN,aAAmBA,GACnBnX,OAAmBA,EACnBqJ,gBAAmBA,GACnB0N,cAAmBA,GACnBjW,WAAmBA,GACnBsY,gBAAmBA,GACnBxhB,OAAmBohB,KAEvB3a,EAAAvK,EAAAwK,cAAC2b,GAAD,CACI1d,QAAiBA,EACjB8a,UAAiBA,EACjB/hB,KAAiBA,GACjBkiB,cAhJU,WAElBzN,KAGAqP,GAAgB,CACZpe,GAA8BuB,EAAQvB,GACtC+B,SAA8BR,EAAQQ,SAAS/B,GAC/CuB,QAA8BA,EAAQA,QAAQvB,GAE9CwK,cAA8BjJ,EAAQiJ,cACtCI,4BAA8BrJ,EAAQqJ,4BACtCN,cAA8B/I,EAAQ+I,cACtCG,SAA8BlJ,EAAQkJ,SACtCC,eAA8BnJ,EAAQmJ,eACtC1Q,OAA8BuH,EAAQvH,OACtC6Q,QAA8BtJ,EAAQsJ,UAG1CyR,GAAa,GACblO,GAAa,IA6HLkO,aAAiBA,IAErBjZ,EAAAvK,EAAAwK,cAAC4b,GAAD,CACIlC,OAAeA,EACfF,UAAeA,IA1PpBE,EAAOU,UAEFra,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACI9C,SAAS,KACTmC,KAAMmU,EAAOU,UACb9E,sBAAoB,EACpBjS,UAAU,wBAEVtD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,WACID,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAwBiF,MAAO,CAAC+D,UAAU,WACrDtM,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,OAEJ7E,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAQT,KAwOPtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,qBACbtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,eAAemD,KAAK,SACjCzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,KACIlJ,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,YAIRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAAC6b,GAAD,CAAQpe,OAAQA,EAAQkW,UAAWA,EAAWra,OAAQA,IAGlD2hB,GACIA,GAAaliB,KAAKA,KAAKmQ,IAAI,SAACxR,EAAQgF,GAAT,OACvBqD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgF,EAAKyM,OAAO,EAAMb,MAAO,CAACwD,OAAO,WAAYgQ,cAAe,kBAtMvG5B,EADmB6B,EAuMwGrkB,GApM3HoN,QAAQC,IAAIgX,QAEZ/C,GAAa,GALK,IAAC+C,IAwMahc,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAI+G,SAASoI,eAAgBnP,EAAI+G,SAASoI,eACzE9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIuG,QAAQ6I,cAAepP,EAAIuG,QAAQ6I,cACtE/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIuG,QAAQ8I,cAAerP,EAAIuG,QAAQ8I,cACtEhH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIsP,eAAgBtP,EAAIsP,eACvDjH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASa,MAAO3S,EAAIyP,UAAWzP,EAAIyP,UACpDpH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAOpD,KAAO,IAAIxR,KAAKiC,EAAI0P,iBAAiB7O,OAAO,OAAQ0O,KAAO,IAAIxR,KAAKiC,EAAI0P,iBAAiB7O,OAAO,OAC/HwH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAOpD,KAAO,IAAIxR,KAAKiC,EAAI2P,eAAe9O,OAAO,OAAQ0O,KAAO,IAAIxR,KAAKiC,EAAI2P,eAAe9O,OAAO,OAC3HwH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASa,MAAO3T,GAAOgB,EAAIhB,SAAUA,GAAOgB,EAAIhB,YAhQ/E,WAKlB,IAHA,IAAIlB,EAAQ,GAEN+T,EAAYxJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAAQzJ,EAAAvK,EAAAwK,cAACyJ,GAAA,EAAD,CAAUtF,QAAQ,OAAO6I,MAAO,IAAKgP,OAAQ,MAChFtS,EAAI,EAAEA,EAAI,GAAGA,IACjBlU,EAAE0N,KACEnD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgS,GACVH,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,EACAA,IAKb,OAAO/T,EA+OiBmU,IAGZ5J,EAAAvK,EAAAwK,cAACic,GAAA,EAAD,KACIlc,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUrD,UAAU,wBAChBtD,EAAAvK,EAAAwK,cAAA,UACqB,IAAfhJ,GAAKiR,MACHlI,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAU,kBAzOjC,WAEjB,IAAM8T,EAAS,IAAIzmB,KACnBqlB,GAAgBO,GAAA,GACTrB,EADQ,CAEX9S,cAAsBD,KAAOiV,GAAO3jB,OAAO,cAC3C6O,eAAqBH,KAAOiV,GAAO3jB,OAAO,iBAK9CkT,KACAkN,GAAY,GA6N2CwD,IAAgBhY,QAAQ,YAAYQ,MAAM,UAAUtB,UAAU,mBAArF,WAKAtD,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,OAAOoO,QAAM,EAACxM,KAAK,cAAc6Z,OAAO,QAAQpJ,IAAK,SAAAiE,GAAK,OAAI/Y,EAAK+Y,GAAQ5S,SAvWxG,WAEf,GADAiX,IAAoB,GACK,IAAtBpd,EAAKme,MAAMpI,OAAa,CACvB,IAAMqI,EAAepe,EAAKme,MAAM,GAC5BE,EAAWD,EAAa/Z,KAAKia,MAAM,KAAKC,MAE5C,GAAmB,QAAbF,GAAmC,SAAbA,EAGxB,OAFApR,EAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,UACpFiQ,IAAoB,GAGpBF,GAAYkB,OA6VYvc,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACIC,MAAM,UACNR,QAAQ,YACRiE,QAAS,SAACjG,GACNA,EAAMuJ,UACNxN,EAAKwe,SAETrZ,UAAY,oBAEZtD,EAAAvK,EAAAwK,cAAC2c,GAAA,EAAD,MATJ,qBAaF,IAGV5c,EAAAvK,EAAAwK,cAAA,WAIAD,EAAAvK,EAAAwK,cAAC4J,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAG,GAAG,GAAG,KAC9B+S,QAAS,EACT9S,MAAOmR,GAAeA,GAAaliB,KAAK2P,KAAKC,MAAQ,GACrDzD,YAAa5L,EAAOkD,SACpBD,KAAM0e,GAAe3hB,EAAOiD,KAAK,EAAG,EACpC2N,aAnZH,SAAC/H,EAA8DgI,GACpF,IAAI0S,EAAWvjB,EACfA,EAAOiD,KAAK4N,EAAQ,EACpB8P,EAAU4C,GAEVnc,GAASoT,GAASrW,EAAO,UAAUof,KA+YXzS,oBA5YI,SAACjI,GAC7B,IACI2a,EAAQ,CAACvgB,KAAK,EAAEC,SADJ2F,EAAMG,OAAO3K,OAG7BsiB,EAAU6C,GACVpc,GAASoT,GAASrW,EAAO,UAAUqf,KAwYXC,iBAAkBC,KAClB3Z,UAAU,8BCniB3B4Z,GARC,SAACje,GACb,OACIe,EAAAvK,EAAAwK,cAAA,6BCIOkd,GANE,SAACle,GACd,OACIe,EAAAvK,EAAAwK,cAAA,slBCIR,IA4XeqB,GA5XA,SAACrC,GAIZ,IAAM0B,EAAWd,cAOXoT,EAAU,CACZnM,cAAsB3H,IAAM+T,OAAO,MACnCzL,cAAsBtI,IAAM+T,OAAO,MACnCvL,QAAsBxI,IAAM+T,OAAO,MACnCtL,eAAsBzI,IAAM+T,OAAO,MACnCrL,eAAsB1I,IAAM+T,OAAO,MACnCpL,MAAsB3I,IAAM+T,OAAO,OAjBbE,EAoBChU,mBAAS,CAChC0H,cAAsB,KACtBW,cAAsB,KACtBE,QAAsB,KACtBC,eAAsB,KACtBC,eAAsB,KACtBC,MAAsB,OA1BAuL,EAAA7b,OAAA8H,EAAA,EAAA9H,CAAA4b,EAAA,GAoBnBE,EApBmBD,EAAA,GAoBZE,EApBYF,EAAA,GA6BpBG,EAAQ,WACV,IAAI/d,EAAI6d,EACR7d,EAAEqR,cAAsB,KACxBrR,EAAEgS,cAAsB,KACxBhS,EAAEkS,QAAsB,KACxBlS,EAAEmS,eAAsB,KACxBnS,EAAEoS,eAAsB,KACxBpS,EAAEqS,MAAsB,KACxByL,EAAU9d,IAGRge,EAAa,SAACrR,EAAUmI,EAAgBjB,GAE1CkK,IAGID,EAAU6J,GAAA,GACH9J,EAFG,SAAXhK,EACU9R,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAWnI,EAAMuQ,eAGbnb,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,SAKlBoJ,EAAQ,SAACvR,GACX,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANwJ,GAAA,GACOne,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlB4a,GAAA,GAGWne,EAAMvB,OAAOjI,GAHxB,CAIQkC,IAAMyK,EAAMG,OAAO3K,YAKzBic,EAAiB,SAACzR,GACpB,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANwJ,GAAA,GACOne,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlB4a,GAAA,GAGWne,EAAMvB,OAAOjI,GAHxB,CAIQiI,OAAS0E,EAAMG,OAAO3K,YAK5Bkc,EAAY,eAAA3b,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO+Q,EAAciB,GAArB,IAAA9U,EAAA,OAAA4C,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,WAAX0Q,GACCkK,IACiC,KAA9BvU,EAAMvB,OAAO6M,GAAS5S,KACrBgJ,EAASoT,GAAS9U,EAAMvB,OAAO,WAAWuB,EAAM1F,UAGnB,KAA9B0F,EAAMvB,OAAO6M,GAAS5S,KACjBlC,EAAIwJ,EAAMvB,OAEduB,EAAM2U,UAANwJ,GAAA,GACOne,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK+S,EAFL6S,GAAA,GAGWne,EAAMvB,OAAO6M,GAHxB,CAIQ5S,IAAM,QAIdlC,EAAE8U,GAAS5S,IAAM,GACjBgJ,EAASoT,GAASte,EAAE,WAAWwJ,EAAM1F,UAErCga,EAAU6J,GAAA,GACH9J,EADE9b,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,QAxBP,wBAAA7R,EAAAO,SAAAV,MAAH,gBAAAR,EAAAmB,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,GA8BZ+b,EAAQ,SAACC,GAEX,GAAa,cAAVA,EAAEtc,KAC4B,IAA1Bsc,EAAE1R,OAAO3K,MAAMsc,OAAa,CAG3B,IAAIze,EAAQwJ,EAAMvB,OAClBjI,EAAEwe,EAAE1R,OAAOC,MAAM7K,IAAM,GACvBgJ,EAASoT,GAASte,EAAE,WAAWwJ,EAAM1F,SAIhC,UAAV0a,EAAEtc,KACqB,KAAnBsc,EAAE1R,OAAO3K,QACR4b,IACAP,EAAIgB,EAAE1R,OAAOC,MAAM2R,QAAQC,OAC3BzT,EAASoT,GAAS9U,EAAMvB,OAAO,WAAWuB,EAAM1F,WAK5D,OACIyG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,gBACP5K,MAASqH,EAAMvB,OAAOoJ,cAAcnP,IACpC2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,gBAAgB,SACrDkS,UAAaN,EACbO,SAAYtB,EAAInM,gBAGpB9G,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOxM,eAAgB,qBAAkBxQ,EAAWkP,KAAMyI,QAAQqF,EAAOxM,eAAgBoH,SAAUoF,EAAOxM,eAClJ9G,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOoJ,cAAcpJ,OAClC4G,SAAUuP,EACVrR,KAAO,iBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,mBACtC,KAAnC7U,EAAMvB,OAAOoJ,cAAcnP,IAAY,QAAU,SAEtDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,kBAAkBzP,SAA6C,KAAnCpF,EAAMvB,OAAOoJ,cAAcnP,KAAxI,aAQZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAEhCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,gBACP5K,MAASqH,EAAMvB,OAAO+J,cAAc9P,IACpC2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,gBAAgB,SACrDkS,UAAaN,EACbO,SAAYtB,EAAIxL,gBAGpBzH,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO7L,eAAgB,qBAAkBnR,EAAWkP,KAAMyI,QAAQqF,EAAO7L,eAAgByG,SAAUoF,EAAO7L,eAClJzH,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO+J,cAAc/J,OAClC4G,SAAUuP,EACVrR,KAAO,iBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,mBACtC,KAAnC7U,EAAMvB,OAAO+J,cAAc9P,IAAY,QAAU,SAEtDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,kBAAkBzP,SAA6C,KAAnCpF,EAAMvB,OAAO+J,cAAc9P,KAAxI,aAOZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,kBACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,UACP5K,MAASqH,EAAMvB,OAAOiK,QAAQhQ,IAC9B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,UAAU,SAC/CkS,UAAaN,EACbO,SAAYtB,EAAItL,UAGpB3H,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO3L,SAAU,qBAAkBrR,EAAWkP,KAAMyI,QAAQqF,EAAO3L,SAAUuG,SAAUoF,EAAO3L,SACtI3H,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOiK,QAAQjK,OAC5B4G,SAAUuP,EACVrR,KAAO,WAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,aAC5C,KAA7B7U,EAAMvB,OAAOiK,QAAQhQ,IAAY,QAAU,SAEhDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,YAAYzP,SAAuC,KAA7BpF,EAAMvB,OAAOiK,QAAQhQ,KAA5H,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,kBACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,iBACP5K,MAASqH,EAAMvB,OAAOkK,eAAejQ,IACrC2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,iBAAiB,SACtDkS,UAAaN,EACbO,SAAYtB,EAAIrL,iBAGpB5H,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO1L,gBAAiB,qBAAkBtR,EAAWkP,KAAMyI,QAAQqF,EAAO1L,gBAAiBsG,SAAUoF,EAAO1L,gBACpJ5H,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOkK,eAAelK,OACnC4G,SAAUuP,EACVrR,KAAO,kBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,oBACrC,KAApC7U,EAAMvB,OAAOkK,eAAejQ,IAAY,QAAU,SAEvDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,mBAAmBzP,SAA8C,KAApCpF,EAAMvB,OAAOkK,eAAejQ,KAA1I,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,kBACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,iBACP5K,MAASqH,EAAMvB,OAAOmK,eAAelQ,IACrC2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,iBAAiB,SACtDkS,UAAaN,EACbO,SAAYtB,EAAIpL,iBAGpB7H,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOzL,gBAAiB,qBAAkBvR,EAAWkP,KAAMyI,QAAQqF,EAAOzL,gBAAiBqG,SAAUoF,EAAOzL,gBACpJ7H,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOmK,eAAenK,OACnC4G,SAAUuP,EACVrR,KAAO,kBAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,oBACrC,KAApC7U,EAAMvB,OAAOmK,eAAelQ,IAAY,QAAU,SAEvDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,mBAAmBzP,SAA8C,KAApCpF,EAAMvB,OAAOmK,eAAelQ,KAA1I,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,QACP5K,MAASqH,EAAMvB,OAAOoK,MAAMnQ,IAC5B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,QAAQ,SAC7CkS,UAAaN,EACbO,SAAYtB,EAAInL,QAGpB9H,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOxL,OAAQ,qBAAkBxR,EAAWkP,KAAMyI,QAAQqF,EAAOxL,OAAQoG,SAAUoF,EAAOxL,OAClI9H,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOoK,MAAMpK,OAC1B4G,SAAUuP,EACVrR,KAAO,SAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,WAC9C,KAA3B7U,EAAMvB,OAAOoK,MAAMnQ,IAAY,QAAU,SAE9CqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,UAAUzP,SAAqC,KAA3BpF,EAAMvB,OAAOoK,MAAMnQ,KAAxH,eCnKTmf,GAnMF,SAAC7X,GACV,OACIe,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAMsZ,SACZnS,QAAU,kBAAKnH,EAAM2Z,aAAY,IACjCvS,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,oBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,QAAQzF,GAAG,oBACrFqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcvW,cAC7BzC,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBlE,cAAcjO,MAC7C2L,WAAcvF,EAAM+L,gBAAgBlE,cAAc9E,aAKlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc5V,cAC7BpD,SAAYpF,EAAM0C,OAClB9I,MAASoG,EAAM+L,gBAAgBvD,cAAc5O,MAC7C2L,WAAcvF,EAAM+L,gBAAgBvD,cAAczF,QAClDuC,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc1V,QAC7BtD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBrD,QAAQ9O,MACvC2L,WAAcvF,EAAM+L,gBAAgBrD,QAAQ3F,aAK5DhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,OAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,MACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc3V,IAC7BrD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBtD,IAAI7O,MACnC2L,WAAcvF,EAAM+L,gBAAgBtD,IAAI1F,aAKxDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,kBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,iBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAczV,eAC7BvD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBpD,eAAe/O,MAC9C2L,WAAcvF,EAAM+L,gBAAgBpD,eAAe5F,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,eAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,iBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcxV,eAC7BxD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBnD,eAAehP,MAC9C2L,WAAcvF,EAAM+L,gBAAgBnD,eAAe7F,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,QACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,QACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcvV,MAC7BzD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBlD,MAAMjP,MACrC2L,WAAcvF,EAAM+L,gBAAgBlD,MAAM9F,aAK1DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAMjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,SAEIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,QAC/CwC,MAAM,UACNR,QAAQ,YACRC,SAAUpF,EAAM0C,OAChB8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAUvN,EAAM0C,OAAkB,QAAT,QAAoB2B,UAAU,+BAGrFtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKpJ,EAAM2Z,aAAY,IAAQhU,MAAM,YAAYR,QAAQ,aACtEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,aCKD6N,GAhMF,SAACna,GACV,OACIe,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM6L,UACZ1E,QAAU,kBAAKnH,EAAM8L,cAAa,IAClC1E,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,yBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,SAASzF,GAAG,oBACtFqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcvW,cAC7BzC,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBlE,cAAcjO,MAC7C2L,WAAcvF,EAAM+L,gBAAgBlE,cAAc9E,aAKlEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,iBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,gBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc5V,cAC7BpD,SAAYpF,EAAM0C,OAClB9I,MAASoG,EAAM+L,gBAAgBvD,cAAc5O,MAC7C2L,WAAcvF,EAAM+L,gBAAgBvD,cAAczF,QAClDuC,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc1V,QAC7BtD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBrD,QAAQ9O,MACvC2L,WAAcvF,EAAM+L,gBAAgBrD,QAAQ3F,aAK5DhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,OAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,MACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAc3V,IAC7BrD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBtD,IAAI7O,MACnC2L,WAAcvF,EAAM+L,gBAAgBtD,IAAI1F,aAKxDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,kBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,iBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAczV,eAC7BvD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBpD,eAAe/O,MAC9C2L,WAAcvF,EAAM+L,gBAAgBpD,eAAe5F,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,kBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,iBACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcxV,eAC7BxD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBnD,eAAehP,MAC9C2L,WAAcvF,EAAM+L,gBAAgBnD,eAAe7F,aAKnEhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,QACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,QACP8B,SAAYrF,EAAMuM,YAClB5T,MAASqH,EAAMoe,cAAcvV,MAC7BzD,SAAYpF,EAAM0C,OAClB4C,UAAQ,EACR1L,MAASoG,EAAM+L,gBAAgBlD,MAAMjP,MACrC2L,WAAcvF,EAAM+L,gBAAgBlD,MAAM9F,aAK1DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAenD,EAAMwD,WAAWL,EAAM,SAC/CwC,MAAM,UACNR,QAAQ,YACRC,SAAUpF,EAAM0C,OAChB8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAUvN,EAAM0C,OAAkB,QAAT,QAAoB2B,UAAU,+BAErFtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKpJ,EAAM8L,cAAa,IAAQnG,MAAM,YAAYR,QAAQ,aACvEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,aC/GDwN,GA7EF,SAAC9Z,GAEV,OAAGA,EAAMP,SAEDsB,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM+Z,UACZ5S,QAAU,kBAAKnH,EAAMga,cAAa,IAClC5S,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,oBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,uBACTtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,sBACbtD,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,iBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAASoI,gBAEtE9G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,iBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAAS+I,gBAEtEzH,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,OACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAASgJ,MAEtE1H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,WACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,OAAOa,MAAOrL,EAAMP,SAASiJ,SAAU1I,EAAMP,SAASiJ,UAErG3H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,kBACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAASkJ,iBAEtE5H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,eACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAASmJ,iBAEtE7H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,SACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,gBAAgBmG,MAAM,QAAQxK,EAAMP,SAASoJ,YAO1F9H,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAEI,IAArBrE,EAAMhI,KAAKiR,MACPlI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAASpJ,EAAMka,cACfvU,MAAM,UACNR,QAAQ,aAERpE,EAAAvK,EAAAwK,cAACqO,GAAA,EAAD,MALJ,QAQF,KAGNtO,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKpJ,EAAMga,cAAa,IAAQrU,MAAM,YAAYR,QAAQ,aACvEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,WAQL,mOC3Ef,IAmIeiO,GAnIA,SAACva,GAEZ,IAAMiW,EAAc,WAChBjW,EAAMwa,iWAAN6D,CAAA,GACOre,EAAM0a,OADb,CAEInU,MAAU,MAKZoU,EAAU,CACZrN,SAAW,OACXsN,UAAY,QACZxW,SAAW,QASf,OAAGpE,EAAM0a,OAAOnU,KAGRxF,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM0a,OAAOnU,KACnBY,QAAS8O,EACT7O,kBAAgB,yBAChBkP,sBAAsB,GAEtBvV,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,UACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,0BACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAkB,YACjCtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,WACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,eACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,aAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE8C,IAAtCzH,EAAM0a,OAAOG,OAAO3N,OAAO+H,OACvBjV,EAAM0a,OAAOG,OAAO3N,OAAOhD,IAAI,SAACvR,EAAUD,GAAX,OAC3BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUyC,OAAK,EAAEzR,IAAKA,GAClBqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK8N,eACzD9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKyO,eACzDzH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK2O,SACzD3H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK4O,gBACzD5H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK6O,gBACzD7H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK8O,MAAzD,KACA9H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,QAAQ7R,EAAMoK,QAAlD,QAIRhC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YAMxBzJ,EAAAvK,EAAAwK,cAAA,WACAD,EAAAvK,EAAAwK,cAAA,mCACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAgB,YAC/BtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,WACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,eACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,WAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE+C,IAAvCzH,EAAM0a,OAAOG,OAAOC,QAAQ7F,OACxBjV,EAAM0a,OAAOG,OAAOC,QAAQ5Q,IAAI,SAACvR,EAAUD,GAAX,OAC5BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKA,EAAKyR,OAAK,GACrBpJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMkP,eACpD9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAM6P,eACpDzH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAM+P,SACpD3H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMgQ,gBACpD5H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMiQ,gBACpD7H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMkQ,UAI5D9H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,aAO5BzJ,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS6M,EAAatQ,MAAM,WAApC,WAOL,6jBCtHf,IA8belD,eA9bG,SAACzC,GAEf,IAuDId,EAvDEof,EAAoB,CACtBzW,cAAgB,CAACjO,OAAO,EAAOmJ,QAAU,IACzCyF,cAAgB,CAAC5O,OAAO,EAAOmJ,QAAU,IACzC2F,QAAgB,CAAC9O,OAAO,EAAOmJ,QAAU,IACzC0F,IAAgB,CAAC7O,OAAO,EAAOmJ,QAAU,IACzC4F,eAAgB,CAAC/O,OAAO,EAAOmJ,QAAU,IACzC6F,eAAgB,CAAChP,OAAO,EAAOmJ,QAAU,IACzC8F,MAAgB,CAACjP,OAAO,EAAOmJ,QAAU,KAThB9C,EAYDC,IAAMC,SAAS,CACvC0H,cAAsB,CAACpJ,OAAO,MAAM/F,IAAI,IACxC8P,cAAsB,CAAC/J,OAAO,MAAM/F,IAAI,IACxCgQ,QAAsB,CAACjK,OAAO,MAAM/F,IAAI,IACxCiQ,eAAsB,CAAClK,OAAO,MAAM/F,IAAI,IACxCkQ,eAAsB,CAACnK,OAAO,MAAM/F,IAAI,IACxCmQ,MAAsB,CAACpK,OAAO,MAAM/F,IAAI,MAlBf0H,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAYtBxB,EAZsB2B,EAAA,GAYduU,EAZcvU,EAAA,GAqBvBme,EAAe,CACjB7gB,GAAgB,GAChBmK,cAAgB,GAChBW,cAAgB,GAChBE,QAAgB,GAChBD,IAAgB,GAChBE,eAAgB,GAChBC,eAAgB,GAChBC,MAAgB,IA7BSrI,EA+BDN,IAAMC,SAAS,CAAC5C,KAAK,EAAEC,SAAS,KA/B/BiD,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GA+BtBlG,EA/BsBmG,EAAA,GA+Bdwa,EA/Bcxa,EAAA,GAAAqC,EAkCK5C,IAAMC,UAAS,GAlCpB6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAkCtBiX,EAlCsB/W,EAAA,GAkCXgX,EAlCWhX,EAAA,GAAAqD,EAmCKnG,IAAMC,UAAS,GAnCpBmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAmCtBwF,EAnCsBvF,EAAA,GAmCXwF,EAnCWxF,EAAA,GAAAG,EAoCKvG,IAAMC,UAAS,GApCpBuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAoCtB6S,EApCsB5S,EAAA,GAoCZiT,EApCYjT,EAAA,GAAAG,EAqCK3G,IAAMC,UAAS,GArCpB2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GAqCtBnE,EArCsBoE,EAAA,GAqCfnE,EArCemE,EAAA,GAAAqU,EAsCKjb,IAAMC,WAtCXkb,EAAA9iB,OAAA8H,EAAA,EAAA9H,CAAA4iB,EAAA,GAsCtB1b,EAtCsB4b,EAAA,GAsCZmD,EAtCYnD,EAAA,GAAAC,EAuCApb,IAAMC,SAAS,CACxCib,WAAc,EACdP,OAAc,GACdtU,MAAc,IA1CWgV,EAAAhjB,OAAA8H,EAAA,EAAA9H,CAAA+iB,EAAA,GAuCrBZ,EAvCqBa,EAAA,GAuCdf,EAvCce,EAAA,GAAAC,EA6Catb,IAAMC,SAASoe,GA7C5B9C,EAAAljB,OAAA8H,EAAA,EAAA9H,CAAAijB,EAAA,GA6CtB4C,EA7CsB3C,EAAA,GA6CPgD,EA7COhD,EAAA,GAAAG,EA8CiB1b,IAAMC,SAASme,GA9ChCzC,EAAAtjB,OAAA8H,EAAA,EAAA9H,CAAAqjB,EAAA,GA8CtB7P,EA9CsB8P,EAAA,GA8CL7P,GA9CK6P,EAAA,GAAA5P,GA+CcC,yBAAnCC,GA/CqBF,GA+CrBE,gBAAiBC,GA/CIH,GA+CJG,cAGnBqN,GAAiB5T,YAAc,SAACxE,GAAD,OAAeA,EAAM7B,UAAUzF,OAC9D/B,GAAQ6N,YAAa,SAACxE,GAAD,OAAeA,EAAMI,YAAY1H,OAItD2H,GAAWd,cAKjBV,IAAMW,UAAU,WACZa,GAASG,EAAgB,CAACwJ,MAAQ,YAAaC,QAAQ,eACvD5J,GAASoT,GAASrW,EAAO,WAAWnE,KAMtC,CAAC0F,IAGH,IAmBMsc,GAAsB,SAACnZ,GACtBA,GACCwJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,UAExDH,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,aAK1DT,GAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,GAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,SAuB/B8P,GAAW,eAAAljB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO4F,GAAP,IAAArF,EAAA,OAAAT,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEhB6gB,EAAUkE,GAAA,GACHhE,EADE,CAELU,WAAY,KAJA3hB,EAAAE,KAAA,EAOKrC,EAASkI,UAAUD,QAAQL,GAPhC,OAOZrF,EAPYJ,EAAA0D,KAAA1D,EAAAqI,GASTjI,EAASnC,OATA+B,EAAAE,KAUP,MAVOF,EAAAqI,GAAA,EAkBP,MAlBOrI,EAAAqI,GAAA,0BAWRqK,GAAgB,gCAAgC,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxEiQ,IAAoB,GACpB9B,EAAUkE,GAAA,GACHhE,EADE,CAELU,WAAY,KAfR3hB,EAAAK,OAAA,yBAoBRqS,GAAgB,gCAAgC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC1EiQ,IAAoB,GACpB5a,GAASoT,GAASrW,EAAO,WAAWnE,IAEpCkgB,EAAU,CACNjU,MAAY,EACZ6U,WAAY,EACZP,OAAYhhB,EAASE,OA3BjBN,EAAAK,OAAA,yBAgCRqS,GAAgB,yCAAyC,CAAChH,QAAQ,QAAQkF,OAAOgC,KACjFiQ,IAAoB,GAEpB9B,EAAUkE,GAAA,GACHhE,EADE,CAELU,WAAY,KArCR3hB,EAAAK,OAAA,mCAAAL,EAAAO,SAAAV,MAAH,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,GAqEXyT,GAAa,WACfT,GAAmBsS,IAqBjB/R,GAAc,SAACpJ,GACjBsb,EAAiBC,GAAA,GACVN,EADS7lB,OAAA8K,EAAA,EAAA9K,CAAA,GAEX4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAoCrC6K,GAAU,eAAApG,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAOgJ,EAAUkH,GAAjB,OAAAjR,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OACf8S,KACAtJ,EAAMuJ,UACNvJ,EAAMO,iBACNiJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,WACxDnK,GAAU,GANKtI,EAAAyH,GAQRuI,EARQhQ,EAAAV,KASN,SATMU,EAAAyH,GAAA,EAsCN,QAtCMzH,EAAAyH,GAAA,0BAAAzH,EAAAV,KAAA,GAWDrC,EAASkI,UAAUpI,OAAOgnB,GAAe3hB,KAC3C,SAAC5C,GACGiM,QAAQC,IAAIuY,GACTzkB,EAASpC,eACR0U,GAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFP,GAAa,IAEU,MAApBjS,EAASnC,QACRyU,GAAgB,mCAAmC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC7EP,GAAa,GACbpK,GAASid,EAAerkB,MAIxB6R,GAAgB,gBAAgB,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxDY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,WACJyP,GAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,KACpFP,GAAa,KAhCV,eAAAzR,EAAAP,OAAA,2BAAAO,EAAAV,KAAA,GAwCDrC,EAASkI,UAAUvB,IAAImgB,GAAe3hB,KACxC,SAAC5C,GACMA,EAASpC,eACR0U,GAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFsN,GAAY,IAEW,MAApB9f,EAASnC,QACRyU,GAAgB,iCAAiC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC3EsN,GAAY,GACZjY,GAASid,EAAerkB,MAIxB6R,GAAgB,0BAA0B,CAAChH,QAAQ,QAAQkF,OAAOgC,KAClEY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,SAACsY,GACL7I,GAAgB,8CAA+C6I,EAAG,CAAC7P,QAAQ,QAAQkF,OAAOgC,KAC1FsN,GAAY,KA5DT,eAAAtf,EAAAP,OAAA,2BAgEf6I,GAAU,GACVgK,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,QAlEzCzS,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAAF,EAAAW,GAAA,OAAAwC,EAAArE,MAAA/B,KAAAgC,YAAA,GAsEViU,GAAmB,SAACpT,GACtB,IAAIsT,EAAamR,EACjBzkB,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAEtDiJ,GAAmBmB,IAGvB,OACIpM,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC4d,GAAD,CACInf,SAAqBA,EACrBsa,UAAqBA,EACrB/hB,KAAqBA,GACrBkiB,cA/GU,WAClBzN,KAGAgS,EAAiB,CACb/gB,GAAgB+B,EAAS/B,GACzBmK,cAAgBpI,EAASoI,cACzBW,cAAgB/I,EAAS+I,cACzBE,QAAgBjJ,EAASiJ,QACzBD,IAAgBhJ,EAASgJ,IACzBE,eAAgBlJ,EAASkJ,eACzBC,eAAgBnJ,EAASmJ,eACzBC,MAAgBpJ,EAASoJ,QAG7BmR,GAAa,GACblO,GAAa,IAgGLkO,aAAqBA,IAEzBjZ,EAAAvK,EAAAwK,cAAC6d,GAAD,CACIhT,UAAqBA,EACrBU,YAAqBA,GACrB6R,cAAqBA,EACrB1b,OAAqBA,EACrBqJ,gBAAqBA,EACrBD,aAAqBA,EACrBtI,WAAqBA,KAEzBzC,EAAAvK,EAAAwK,cAAC8d,GAAD,CACIxF,SAAqBA,EACrB/M,YAAqBA,GACrB6R,cAAqBA,EACrB1b,OAAqBA,EACrBqJ,gBAAqBA,EACrB4N,YAAqBA,EACrBnW,WAAqBA,KAEzBzC,EAAAvK,EAAAwK,cAAC+d,GAAD,CACIrE,OAAeA,EACfF,UAAeA,IAjMpBE,EAAOU,UAEFra,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACI9C,SAAS,KACTmC,KAAMmU,EAAOU,UACb9E,sBAAoB,EACpBjS,UAAU,wBAEVtD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,WACID,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAwBiF,MAAO,CAAC+D,UAAU,WACrDtM,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,OAEJ7E,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAQT,KAiLPtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,qBACbtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,eAAemD,KAAK,SACjCzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,KACIlJ,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,iBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,WACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,kBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,eACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,WAIRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAACge,GAAD,CAAQvgB,OAAQA,EAAQkW,UAAWA,EAAWra,OAAQA,IAElDmf,GACIA,GAAc1f,KAAKA,KAAKmQ,IAAI,SAACxR,EAAQgF,GAAT,OACxBqD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgF,EAAKyM,OAAO,EAAMb,MAAO,CAACwD,OAAO,WAAYgQ,cAAe,kBAjKvG0B,EAiK2H9lB,QAhK3HshB,GAAa,KAiKmBjZ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAImP,eAAgBnP,EAAImP,eACvD9G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAI8P,eAAgB9P,EAAI8P,eACvDzH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIgQ,SAAUhQ,EAAIgQ,SACjD3H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIiQ,gBAAiBjQ,EAAIiQ,gBACxD5H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIkQ,gBAAiBlQ,EAAIkQ,gBACxD7H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAImQ,OAAQnQ,EAAImQ,UAjU7D,WAIlB,IAHA,IAAIrS,EAAQ,GAEN+T,EAAYxJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAAQzJ,EAAAvK,EAAAwK,cAACyJ,GAAA,EAAD,CAAUtF,QAAQ,OAAO6I,MAAO,IAAKgP,OAAQ,MAChFtS,EAAI,EAAEA,EAAI,GAAGA,IACjBlU,EAAE0N,KACEnD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgS,GACVH,EACAA,EACAA,EACAA,EACAA,EACAA,IAIb,OAAO/T,EAoTiBmU,IAGZ5J,EAAAvK,EAAAwK,cAACic,GAAA,EAAD,KACIlc,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUrD,UAAU,wBAChBtD,EAAAvK,EAAAwK,cAAA,UAEuB,IAAfhJ,GAAKiR,MACLlI,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAU,kBA5JlDqV,EAAiBF,GACjB9R,UACAkN,GAAY,IA0J2DxU,QAAQ,YAAYQ,MAAM,UAAUtB,UAAU,mBAArF,WAIAtD,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,OAAOoO,QAAM,EAACxM,KAAK,cAAc6Z,OAAO,QAAQpJ,IAAK,SAAAiE,GAAK,OAAI/Y,EAAK+Y,GAAQ5S,SA7SxG,WAGf,GAFAiX,IAAoB,GAEK,IAAtBpd,EAAKme,MAAMpI,OAAa,CACvB,IAAMqI,EAAepe,EAAKme,MAAM,GAC5BE,EAAWD,EAAa/Z,KAAKia,MAAM,KAAKC,MAE5C,GAAmB,QAAbF,GAAmC,SAAbA,EAGxB,OAFApR,GAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,UACpFiQ,IAAoB,GAGpBF,GAAYkB,OAkSYvc,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACIC,MAAM,UACNR,QAAQ,YACRiE,QAAS,SAACjG,GACNA,EAAMuJ,UACNxN,EAAKwe,SAGTrZ,UAAU,oBAEVtD,EAAAvK,EAAAwK,cAAC2c,GAAA,EAAD,MAVJ,qBAcN,MAIN5c,EAAAvK,EAAAwK,cAAC4J,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAG,GAAG,GAAG,KAC9B+S,QAAS,EACT9S,MAAO2O,GAAgBA,GAAc1f,KAAK2P,KAAKC,MAAQ,GACvDzD,YAAa5L,EAAOkD,SACpBD,KAAMkc,GAAgBnf,EAAOiD,KAAK,EAAI,EACtC2N,aA1OH,SAAC/H,EAA8DgI,GAEpF,IAAI8T,EAAQ3kB,EACZ2kB,EAAM1hB,KAAO4N,EAAQ,EACrB8P,EAAUgE,GAEVvd,GAASoT,GAASrW,EAAO,WAAWwgB,KAqOZ7T,oBAlOI,SAACjI,GAC7B,IAEI2a,EAAQ,CAACvgB,KAAK,EAAEC,SAFJ2F,EAAMG,OAAO3K,OAI7BsiB,EAAU6C,GACVpc,GAASoT,GAASrW,EAAO,WAAWqf,KA6NZC,iBAAkBC,KAClB3Z,UAAU,qlBC9b1C,IAoWehC,GApWA,SAACrC,GAIZ,IAAM0B,EAAWd,cAMXoT,EAAU,CACZnX,SAAkBqD,IAAM+T,OAAO,MAC/B1Q,KAAkBrD,IAAM+T,OAAO,MAC/BjL,QAAkB9I,IAAM+T,OAAO,MAC/BpL,MAAkB3I,IAAM+T,OAAO,MAC/BhL,MAAkB/I,IAAM+T,OAAO,MAC/BjQ,UAAkB9D,IAAM+T,OAAO,OAhBTE,EAmBChU,mBAAS,CAChCtD,SAAkB,KAClB0G,KAAkB,KAClByF,QAAkB,KAClBH,MAAkB,KAClBI,MAAkB,KAClBjF,UAAkB,OAzBIoQ,EAAA7b,OAAA8H,EAAA,EAAA9H,CAAA4b,EAAA,GAmBnBE,EAnBmBD,EAAA,GAmBZE,EAnBYF,EAAA,GA4BpBG,EAAQ,WAEV,IAAI/d,EAAI6d,EACR7d,EAAEqG,SAAkB,KACpBrG,EAAE+M,KAAkB,KACpB/M,EAAEwS,QAAkB,KACpBxS,EAAEqS,MAAkB,KACpBrS,EAAEyS,MAAkB,KACpBzS,EAAEwN,UAAkB,KACpBsQ,EAAU9d,IAGRge,EAAa,SAACrR,EAAUmI,EAAgBjB,GAE1CkK,IAGID,EAAU4K,GAAA,GACH7K,EAFG,SAAXhK,EACU9R,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAWnI,EAAMuQ,eAGbnb,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,SAKlBoJ,EAAQ,SAACvR,GACX,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANuK,GAAA,GACOlf,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlB2b,GAAA,GAGWlf,EAAMvB,OAAOjI,GAHxB,CAIQkC,IAAMyK,EAAMG,OAAO3K,YAKzBic,EAAiB,SAACzR,GACpB,IAAI3M,EAAY2M,EAAMG,OAAOC,KAC7BvD,EAAM2U,UAANuK,GAAA,GACOlf,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAFlB2b,GAAA,GAGWlf,EAAMvB,OAAOjI,GAHxB,CAIQiI,OAAS0E,EAAMG,OAAO3K,YAK5Bkc,EAAY,eAAA3b,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO+Q,EAAciB,GAArB,IAAA9U,EAAA,OAAA4C,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,WAAX0Q,GACCkK,IACiC,KAA9BvU,EAAMvB,OAAO6M,GAAS5S,KACrBgJ,EAASoT,GAAS9U,EAAMvB,OAAO,OAAOuB,EAAM1F,UAGf,KAA9B0F,EAAMvB,OAAO6M,GAAS5S,KACjBlC,EAAIwJ,EAAMvB,OAEduB,EAAM2U,UAANuK,GAAA,GACOlf,EAAMvB,OADblG,OAAA8K,EAAA,EAAA9K,CAAA,GAEK+S,EAFL4T,GAAA,GAGWlf,EAAMvB,OAAO6M,GAHxB,CAIQ5S,IAAM,QAIdlC,EAAE8U,GAAS5S,IAAM,GACjBgJ,EAASoT,GAASte,EAAE,OAAOwJ,EAAM1F,UAEjCga,EAAU4K,GAAA,GACH7K,EADE9b,OAAA8K,EAAA,EAAA9K,CAAA,GAEJ+S,EAAW,QAxBP,wBAAA7R,EAAAO,SAAAV,MAAH,gBAAAR,EAAAmB,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,GA8BZ+b,EAAQ,SAACC,GAEX,GAAa,cAAVA,EAAEtc,KAC4B,IAA1Bsc,EAAE1R,OAAO3K,MAAMsc,OAAa,CAI3B,IAAIze,EAAQwJ,EAAMvB,OAClBjI,EAAEwe,EAAE1R,OAAOC,MAAM7K,IAAM,GACvBgJ,EAASoT,GAASte,EAAE,OAAOwJ,EAAM1F,SAI5B,UAAV0a,EAAEtc,KACqB,KAAnBsc,EAAE1R,OAAO3K,QACR4b,IACAP,EAAIgB,EAAE1R,OAAOC,MAAM2R,QAAQC,OAC3BzT,EAASoT,GAAS9U,EAAMvB,OAAO,OAAOuB,EAAM1F,WAMxD,OACIyG,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,WACP5K,MAASqH,EAAMvB,OAAO5B,SAASnE,IAC/B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,WAAW,SAChDkS,UAAaN,EACbO,SAAatB,EAAInX,WAGrBkE,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOxX,UAAW,qBAAkBxF,EAAWkP,KAAMyI,QAAQqF,EAAOxX,UAAWoS,SAAUoF,EAAOxX,UACxIkE,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO5B,SAAS4B,OAC7B4G,SAAUuP,EACVrR,KAAO,YAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,cAC3C,KAA9B7U,EAAMvB,OAAO5B,SAASnE,IAAY,QAAU,SAEjDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,aAAazP,SAAwC,KAA9BpF,EAAMvB,OAAO5B,SAASnE,KAA9H,aAQZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAEhCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,kBACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,OACP5K,MAASqH,EAAMvB,OAAO8E,KAAK7K,IAC3B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,OAAO,SAC5CkS,UAAaN,EACbO,SAAYtB,EAAIzQ,OAGpBxC,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAO9Q,MAAO,qBAAkBlM,EAAWkP,KAAMyI,QAAQqF,EAAO9Q,MAAO0L,SAAUoF,EAAO9Q,MAChIxC,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAO8E,KAAK9E,OACzB4G,SAAUuP,EACVrR,KAAO,QAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,UAC/C,KAA1B7U,EAAMvB,OAAO8E,KAAK7K,IAAY,QAAU,SAE7CqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,SAASzP,SAAoC,KAA1BpF,EAAMvB,OAAO8E,KAAK7K,KAAtH,aAOZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,MACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,UACP5K,MAASqH,EAAMvB,OAAOuK,QAAQtQ,IAC9B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,UAAU,SAC/CkS,UAAaN,EACbO,SAAYtB,EAAIhL,UAGpBjI,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOrL,SAAU,qBAAkB3R,EAAWkP,KAAMyI,QAAQqF,EAAOrL,SAAUiG,SAAUoF,EAAOrL,SACtIjI,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOuK,QAAQvK,OAC5B4G,SAAUuP,EACVrR,KAAO,WAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,aAC5C,KAA7B7U,EAAMvB,OAAOuK,QAAQtQ,IAAY,QAAU,SAEhDqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,YAAYzP,SAA0C,KAA7BpF,EAAMvB,OAAOuK,QAAQtQ,KAA/H,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAASnG,UAAU,UAChCtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACH2G,UAAU,QACVY,aAAa,kBACbC,OAAO,SACPC,QAAQ,WACR5B,KAAO,QACP5K,MAASqH,EAAMvB,OAAOoK,MAAMnQ,IAC5B2M,SAAYqP,EACZU,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,QAAQ,SAC7CkS,UAAaN,EACbO,SAAYtB,EAAInL,QAGpB9H,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOxL,OAAQ,qBAAkBxR,EAAWkP,KAAMyI,QAAQqF,EAAOxL,OAAQoG,SAAUoF,EAAOxL,OAClI9H,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWd,UAAU,YACtCtD,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOoK,MAAMpK,OAC1B4G,SAAUuP,EACVrR,KAAO,SAEPxC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAMgd,UAAQ,GAA9B,gBACA5U,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,QAAhB,mBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,KAAhB,YACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,OAAhB,qBACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAM,MAAhB,eAGRoI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIyL,EAAa,QAAQ,WAC9C,KAA3B7U,EAAMvB,OAAOoK,MAAMnQ,IAAY,QAAU,SAE9CqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,UAAUzP,SAAqC,KAA3BpF,EAAMvB,OAAOoK,MAAMnQ,KAAxH,aAMZqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UACbzJ,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWmE,MAAO,CAAC0E,MAAM,SAC1CjN,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOwK,MAAMvQ,IAC1B2M,SAAUqP,EACVnR,KAAK,QACL6R,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,QAAQ,UAE7CpC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,OACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,SACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,WACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,YAIRoI,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOpL,OAAQ,qBAAkB5R,EAAWkP,KAAMyI,QAAQqF,EAAOpL,OAAQgG,SAAUoF,EAAOpL,OAClIlI,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIkL,EAAU4K,GAAA,GAAI7K,EAAL,CAAYpL,MAAM,UAApF,SAGAlI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,WAAjF,aAOZ9T,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UACbzJ,EAAAvK,EAAAwK,cAACwU,GAAA,EAAD,CAAarQ,QAAQ,WAAWmE,MAAO,CAAC0E,MAAM,SAC1CjN,EAAAvK,EAAAwK,cAACyU,GAAA,EAAD,CACI9c,MAAOqH,EAAMvB,OAAOuF,UAAUtL,IAC9B2M,SAAUqP,EACVnR,KAAK,YACL6R,QAAW,SAACjS,GAAD,OAASqR,EAAWrR,EAAM,YAAY,UAEjDpC,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,OACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,OACAoI,EAAAvK,EAAAwK,cAAC0U,GAAA,EAAD,CAAU/c,MAAO,GAAjB,QAKRoI,EAAAvK,EAAAwK,cAACuU,GAAA,EAAD,CAAQlR,UAAU,cAAc3G,GAAIsR,QAAQqF,EAAOrQ,WAAY,qBAAkB3M,EAAWkP,KAAMyI,QAAQqF,EAAOrQ,WAAYiL,SAAUoF,EAAOrQ,WAC1IjD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,gBACbtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,UAAUyD,QAAS,kBAAIkL,EAAU4K,GAAA,GAAI7K,EAAL,CAAYrQ,UAAU,UAAxF,SAGAjD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQP,QAAQ,YAAYQ,MAAM,YAAYyD,QAAS,kBAAIyL,EAAa,SAAS,eAAjF,skBCpVxB,IAu2BepS,eAv2BD,SAACzC,GAAa,IAAAC,EAEKC,IAAMC,SAAS,CAAC5C,KAAK,EAAEC,SAAS,KAFrC4C,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAEhB3F,EAFgB8F,EAAA,GAER6a,EAFQ7a,EAAA,GAAAI,EAGIN,IAAMC,SAAS,CACvCtD,SAAkB,CAAC4B,OAAO,MAAM/F,IAAI,IACpC6K,KAAkB,CAAC9E,OAAO,MAAM/F,IAAI,IACpCsQ,QAAkB,CAACvK,OAAO,MAAM/F,IAAI,IACpCmQ,MAAkB,CAACpK,OAAO,MAAM/F,IAAI,IACpCuQ,MAAkB,CAACxK,OAAO,MAAM/F,IAAI,GACpCsL,UAAkB,CAACvF,OAAO,MAAM/F,IAAI,KAThB+H,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAGjB/B,EAHiBgC,EAAA,GAGTkU,EAHSlU,EAAA,GAYlB0e,EAAgB,CAClBzhB,GAAsB,GACtBoL,WAAsB,GACtBC,UAAsB,GACtBlM,SAAsB,GACtBmM,QAAsB,GACtBH,MAAsB,GACtB7E,UAAsB,EACtBiF,MAAsB,EACtBnM,SAAsB,GACtB4O,iBAAsB,IAGpBD,EAAiB,CACnB3C,WAAsB,CAAClP,OAAO,EAAOmJ,QAAU,IAC/CgG,UAAsB,CAACnP,OAAO,EAAOmJ,QAAU,IAC/ClG,SAAsB,CAACjD,OAAO,EAAOmJ,QAAU,IAC/CiG,QAAsB,CAACpP,OAAO,EAAOmJ,QAAU,IAC/C8F,MAAsB,CAACjP,OAAO,EAAOmJ,QAAU,IAC/CiB,UAAsB,CAACpK,OAAO,EAAOmJ,QAAU,IAC/CkG,MAAsB,CAACrP,OAAO,EAAOmJ,QAAU,IAC/CjG,SAAsB,CAAClD,OAAO,EAAOmJ,QAAU,IAC/C2I,iBAAsB,CAAC9R,OAAO,EAAOmJ,QAAU,KAlC3BD,EAuCU5C,IAAMC,UAAS,GAvCzB6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAuCjBiX,EAvCiB/W,EAAA,GAuCNgX,EAvCMhX,EAAA,GAAAqD,EAwCUnG,IAAMC,UAAS,GAxCzBmG,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAwCjBwF,EAxCiBvF,EAAA,GAwCNwF,EAxCMxF,EAAA,GAAAG,EAyCUvG,IAAMC,UAAS,GAzCzBuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAyCjB6S,EAzCiB5S,EAAA,GAyCPiT,EAzCOjT,EAAA,GAAAG,EA0CU3G,IAAMC,UAAS,GA1CzB2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GA0CjBnE,EA1CiBoE,EAAA,GA0CVnE,EA1CUmE,EAAA,GAAAqU,EA2CIjb,IAAMC,WA3CVkb,EAAA9iB,OAAA8H,EAAA,EAAA9H,CAAA4iB,EAAA,GA2CjBrX,EA3CiBuX,EAAA,GA2CV+D,EA3CU/D,EAAA,GAAAC,EA4CYpb,IAAMC,SAASgf,GA5C3B5D,EAAAhjB,OAAA8H,EAAA,EAAA9H,CAAA+iB,EAAA,GA4CjB3P,EA5CiB4P,EAAA,GA4CL3P,EA5CK2P,EAAA,GAAAC,EA6CsBtb,IAAMC,SAASsL,GA7CrCgQ,EAAAljB,OAAA8H,EAAA,EAAA9H,CAAAijB,EAAA,GA6CjBzP,EA7CiB0P,EAAA,GA6CAzP,EA7CAyP,EAAA,GAAAxP,EA8CmBC,yBAAnCC,EA9CgBF,EA8ChBE,gBAAiBC,EA9CDH,EA8CCG,cA9CDwP,EA+CE1b,IAAMC,SAAS,GA/CjB0b,GAAAtjB,OAAA8H,EAAA,EAAA9H,CAAAqjB,EAAA,GAkDlByD,IAlDkBxD,GAAA,GAAAA,GAAA,GAkDJhW,YAAc,SAACxE,GAAD,OAAeA,EAAMa,MAAMnI,QAEvD2H,GAAWd,cAEjBV,IAAMW,UAAU,WACZa,GAASG,EAAgB,CAACwJ,MAAQ,QAAQC,QAAQ,WAClD5J,GAASoT,GAASrW,EAAO,OAAOnE,KAKlC,CAAC0F,IAIH,IAAMyM,GAAa,WACfT,EAAmB,CACflD,WAAa,CAAClP,OAAO,EAAOmJ,QAAU,IACtCgG,UAAa,CAACnP,OAAO,EAAOmJ,QAAU,IACtClG,SAAa,CAACjD,OAAO,EAAOmJ,QAAU,IACtCiG,QAAa,CAACpP,OAAO,EAAOmJ,QAAU,IACtC8F,MAAa,CAACjP,OAAO,EAAOmJ,QAAU,IACtCiB,UAAa,CAACpK,OAAO,EAAOmJ,QAAU,IACtCkG,MAAa,CAACrP,OAAO,EAAOmJ,QAAU,IACtCjG,SAAsB,CAAClD,OAAO,EAAOmJ,QAAU,IAC/C2I,iBAAsB,CAAC9R,OAAO,EAAOmJ,QAAU,OAIjDwJ,GAAc,SAACpJ,EAAWxK,GACzBwK,GACCyI,EAAc0T,GAAA,GACP3T,EADMpT,OAAA8K,EAAA,EAAA9K,CAAA,GAER4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAyDzC0T,GAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,SAI/B4N,GAAgB,WAClBzN,KACAb,EAAc,CACVlO,GAAaoG,EAAMpG,GACnBoL,WAAahF,EAAMgF,WACnBC,UAAajF,EAAMiF,UACnBlM,SAAaiH,EAAMjH,SACnBmM,QAAalF,EAAMkF,QACnBH,MAAa/E,EAAM+E,MACnB7E,UAAagL,QAAQlL,EAAME,WAAa,EAAI,EAC5CiF,MAAanF,EAAMmF,QAGvB+Q,GAAa,GACblO,GAAa,IAIXtI,GAAU,eAAAtK,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO6J,EAAUkH,GAAjB,OAAAjR,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACf8S,KACAtJ,EAAMuJ,UACNvJ,EAAMO,iBACNiJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,WACxDnK,GAAU,GAEPgJ,EAAW7O,WAAa6O,EAAWD,iBARvB,CAAAjS,EAAAE,KAAA,gBAUXgJ,GAAU,GACVgK,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,QAExDd,EAAmBsT,GAAA,GACZvT,EADW,CAEdL,iBAAmB,CAAC9R,OAAM,EAAKmJ,QAAQ,qCAG3CoJ,EAAgB,uCAAuC,CAAChH,QAAQ,QAAQkF,OAAOgC,KAnBpE5S,EAAAK,OAAA,kBAAAL,EAAAqI,GAuBRuI,EAvBQ5Q,EAAAE,KAwBN,SAxBMF,EAAAqI,GAAA,GAoDN,QApDMrI,EAAAqI,GAAA,2BAAArI,EAAAE,KAAA,GA0BDrC,EAASgG,KAAKlG,OAAOuU,GAAYlP,KACnC,SAAC5C,GACMA,EAASpC,eACR0U,EAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFP,GAAa,IAEU,MAApBjS,EAASnC,QACRyU,EAAgB,mCAAmC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC7EP,GAAa,GACbpK,GAAS1J,GAAKsC,MAId6R,EAAgB,gBAAgB,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxDY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,WACJyP,EAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,KACpFP,GAAa,KA9CV,eAAArS,EAAAK,OAAA,2BAAAL,EAAAE,KAAA,GAsDDrC,EAASgG,KAAKW,IAAI0N,GAAYlP,KAChC,SAAC5C,GACMA,EAASpC,eACR0U,EAAgB,iDAAiD,CAAChH,QAAQ,QAAQkF,OAAOgC,KACzFsN,GAAY,IAEW,MAApB9f,EAASnC,QACRyU,EAAgB,mCAAmC,CAAChH,QAAQ,UAAUkF,OAAOgC,KAC7EsN,GAAY,GACZjY,GAAS1J,GAAKsC,MAId6R,EAAgB,gBAAgB,CAAChH,QAAQ,QAAQkF,OAAOgC,KACxDY,GAAiBpT,EAASE,KAAKmT,WAI7CxQ,MAAM,SAACsY,GACL7I,EAAgB,8CAA+C6I,EAAG,CAAC7P,QAAQ,QAAQkF,OAAOgC,KAC1FsN,GAAY,KA1ET,eAAAlgB,EAAAK,OAAA,2BA8Ef6I,GAAU,GACVgK,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,QAhFzCrT,EAAAK,OAAA,mCAAAL,EAAAO,SAAAV,MAAH,gBAAAR,EAAAmB,GAAA,OAAAf,EAAAH,MAAA/B,KAAAgC,YAAA,GAoFViU,GAAmB,SAACpT,GACtB,IAAIsT,EAAa1B,EACjB5R,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAEtDiJ,EAAmBmB,IA4iBvB,OACIpM,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KAxiBGnD,EAEK/C,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMwT,EACN5S,QAAU,kBAAK6S,GAAa,IAC5B5S,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,gBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KAEIvG,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,uBACTtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,sBACbtD,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,YACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAQ1G,EAAMjH,WAEnCkE,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,QACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAQ1G,EAAMjH,WAEnCkE,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,WACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAQ1G,EAAMkF,UAEnCjI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,SACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAS1G,EAAM+E,QAMpC9H,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,SACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAwB,IAAhB1G,EAAMmF,MAAc,QAAyB,GAAfnF,EAAMmF,MAAa,UAAY,WAE1FlI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOrF,QAAQ,QAAhC,aACApE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAQ1G,EAAME,UAAW,MAAQ,WAO1EjD,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS8Q,GACTvU,MAAM,UACNR,QAAQ,aAERpE,EAAAvK,EAAAwK,cAACqO,GAAA,EAAD,MALJ,QAQAtO,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAK4Q,GAAa,IAAQrU,MAAM,YAAYR,QAAQ,aACjEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,WAQL,KAGG,WACd,GAAGT,EAAU,CACT,IAAI5C,EAAQ,CACR,CAACjE,MAAM,QAASrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,IACrD,CAACqM,MAAM,UAAWrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,IACvD,CAACqM,MAAM,SAAUrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,KAGtDqL,EAAY,CACZ,CAACgB,MAAM,MAAOrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,YAAY5K,MAAM,IACvD,CAACqM,MAAM,KAAMrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,YAAY5K,MAAM,KAG1D,OACIoI,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMsF,EACN1E,QAAU,kBAAK2E,GAAa,IAC5B1E,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,qBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,CAAegC,MAAO,CAACgE,SAAS,YAE5BvM,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAeK,GAAWL,EAAM,SAASzF,GAAG,oBAChFqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,GACZ5T,MAASgT,EAAW9O,SACpBuI,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlP,SAASjD,MAClC2L,WAAcwG,EAAgBlP,SAASkG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,cAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,aACP8B,SAAYkH,GACZ5T,MAASgT,EAAW7C,WACpB1D,SAAY1C,EACZ9I,MAASmS,EAAgBjD,WAAWlP,MACpC2L,WAAcwG,EAAgBjD,WAAW/F,QACzCuC,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,aAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,YACP8B,SAAYkH,GACZ5T,MAASgT,EAAW5C,UACpB3D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBhD,UAAUnP,MACnC2L,WAAcwG,EAAgBhD,UAAUhG,aAKxDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYkH,GACZ5T,MAASgT,EAAW3C,QACpB5D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgB/C,QAAQpP,MACjC2L,WAAcwG,EAAgB/C,QAAQjG,aAKtDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAAS5P,EAET1F,KAAO,QACP6W,aAAgBnR,EAAMoR,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUgT,EAAW1C,QACzE5D,SAAYkH,GACZqN,WAAclX,EACd4C,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,aAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAAS7U,EAETT,KAAO,YACP6W,aAAgBpW,EAAUqW,KAAK,SAACC,GAAD,OAC3BA,EAAQ3hB,QAAUgT,EAAW3H,YAEjCqB,SAAYkH,GACZqN,WAAclX,EACd4C,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,QACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,QACP8B,SAAYkH,GACZ5T,MAASgT,EAAW9C,MACpBzD,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlD,MAAMjP,MAC/B2L,WAAcwG,EAAgBlD,MAAM9F,aAKpDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,GACZ5T,MAASgT,EAAW7O,SACpBsI,SAAY1C,EACZ9I,MAASmS,EAAgBjP,SAASlD,MAClC2L,WAAcwG,EAAgBjP,SAASiG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,oBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,mBACP8B,SAAYkH,GACZ5T,MAASgT,EAAWD,iBACpBtG,SAAY1C,EACZ9I,MAASmS,EAAgBL,iBAAiB9R,MAC1C2L,WAAcwG,EAAgBL,iBAAiB3I,aAK/DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAeK,GAAWL,EAAM,SACzCwC,MAAM,UACNR,QAAQ,YACRC,SAAU1C,EACV8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAU7K,EAAkB,QAAT,QAAoB2B,UAAU,+BAE/EtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAK0C,GAAa,IAAQnG,MAAM,YAAYR,QAAQ,aACjEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,YAQZ,OAAO,KAsPNiT,GAnPS,WACd,GAAGjG,EAAS,CACR,IAAIrQ,EAAQ,CACR,CAACjE,MAAM,QAASrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,IACrD,CAACqM,MAAM,UAAWrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,IACvD,CAACqM,MAAM,SAAUrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,QAAQ5K,MAAM,KAGtDqL,EAAY,CACZ,CAACgB,MAAM,MAAOrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,YAAY5K,MAAM,IACvD,CAACqM,MAAM,KAAMrM,MAAQ,EAAE2K,OAAO,CAACC,KAAK,YAAY5K,MAAM,KAG1D,OACIoI,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAM+S,EACNnS,QAAU,kBAAKwS,GAAY,IAC3BvS,kBAAgB,0BAEhBrG,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,yBAAyB4L,MAAO,CAAC+D,UAAU,WAA3D,gBACAtM,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,CAAegC,MAAO,CAACgE,SAAS,YAE5BvM,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,eACbtD,EAAAvK,EAAAwK,cAAA,QAAMqD,UAAW,aAAaS,SAAU,SAAC3B,GAAD,OAAeK,GAAWL,EAAM,QAAQzF,GAAG,oBAC/EqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,OACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,GACZ5T,MAASgT,EAAW9O,SACpBuI,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlP,SAASjD,MAClC2L,WAAcwG,EAAgBlP,SAASkG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,cAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,aACP8B,SAAYkH,GACZ5T,MAASgT,EAAW7C,WACpB1D,SAAY1C,EACZ9I,MAASmS,EAAgBjD,WAAWlP,MACpC2L,WAAcwG,EAAgBjD,WAAW/F,QACzCuC,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,aAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,YACP8B,SAAYkH,GACZ5T,MAASgT,EAAW5C,UACpB3D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBhD,UAAUnP,MACnC2L,WAAcwG,EAAgBhD,UAAUhG,aAKxDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,WAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIG,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,UACP8B,SAAYkH,GACZ5T,MAASgT,EAAW3C,QACpB5D,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgB/C,QAAQpP,MACjC2L,WAAcwG,EAAgB/C,QAAQjG,aAKtDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAAS5P,EAET1F,KAAO,QACP6W,aAAgBnR,EAAMoR,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUgT,EAAW1C,QACzE5D,SAAYkH,GACZqN,WAAclX,EACd4C,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,aAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAAS7U,EAETT,KAAO,YACP6W,aAAgBpW,EAAUqW,KAAK,SAACC,GAAD,OAAiBA,EAAQ3hB,QAAUgT,EAAW3H,YAC7EqB,SAAYkH,GACZqN,WAAclX,EACd4C,UAAQ,OAKxBvE,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,SAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,QACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,QACP8B,SAAYkH,GACZ5T,MAASgT,EAAW9C,MACpBzD,SAAY1C,EACZ4C,UAAQ,EACR1L,MAASmS,EAAgBlD,MAAMjP,MAC/B2L,WAAcwG,EAAgBlD,MAAM9F,aAKpDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,YAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,WACP8B,SAAYkH,GACZ5T,MAASgT,EAAW7O,SACpBsI,SAAY1C,EACZ9I,MAASmS,EAAgBjP,SAASlD,MAClC2L,WAAcwG,EAAgBjP,SAASiG,aAKvDhC,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,aACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,0BACXtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,oBAGAtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACXtD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIpD,KAAK,WACLuD,OAAO,SACPC,QAAQ,WACRd,UAAU,wCACVd,KAAO,mBACP8B,SAAYkH,GACZ5T,MAASgT,EAAWD,iBACpBtG,SAAY1C,EACZ9I,MAASmS,EAAgBL,iBAAiB9R,MAC1C2L,WAAcwG,EAAgBL,iBAAiB3I,aAK/DhC,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,SAAS2H,MAAO,CAACiE,QAAQ,aAKjDxM,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,CAAe9E,UAAU,wBAErBtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACI0D,QAAS,SAACjG,GAAD,OAAeK,GAAWL,EAAM,QACzCwC,MAAM,UACNR,QAAQ,YACRC,SAAU1C,EACV8K,KAAK,oBAELzM,EAAAvK,EAAAwK,cAACyM,GAAA,EAAD,MAPJ,SASI1M,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,CAAkB0D,MAAO,CAACiE,QAAU7K,EAAkB,QAAT,QAAoB2B,UAAU,+BAE/EtD,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,kBAAKuQ,GAAY,IAAQhU,MAAM,YAAYR,QAAQ,aAChEpE,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,MADJ,YAQZ,OAAO,KAONkT,GACDze,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,qBACbtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,eAAemD,KAAK,SACjCzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,KACIlJ,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,WACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAAjB,eAIRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KACI1G,EAAAvK,EAAAwK,cAACye,GAAD,CAAQhhB,OAAQA,EAAQkW,UAAWA,EAAWra,OAAQA,IAElD+kB,GACIA,GAAWtlB,KAAKA,KAAKmQ,IAAI,SAACxR,EAAQgF,GAAT,OACrBqD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgF,EAAKyM,OAAO,EAAMb,MAAO,CAACwD,OAAO,WAAYgQ,cAAe,kBAhsBrF,SAACpkB,GACnB0mB,EAAS1mB,GACTshB,GAAa,GA8rBgG0F,CAAchnB,KAC3FqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAImE,UAAWnE,EAAImE,UAClDkE,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIoQ,WAAW,IAAIpQ,EAAIqQ,WAAYrQ,EAAIoQ,WAAW,IAAIpQ,EAAIqQ,WACzFhI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIsQ,SAAUtQ,EAAIsQ,SACjDjI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAImQ,OAAQnQ,EAAImQ,OAC/C9H,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAqB,IAAd3S,EAAIuQ,MAAc,QAAuB,GAAbvQ,EAAIuQ,MAAa,UAAY,UAAyB,IAAdvQ,EAAIuQ,MAAc,QAAuB,GAAbvQ,EAAIuQ,MAAa,UAAY,UAC5JlI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIsL,UAAY,MAAO,MAAOtL,EAAIsL,UAAY,MAAO,SA1tBlG,WAIlB,IAHA,IAAIxN,EAAQ,GAEN+T,EAAYxJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,SAAQzJ,EAAAvK,EAAAwK,cAACyJ,GAAA,EAAD,CAAUtF,QAAQ,OAAO6I,MAAO,IAAKgP,OAAQ,MAChFtS,EAAI,EAAEA,EAAI,GAAGA,IACjBlU,EAAE0N,KACEnD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgS,GACVH,EACAA,EACAA,EACAA,EACAA,EACAA,IAIb,OAAO/T,EA6sBiBmU,IAGZ5J,EAAAvK,EAAAwK,cAACic,GAAA,EAAD,KACIlc,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUrD,UAAU,wBAChBtD,EAAAvK,EAAAwK,cAAA,UACID,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAU,kBAxsB1CwC,EAAcuT,GACd1S,UACAkN,GAAY,IAssBmDxU,QAAQ,YAAYQ,MAAM,UAAUtB,UAAU,mBAArF,YAKJtD,EAAAvK,EAAAwK,cAAC4J,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAG,GAAG,GAAG,KAC9B+S,QAAS,EACT9S,MAAOuU,GAAaA,GAAWtlB,KAAK2P,KAAKC,MAAQ,GACjDzD,YAAa5L,EAAOkD,SACpBD,KAAM8hB,GAAa/kB,EAAOiD,KAAK,EAAI,EACnC2N,aAnwBH,SAAC/H,EAA8DgI,GAGpF,IAAI0S,EAAWvjB,EACfA,EAAOiD,KAAK4N,EAAQ,EACpB8P,EAAU4C,GAEV/X,QAAQC,IAAIoF,GAEZzJ,GAASoT,GAASrW,EAAO,OAAOof,KA2vBRzS,oBAxvBI,SAACjI,GAC7B,IAEI2a,EAAQ,CAACvgB,KAAK,EAAEC,SAFJ2F,EAAMG,OAAO3K,OAI7BsiB,EAAU6C,GACVpc,GAASoT,GAASrW,EAAO,OAAOqf,KAmvBRC,iBAAkBC,KAClB3Z,UAAU,8BCx1B3Bsb,YAfE,WACb,OACI5e,EAAAvK,EAAAwK,cAAA,OAAKtD,GAAG,YACVqD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,YACLtD,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,gBACXtD,EAAAvK,EAAAwK,cAAA,iBAEJD,EAAAvK,EAAAwK,cAAA,kCACAD,EAAAvK,EAAAwK,cAAA,qHACAD,EAAAvK,EAAAwK,cAAA,KAAG2S,KAAK,KAAR,8OCWhB,IAAMpD,GAAYC,aAAW,SAACC,GAAD,OACzBC,aAAa,CACT+F,UAAW,CACPlJ,QAAS,OACTmJ,SAAU,QAEdC,UAAW,CACP7H,WAAY,EACZ8H,YAAa,EACb5I,MAAQ,OACR6I,aAAc,OACdtN,UAAU,KAGduN,MAAO,CACHvN,UAAWkH,EAAMsG,QAAQ,IAE7BC,KAAM,CACFhJ,MAAO,KAEXiJ,OAAS,CACL3J,SAAU,WAEd4J,OAAS,CACLC,WAAa,QACbvJ,SAAW,WACXjI,MAAQ,UACR4D,UAAY,QACZ6N,KAAO,OACPC,OAAS,GAIbjf,SAAW,CACP4V,MAAQ,OAEZsJ,YAAc,CACX/N,UAAY,QACZgO,MAAQ,OACR3J,SAAW,WACX4J,UAAY,aACZC,QAAQ,QAEXE,cAAgB,CACZC,SAAU,UACVjS,MAAU,UACViI,SAAW,gBA4RRuM,GAtRF,SAACna,GACV,IAAM+X,EAAUxH,GAAUvQ,GAEpB0B,EAAWd,cAHOqL,EAImBC,yBAAnCC,EAJgBF,EAIhBE,gBAAiBC,EAJDH,EAICG,cAJDnM,EAKUC,IAAMC,WALhBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAKN8V,GALM3V,EAAA,GAAAA,EAAA,IAAAI,EAMMN,IAAMC,WANZM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAMhBwX,EANgBvX,EAAA,GAMR4V,EANQ5V,EAAA,GAAAqC,EAYK5C,IAAMC,UAAS,GAZpB6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAYjBJ,EAZiBM,EAAA,GAYTL,EAZSK,EAAA,GAAAqD,EAaEnG,IAAMC,SAAS,CACrC2H,aAAe,CAAClO,OAAO,EAAOmJ,QAAU,IACxCgF,aAAe,CAACnO,OAAO,EAAOmJ,QAAU,IACxC3K,SAAe,CAACwB,OAAO,EAAOmJ,QAAU,MAhBpBuD,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAajBzM,EAbiB0M,EAAA,GAaVrD,EAbUqD,EAAA,GAAAG,EAkBuBvG,IAAMC,UAAS,GAlBtCuG,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAkBhB0R,EAlBgBzR,EAAA,GAkBA0R,EAlBA1R,EAAA,GAqBlB2R,EAAiB,CACnB7a,SAAW,GACXD,KAAO,GAIX2C,IAAMW,UAAW,WACVb,EAAMuG,MACL+R,KAEN,CAACtY,IAEH,IAAMqM,EAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACgV,GAAAxf,EAAD,SAK/B8hB,EAAa,eAAApf,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAA9C,EAAAkT,EAAAyM,EAAA/b,EAAAgc,EAAA,OAAAhd,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFrC,EAASuI,SAASpC,KAAK4a,GADrB,UACZ7hB,EADYiD,EAAA0D,QAGduM,EAAOlT,EAAEuD,KAAK2P,MAIVC,MAAQD,EAAKlM,UAPH,CAAA/D,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAQCrC,EAASuI,SAASpC,KAAK,CAACD,SAASkM,EAAKC,MAAMpM,KAAK,IARlD,OAQVnD,EARUX,EAAA0D,KASd4Y,EAAY3b,EAAEL,KAAKA,MACnBoc,EAAO/b,EAAEL,KAAKA,KACdse,EAAe9a,KAAO,EACtB8a,EAAe7a,SAAWkM,EAAKC,MAZjBlQ,EAAAE,KAAA,iBAcdoc,EAAYvf,EAAEuD,KAAKA,MACnBoc,EAAO3f,EAAEuD,KAAKA,KAfA,QAoBdqc,EAAMD,EAAKjM,IAAI,SAACvR,GAChB,MAAO,CACHqM,MAAQrM,EAAM4K,KACd5K,MAAQA,EAAM+E,GACd4F,OAAQ,CACJC,KAAQ,WACR5K,MAAQA,EAAM+E,OAK1B2Y,EAAUD,GA/BQ,yBAAA3c,EAAAO,SAAAV,MAAH,yBAAAJ,EAAAH,MAAA/B,KAAAgC,YAAA,GAkCbuf,EAAmB,SAACpV,GACtBnD,EAAMkY,gWAAN0H,CAAA,GACO5f,EAAMiY,MADb1f,OAAA8K,EAAA,EAAA9K,CAAA,GAEK4K,EAAMG,OAAOC,KAAQJ,EAAMG,OAAO3K,UAqDrC6K,EAAU,eAAApG,EAAA7E,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAc,EAAOgJ,GAAP,IAAA3M,EAAAiiB,EAAA,OAAArf,EAAA5C,EAAAgD,KAAA,SAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,cAEfsJ,EAAS,CACL6E,aAAe,CAAClO,OAAO,EAAOmJ,QAAU,IACxCgF,aAAe,CAACnO,OAAO,EAAOmJ,QAAU,IACxC3K,SAAW,CAACwB,OAAO,EAAOmJ,QAAU,MAExCJ,GAAU,GACVQ,EAAMO,iBARSrJ,EAAAV,KAAA,EAeDrC,EAASoI,YAAYtI,OAAO4I,EAAMiY,OAfjC,YAeXzhB,EAfW6D,EAAA8C,MAkBV1F,cAlBU,CAAA4C,EAAAV,KAAA,SAmBXwS,EAAgB,+CAA+C,CAAChH,QAAQ,QAAQkF,OAAOgC,IAnB5EhS,EAAAV,KAAA,oBAqBK,MAAbnD,EAAEkB,OArBM,CAAA2C,EAAAV,KAAA,gBAsBPwS,EAAgB,oCAAoC,CAAChH,QAAQ,UAAUkF,OAAOgC,IAtBvEhS,EAAAV,KAAA,GAwBOrC,EAASoI,YAAYjC,KAAK,CAACD,SAASwC,EAAMxC,SAASD,KAAKyC,EAAMzC,OAxBrE,QA0BS,OAFZ/G,EAxBG6D,EAAA8C,MA0BFzF,QACDgK,EAAShC,GAAYlJ,IAIzBwJ,EAAMiW,cA/BC5b,EAAAV,KAAA,iBAkCS,MAAbnD,EAAEkB,QACDuV,EAAiBzW,EAAEuD,KAAKmT,QAE5Bf,EAAgB,6BAA6B,CAAChH,QAAQ,QAAQkF,OAAOgC,IArC9D,eAyCf1J,GAAU,GAzCKtI,EAAAP,OAAA,mCAAAO,EAAAL,SAAAG,MAAH,gBAAArB,GAAA,OAAAsE,EAAArE,MAAA/B,KAAAgC,YAAA,GA8CViU,EAAmB,SAACpT,GACtB,IAAIsT,EAAavT,EACjBC,EAAS2I,QAAS,SAAC7J,GACfwU,EAAOxU,EAAM4K,MAAQ,CAAC3J,OAAQ,EAAKmJ,QAASpK,EAAMoK,WAEtDE,EAASkK,IAIb,OACInN,EAAMuG,KACNxF,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0X,GAAD,CACIpe,OAAU+d,EACV9R,KAAQ4R,EACR3R,QAAW4R,EACX/B,UAAaA,IAEjBtV,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIoP,sBAAoB,EACpBlS,SAAS,KACTmC,KAAMvG,EAAMuG,KACZY,QAASnH,EAAMiW,YACf7O,kBAAgB,yBAChB2Q,QAAW,CAAEY,iBAAkBZ,EAAQd,SAEvClW,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,qBACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,CAAejD,UAAW0T,EAAQd,QAC9BlW,EAAAvK,EAAAwK,cAAA,QAAM8D,SAAUtB,EAAY9F,GAAG,eAE3BqD,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACHsH,MAAM,eACNX,UAAW0T,EAAQpB,UACnBhV,KAAK,OACL4B,KAAK,eACL5K,MAASqH,EAAMiY,MAAMnQ,aACrB5C,OAAO,SACPC,QAAQ,WACRoR,gBAAiB,CACbC,QAAQ,GAEZnR,SAAYkT,EACZ3e,MAASA,EAAMkO,aAAalO,MAC5B2L,WAAc3L,EAAMkO,aAAalO,MAAQA,EAAMkO,aAAa/E,QAAU,GACtEqC,SAAU1C,IAGd3B,EAAAvK,EAAAwK,cAAC+D,EAAA,EAAD,CACIrH,GAAG,uBACHsH,MAAM,eACNX,UAAW0T,EAAQpB,UACnBhV,KAAK,OACL4B,KAAK,eACL5K,MAASqH,EAAMiY,MAAMlQ,aACrB7C,OAAO,SACPC,QAAQ,WACRoR,gBAAiB,CACbC,QAAQ,GAEZnR,SAAYkT,EACZ3e,QAASA,EAAMmO,aAAanO,MAC5B2L,WAAc3L,EAAMmO,aAAahF,QACjCqC,SAAU1C,IAGd3B,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAACsE,SAAS,aAClB7M,EAAAvK,EAAAwK,cAAA,SAAOqD,UAAW0T,EAAQb,QAA1B,YACAnW,EAAAvK,EAAAwK,cAAC4X,GAAA,EAAD,CACIC,QAASb,EAETzU,KAAO,WACP8B,SAAYkT,EAEZlU,UAAqC0T,EAAQ3f,SAC7CkN,UAAQ,EACRF,SAAU1C,IAEd3B,EAAAvK,EAAAwK,cAAA,OAAK+O,QAASnW,EAAMxB,SAASwB,MAAmCyK,UAAW0T,EAAQJ,eAAgB/d,EAAMxB,SAAS2K,UAGtHhC,EAAAvK,EAAAwK,cAAC8X,GAAA,EAAD,CAAKnT,MAAM,UAAUqF,aAAW,MAAM3G,UAAW0T,EAAQT,YAAalO,QAAY,kBAAMgP,GAAmB,KACvGrX,EAAAvK,EAAAwK,cAAC+X,GAAAviB,EAAD,SAIZuK,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQN,SAAU1C,EAAQ0G,QAASpJ,EAAMiW,YAAatQ,MAAM,YAAYR,QAAQ,aAAhF,SAIApE,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ8H,KAAK,KAAKpI,SAAU1C,EAAQ0G,QAAS5F,EAAYmC,MAAM,UAAUR,QAAQ,aAAjF,aAOV,mOCrVV,IAiHeoV,GAjHA,SAACva,GAEZ,IAAMiW,EAAc,WAChBjW,EAAMwa,iWAANqF,CAAA,GACO7f,EAAM0a,OADb,CAEInU,MAAU,MAKZoU,EAAU,CACZrN,SAAW,OACXsN,UAAY,QACZxW,SAAW,QASf,OAAGpE,EAAM0a,OAAOnU,KAGRxF,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACIkG,WAAS,EACThJ,SAAS,KACTmC,KAAMvG,EAAM0a,OAAOnU,KACnBY,QAAS8O,EACT7O,kBAAgB,yBAChBkP,sBAAsB,GAEtBvV,EAAAvK,EAAAwK,cAACqG,GAAA,EAAD,CAAa3J,GAAG,0BAAhB,UACAqD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,0BACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAkB,YACjCtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,mBAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE8C,IAAtCzH,EAAM0a,OAAOG,OAAO3N,OAAO+H,OACvBjV,EAAM0a,OAAOG,OAAO3N,OAAOhD,IAAI,SAACvR,EAAUD,GAAX,OAC3BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUyC,OAAK,EAAEzR,IAAKA,GAClBqI,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK+N,cACzD/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAKgO,cACzDhH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoB,KAAK3B,SAAzD,KACA2I,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,QAAQ7R,EAAMoK,QAAlD,QAIRhC,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,YAMxBzJ,EAAAvK,EAAAwK,cAAA,WACAD,EAAAvK,EAAAwK,cAAA,mCACAD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOF,MAAOqR,GACV5Z,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOC,KAAK,SACRzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,CAAWX,MAAO,CAAC+G,gBAAgB,YAC/BtP,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,cAGRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAE+C,IAAvCzH,EAAM0a,OAAOG,OAAOC,QAAQ7F,OACxBjV,EAAM0a,OAAOG,OAAOC,QAAQ5Q,IAAI,SAACvR,EAAUD,GAAX,OAC5BqI,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKA,EAAKyR,OAAK,GACrBpJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMmP,cACpD/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMoP,cACpDhH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAAU7R,EAAMP,SAApD,QAIR2I,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,SACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,QACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAWtD,UAAU,SAASmG,MAAM,UAApC,aAO5BzJ,EAAAvK,EAAAwK,cAACmI,GAAA,EAAD,KACIpI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS6M,EAAatQ,MAAM,WAApC,WAOL,6jBCpGf,IAgSema,GAhSC,SAAC9f,GAEb,IAmBId,EAnBEwC,EAAWd,cACXmf,EAAala,YAAa,SAACxE,GAAD,OAAeA,EAAM3B,YAAY3F,OAHtCkS,EAKgBC,yBAAnCC,EALmBF,EAKnBE,gBAAiBC,EALEH,EAKFG,cALEnM,EAMEC,IAAMC,SAAS,CAAC5C,KAAK,EAAEC,SAAS,KANlC4C,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAMnB3F,EANmB8F,EAAA,GAMX6a,EANW7a,EAAA,GAAAI,EAOCN,IAAMC,SAAS,CACvC2H,aAAmB,CAACrJ,OAAO,MAAM/F,IAAI,IACrCqP,aAAmB,CAACtJ,OAAO,MAAM/F,IAAI,IACrCN,SAAmB,CAACqG,OAAO,MAAM/F,IAAI,MAVd+H,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAOpB/B,EAPoBgC,EAAA,GAAAqC,GAAArC,EAAA,GAYDP,IAAMC,UAAS,IAZd6C,EAAAzK,OAAA8H,EAAA,EAAA9H,CAAAuK,EAAA,GAYnByD,EAZmBvD,EAAA,GAYbwD,EAZaxD,EAAA,GAAAqD,EAeEnG,IAAMC,SAAS,CACxCib,WAAc,EACd7U,MAAa,EACbsU,OAAY,KAlBWvU,EAAA/N,OAAA8H,EAAA,EAAA9H,CAAA8N,EAAA,GAenBqU,EAfmBpU,EAAA,GAeZkU,EAfYlU,EAAA,GAwBrBgW,EAAsB,SAACnZ,GACtBA,GACCwJ,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,QAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,UAExDH,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMuD,cAAgB,OAC/DF,SAASC,qBAAqB,QAAQ,GAAGtD,MAAMwD,OAAS,aAK1DT,EAAU,SAAC3T,GAAD,OACZqI,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAS,WAAQgD,EAAc1T,KACnCqI,EAAAvK,EAAAwK,cAAA,OAAKsI,MAAO,CAAC3D,MAAM,UAAU5E,EAAAvK,EAAAwK,cAACsL,GAAA,EAAD,SAoB/B8P,EAAW,eAAAljB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,EAAO4F,GAAP,IAAArF,EAAA,OAAAT,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAGhB6gB,EAAUwF,GAAA,GACHtF,EADE,CAELU,WAAY,KALA3hB,EAAAE,KAAA,EAQKrC,EAASoI,YAAYH,QAAQL,GARlC,OAQZrF,EARYJ,EAAA0D,KAAA1D,EAAAqI,GAUTjI,EAASnC,OAVA+B,EAAAE,KAWP,MAXOF,EAAAqI,GAAA,EAmBP,MAnBOrI,EAAAqI,GAAA,0BAYRqK,EAAgB,gCAAgC,CAAChH,QAAQ,QAAQkF,OAAOgC,IACxEiQ,GAAoB,GACpB9B,EAAUwF,GAAA,GACHtF,EADE,CAELU,WAAY,KAhBR3hB,EAAAK,OAAA,yBAqBRqS,EAAgB,gCAAgC,CAAChH,QAAQ,UAAUkF,OAAOgC,IAE1EiQ,GAAoB,GACpB5a,EAASoT,GAASrW,EAAO,SAASnE,IAClCkgB,EAAU,CACNjU,MAAY,EACZ6U,WAAY,EACZP,OAAYhhB,EAASE,OA5BjBN,EAAAK,OAAA,yBAiCRqS,EAAgB,yCAAyC,CAAChH,QAAQ,QAAQkF,OAAOgC,IACjFiQ,GAAoB,GAEpB9B,EAAUwF,GAAA,GACHtF,EADE,CAELU,WAAY,KAtCR3hB,EAAAK,OAAA,mCAAAL,EAAAO,SAAAV,MAAH,gBAAAR,GAAA,OAAAI,EAAAH,MAAA/B,KAAAgC,YAAA,GAzDUyN,EAuIDvG,IAAMC,SAAS,CACrCzC,GAAe,GACfoK,aAAe,GACfC,aAAe,GACf3P,SAAe,KA3IQsO,EAAAnO,OAAA8H,EAAA,EAAA9H,CAAAkO,EAAA,GAuIpBwR,EAvIoBvR,EAAA,GAuIbwR,EAvIaxR,EAAA,GAAAG,EA6IK3G,IAAMC,UAAS,GA7IpB2G,EAAAvO,OAAA8H,EAAA,EAAA9H,CAAAsO,EAAA,GA6IpBoZ,EA7IoBnZ,EAAA,GA6IVoZ,EA7IUpZ,EAAA,GAuJ3B5G,IAAMW,UAAU,WACZa,EAASG,EAAgB,CAACwJ,MAAQ,kCAAkCC,QAAQ,qCAC5E5J,EAASoT,GAASrW,EAAO,SAASnE,KAKpC,IAEF,IAAM6lB,EAAY,WACd3Z,GAASD,IAkDb,OACIxF,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAAC0Y,GAAD,CAAKnT,KAAMA,EAAM0P,YAAakK,EAAW3iB,SAAUlD,EAAOkD,SAAUD,KAAMjD,EAAOiD,OACjFwD,EAAAvK,EAAAwK,cAACof,GAAD,CAAM7Z,KAAM0Z,EAAUhK,YAvEX,WACfiK,GAAaD,IAsEsCziB,SAAUlD,EAAOkD,SAAUD,KAAMjD,EAAOiD,KAAO0a,MAASA,EAAOC,SAAYA,IAE1HnX,EAAAvK,EAAAwK,cAACqf,GAAD,CACI3F,OAAeA,EACfF,UAAeA,IApHpBE,EAAOU,UAEFra,EAAAvK,EAAAwK,cAACkG,GAAA,EAAD,CACI9C,SAAS,KACTmC,KAAMmU,EAAOU,UACb9E,sBAAoB,EACpBjS,UAAU,wBAEVtD,EAAAvK,EAAAwK,cAACsG,GAAA,EAAD,KACIvG,EAAAvK,EAAAwK,cAAA,WACID,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAwBiF,MAAO,CAAC+D,UAAU,WACrDtM,EAAAvK,EAAAwK,cAAC4E,EAAA,EAAD,OAEJ7E,EAAAvK,EAAAwK,cAAA,OAAKqD,UAAU,wBAAf,gBAQT,KAmGPtD,EAAAvK,EAAAwK,cAACwI,GAAA,EAAD,CAAOnF,UAAU,qBACbtD,EAAAvK,EAAAwK,cAACuG,GAAA,EAAD,CAAOlD,UAAU,eAAemD,KAAK,SACjCzG,EAAAvK,EAAAwK,cAACiJ,GAAA,EAAD,KACIlJ,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,KACI3G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAjB,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAjB,gBACAzJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,QAAjB,cAIRzJ,EAAAvK,EAAAwK,cAACyG,GAAA,EAAD,KAGQsY,EACIA,EAAWhmB,KAAKA,KAAKmQ,IAAI,SAACxR,EAAQgF,GAAT,OACrBqD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgF,EAAKyM,OAAO,EAAMb,MAAO,CAACwD,OAAO,WAAYgQ,cAAe,kBArDvG5E,EAAS,CACLxa,IAHUlH,EAuDwGkC,GApD3GgF,GACPoK,aAAetR,EAAEsR,aACjBC,aAAevR,EAAEuR,aACjB3P,SAAW5B,EAAE4B,SAASsF,UAE1BwiB,GAAY,GARC,IAAC1pB,IAwDkBuK,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIoP,cAAepP,EAAIoP,cACtD/G,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIqP,cAAerP,EAAIqP,cACtDhH,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,OAAOa,MAAO3S,EAAIN,UAAWM,EAAIN,SAASmL,SA7CzE,WAIlB,IAHA,IAAI/M,EAAQ,GAEN+T,EAAYxJ,EAAAvK,EAAAwK,cAAC2G,GAAA,EAAD,CAAW6C,MAAM,UAASzJ,EAAAvK,EAAAwK,cAACyJ,GAAA,EAAD,CAAUtF,QAAQ,UACtDuF,EAAI,EAAEA,EAAI,GAAGA,IACjBlU,EAAE0N,KACEnD,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUhP,IAAKgS,GACVH,EACAA,EACAA,IAIb,OAAO/T,EAoCamU,IAGR5J,EAAAvK,EAAAwK,cAACic,GAAA,EAAD,KACIlc,EAAAvK,EAAAwK,cAAC0G,GAAA,EAAD,CAAUrD,UAAU,wBAChBtD,EAAAvK,EAAAwK,cAAA,UACID,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CAAQ0D,QAAU,kBAAM+W,KAAahb,QAAQ,YAAYQ,MAAM,UAAUtB,UAAU,mBAAnF,WAGAtD,EAAAvK,EAAAwK,cAAA,SAAOW,KAAK,OAAOoO,QAAM,EAACxM,KAAK,cAAc6Z,OAAO,QAAQpJ,IAAK,SAAAiE,GAAK,OAAI/Y,EAAK+Y,GAAQ5S,SApNhG,WAEf,GADAiX,GAAoB,GACK,IAAtBpd,EAAKme,MAAMpI,OAAa,CACvB,IAAMqI,EAAepe,EAAKme,MAAM,GAC5BE,EAAWD,EAAa/Z,KAAKia,MAAM,KAAKC,MAE5C,GAAmB,QAAbF,GAAmC,SAAbA,EAGxB,OAFApR,EAAgB,4CAA4C,CAAChH,QAAQ,QAAQkF,OAAOgC,SACpFiQ,GAAoB,GAGpBF,EAAYkB,OA0MIvc,EAAAvK,EAAAwK,cAAC0E,EAAA,EAAD,CACIC,MAAM,UACNR,QAAQ,YACRiE,QAAS,SAACjG,GACNA,EAAMuJ,UACNxN,EAAKwe,SAETrZ,UAAY,oBAEZtD,EAAAvK,EAAAwK,cAAC2c,GAAA,EAAD,MATJ,qBAcJ5c,EAAAvK,EAAAwK,cAAC4J,GAAA,EAAD,CACIC,mBAAoB,CAAC,GAAG,GAAG,GAAG,KAC9B+S,QAAS,EACT9S,MAAOiV,EAAaA,EAAWhmB,KAAK2P,KAAKC,MAAQ,GACjDzD,YAAa5L,EAAOkD,SACpBD,KAAMwiB,EAAazlB,EAAOiD,KAAK,EAAI,EACnC2N,aA7GH,SAAC/H,EAA8DgI,GAGpF,IAAI0S,EAAWvjB,EACfA,EAAOiD,KAAK4N,EAAQ,EACpB8P,EAAU4C,GAEVnc,EAASoT,GAASrW,EAAO,SAASof,KAuGVzS,oBApGI,SAACjI,GAC7B,IACI2a,EAAQ,CAACvgB,KAAK,EAAEC,SADJ2F,EAAMG,OAAO3K,OAE7BsiB,EAAU6C,GACVpc,EAASoT,GAASrW,EAAO,SAASqf,KAiGVC,iBAAkBC,KAClB3Z,UAAU,6BCrQ3B5B,eA3BO,SAACzC,GAAc,IAAAC,EAEHC,IAAMC,UAAS,GAFZC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAEzBK,EAFyBF,EAAA,GAEjBG,EAFiBH,EAAA,GAAAI,EAGLN,IAAMC,UAAS,GAHVM,EAAAlI,OAAA8H,EAAA,EAAA9H,CAAAiI,EAAA,GAGzBjK,EAHyBkK,EAAA,GAGlBC,EAHkBD,EAAA,YAAAK,IAAA,OAAAA,EAAAvI,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAKjC,SAAAC,IAAA,OAAAF,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcrD,EAAMa,QADpB,WAAAsC,EAAA0D,KAAA,CAAA1D,EAAAE,KAAA,QAEQ+G,GAAS,GAFjB,OAIIH,GAAU,GAJd,wBAAA9G,EAAAO,SAAAV,OALiCP,MAAA/B,KAAAgC,WAgBjC,OAJA6H,oBAAU,YAZuB,WAAAC,EAAA/H,MAAA/B,KAAAgC,WAa7BxB,IACF,IAEE8I,EAID/J,EACQwK,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAW,OAG/BL,EAAAvK,EAAAwK,cAACsf,GAAUtgB,GAPP,gBCpBFugB,GAAY,CACrB,CACIC,KAAY,SACZvf,UAAYwf,KCHPC,GAAY,CACrB,CACIF,KAAM,IACNvf,UAAW0f,GACXC,OAAQ,GACV,CACEJ,KAAO,YACPvf,UAAY0f,GACZC,OAAQ,GACV,CACEJ,KAAO,aACPvf,UAAY0f,GACZC,OAAQ,GACV,CACEJ,KAAO,SACPvf,UAAY0f,GACZC,OAAQ,GACV,CACEJ,KAAO,WACPvf,UAAY0f,GACZC,OAAQ,GACV,CACEJ,KAAO,YACPvf,UAAY0f,GACZC,OAAQ,GACV,CACEJ,KAAO,WACPvf,UAAY0f,GACZC,OAAQ,ICyDDC,GA5EK,SAAC7gB,GAAa,IAAAC,EAGUC,IAAMC,UAAS,GAHzBC,EAAA7H,OAAA8H,EAAA,EAAA9H,CAAA0H,EAAA,GAGtB6gB,EAHsB1gB,EAAA,GAGT2gB,EAHS3gB,EAAA,GAIxBO,EAAaC,cAEnBV,IAAMW,UAAU,WACRigB,GACAE,KAEN,CAACF,IAGH,IAAME,EAAU,eAAA9nB,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5C,EAAA6C,KAAG,SAAAC,IAAA,IAAAoE,EAAA1F,EAAA,OAAAoB,EAAA5C,EAAAgD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACZrD,EAAMa,QADM,CAAAsC,EAAAE,KAAA,eAEL+D,EAASiG,IAAWrN,EAAMS,OAFrB0C,EAAAE,KAAA,EAGwBrC,EAASgG,KAAKvG,IAAI2G,EAAGkG,KAH7C,OAIQ,OADb5L,EAHKyB,EAAA0D,MAIHzF,OACJiJ,EAAWrD,EAAKtF,EAAK+B,OAErBzD,EAAMY,SAPC,OAWf6pB,GAAe,GAXA,wBAAAtnB,EAAAO,SAAAV,MAAH,yBAAAJ,EAAAH,MAAA/B,KAAAgC,YAAA,GAgBhB,OAAI8nB,EAMA/f,EAAAvK,EAAAwK,cAACD,EAAAvK,EAAMyQ,SAAP,KACIlG,EAAAvK,EAAAwK,cAACigB,GAAA,EAAD,KAEIlgB,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,KAEQqf,GAAWrW,IAAI,SAACoQ,EAAQrJ,GAAT,OACXlQ,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAO0f,OAAK,EAACJ,KAAOlG,EAAQkG,KAAMvf,UAAWqZ,EAAQrZ,UAAWvI,IAAKuY,MAK7ElQ,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAOsf,KAAM,KACLzf,EAAAvK,EAAAwK,cAACkgB,GAAD,KACAngB,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,KAEQwf,GAAUxW,IAAI,SAACoQ,EAAQrJ,GAAT,OACVlQ,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAO0f,MAAOtG,EAAQsG,MAAOJ,KAAOlG,EAAQkG,KAAMW,OAAS,SAACnhB,GAAD,OAAWe,EAAAvK,EAAAwK,cAACogB,EAAD7oB,OAAA8oB,OAAA,GAAyBrhB,EAAzB,CAAgCiB,UAAWqZ,EAAQrZ,cAAevI,IAAKuY,MAWrJlQ,EAAAvK,EAAAwK,cAACE,EAAA,EAAD,CAAOD,UAAW0f,WAhCnC,yBCvCTW,GAAe,CACjBvnB,KAAO,IAcI0H,GAXK,WAAsC,IAArCJ,EAAqCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA7BsoB,GAAcjX,EAAerR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EACzD,OAAQgT,EAAO1I,MACX,I3CR6B,c2CS1B,MAAO,CACL5H,KAAQsQ,EAAOzI,SAEpB,QACG,OAAOP,iOCXf,IAAMigB,GAAe,CACpBjW,MAAS,GACTC,QAAU,IAgBIzJ,GAbS,WAAqC,IAApCR,EAAoCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA5BsoB,GAAcjX,EAAcrR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EAC5D,OAAQgT,EAAO1I,MACX,I5CR6B,kB4CS1B,8VAAO4f,CAAA,GACRlgB,EADC,CAEJgK,MAAQhB,EAAOzI,QAAQyJ,MACvBC,QAAUjB,EAAOzI,QAAQ0J,UAExB,QACG,OAAOjK,ICdTigB,GAAe,CACjBvnB,KAAO,IAgBIiF,GAbE,WAAsC,IAArCqC,EAAqCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA7BsoB,GAAcjX,EAAerR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EAEtD,OAAQgT,EAAO1I,MACX,I7CP6B,W6CQ1B,MAAO,CACL5H,KAAOsQ,EAAOzI,SAEnB,QAEG,OAAOP,ICbTigB,GAAe,CACjBvnB,KAAO,IAcIyF,GAXG,WAAsC,IAArC6B,EAAqCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA7BsoB,GAAcjX,EAAerR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EACvD,OAAQgT,EAAO1I,MACX,I9CL6B,Y8CM1B,MAAO,CACL5H,KAAQsQ,EAAOzI,SAEpB,QACG,OAAOP,ICXTigB,GAAe,CACjBvnB,KAAO,IAeImI,GAZD,WAAsC,IAArCb,EAAqCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA7BsoB,GAAcjX,EAAerR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EAEnD,OAAQgT,EAAO1I,MACX,I/CL6B,Q+CM/B,MAAO,CACA5H,KAAOsQ,EAAOzI,SAEnB,QACG,OAAOP,2jBCZf,IAAMigB,GAAe,CACjBhe,OAAY,QACZiD,MAAY,EACZ5N,MAAY,IA0BD6I,GAtBA,WAAsC,IAArCH,EAAqCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA7BsoB,GAAcjX,EAAerR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EACpD,OAAQgT,EAAO1I,MACX,KAAKS,EACE,OAAAof,GAAA,GACOngB,EADP,CAEIkF,KAAO8D,EAAOzI,UAEtB,KAAKQ,EACD,OAAOof,GAAA,GACAngB,EADP,CAEIiC,OAAO+G,EAAOzI,UAEtB,KAAKQ,EACD,OAAAof,GAAA,GACOngB,EADP,CAEI1I,MAAQ0R,EAAOzI,UAE1B,QACG,OAAOP,ICzBTigB,GAAmB,CACxBvnB,KAAO,IAcO2F,GAXK,WAAqC,IAApC2B,EAAoCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA5BsoB,GAAcjX,EAAcrR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EACxD,OAAQgT,EAAO1I,MACX,IjDH6B,ciDI/B,MAAO,CACN5H,KAAOsQ,EAAOzI,SAEb,QACG,OAAOP,ICXTigB,GAAmB,GAWVzhB,GATE,WAAqC,IAApCwB,EAAoCrI,UAAAic,OAAA,QAAA5d,IAAA2B,UAAA,GAAAA,UAAA,GAA5BsoB,GAAcjX,EAAcrR,UAAAic,OAAA,EAAAjc,UAAA,QAAA3B,EACrD,OAAQgT,EAAO1I,MACX,IlDA6B,WkDC1B,OAAe0I,EAAOzI,QACzB,QACG,OAAOP,ICCAogB,gBAAgB,CAC3BhgB,eACAI,mBACA7C,YACAQ,aACA0C,SACAV,UACA9B,eACAG,cCXE6hB,GAAa,CAACC,MAEdnrB,GAAKuW,OAAe6U,8BAAiC7U,OAAe6U,+BAe3DC,GAbDC,aACZC,GAPmB,GASnBvrB,GACEwrB,aACEC,KAAelpB,WAAf,EAAmB2oB,IAAYlrB,IAGjCwrB,aACEC,KAAelpB,WAAf,EAAmB2oB,MCEVQ,GAjBH,WACR,OACInhB,EAAAvK,EAAAwK,cAACmhB,EAAA,EAAD,CAAUN,MAAOA,IACb9gB,EAAAvK,EAAAwK,cAACohB,GAAA,iBAAD,CACIlT,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBiT,SAAU,GACVC,iBAAmB,KAEnBvhB,EAAAvK,EAAAwK,cAACuhB,GAAD,SCJIvT,QACW,cAA7BjC,OAAOxL,SAASihB,UAEe,UAA7BzV,OAAOxL,SAASihB,UAEhBzV,OAAOxL,SAASihB,SAASC,MACvB,2DCbNC,IAASvB,OAAOpgB,EAAAvK,EAAAwK,cAAC2hB,GAAD,MAAShW,SAASiW,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtmB,KAAK,SAAAumB,GACjCA,EAAaC","file":"static/js/main.c01244be.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n    master      : 'product-master-list/',\n    category    : 'category/',\n    logs        : 'logs/',\n\n}\n\nconst Url = {\n    //auth\n    login     :   server_url+prefix.auth+'login',\n    logout    :   server_url+prefix.auth+'logout',\n    refresh   :   server_url+prefix.auth+'refresh',\n    check     :   server_url+prefix.auth+'check',\n\n    //user\n    user       : server_url+prefix.user,\n    products   : server_url+prefix.products,\n    suppliers  : server_url+prefix.supplier,\n    productMasterList : server_url+prefix.master,\n    category   : server_url+prefix.category,\n    logs       : server_url+prefix.logs,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        // if(a.error.response.status === 401){\n        //     await new Promise( resolve => setTimeout(resolve, 6000) );\n        //     if(a.params){\n        //         return a.callback(a.params);\n        //     }\n\n        //     return a.callback();\n        // }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product                     : string,\n    // product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface showMasterCodes{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass MasterCodes extends StaticMethods{\n\n    static async show(user:showMasterCodes){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(up:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.productMasterList+up.id,\n            headers :   header,\n            params  :   up,\n        }).then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : up\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:any){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.productMasterList,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.productMasterList,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.productMasterList+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default MasterCodes;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\n// interface Supplier{\n//     id              : any,\n//     supplier_code   : string,\n//     supplier_name   : string,\n//     address         : string,\n//     tin             : string,\n//     contact_person  : string,\n//     contact_number  : string,\n//     email           : string\n// }\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\ninterface add{\n    name : string\n}\n\n\n\n\nclass Category extends StaticMethods{\n\n    static async show(user:show){\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.category+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.category+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.get,\n    //             format : format,\n    //             params : id\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    // static async update(up:any){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     const header = super.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"PATCH\",\n    //         url     :   Url.category+up.id,\n    //         headers :   header,\n    //         params  :   up,\n    //     }).then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.update,\n    //             format : format,\n    //             params : up\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(pml:add){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.category,\n            headers :   header,\n            params  :   pml,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : pml\n            });\n        })\n        return format;\n    }\n\n    // static async addFile(file:File){\n        \n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n        \n    //     const token = Token.get();\n    //     const formData = new FormData();\n    //     formData.append('file',file);\n\n    //     await axios.post(Url.suppliers,formData,{\n    //         headers: {\n    //             'Content-Type'         :    'application/x-www-form-urlencoded',\n    //             'Accept'               :    'application/json',\n    //             'Authorization'        :    'Bearer '+token\n    //         }})\n    //     .then( (response:any) => {\n    //         format.status = response.status; \n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.addFile,\n    //             format : format,\n    //             params : file\n    //         });\n          \n    //     })\n    //     return format;\n    // }\n\n    // static async filter(filter:any){\n\n    //     let params = new URLSearchParams(filter).toString();\n\n    //     let format:Format = {\n    //         network_error : false,\n    //         status        : 0,\n    //         data          : '',\n    //     }\n        \n    //     const header = this.header(Token.get());\n        \n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.productMasterList+'?filter=true&'+params,\n    //         headers :   header,\n    //     }).then( this.sleeper(1000))\n    //     .then( (response:any) => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await super.recall({\n    //             error : error,\n    //             callback : this.filter,\n    //             format : format,\n    //             params : filter\n    //         });\n    //     })\n    //     return format;\n    // }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Category;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface show{\n    page : number,\n    per_page : number,\n}\n\nclass Logs extends StaticMethods{\n\n    static async show(logs:show){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.logs+'?page='+logs.page+'&per_page='+logs.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : logs\n            });\n        })\n        return format;\n    }\n}\n\nexport default Logs;","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            // if(await Token.valid()){\n    \n            //     const id:any = jwt_decode(Token.get());\n            //     const user:Requests.Format = await Requests.User.get(id.sub);\n            //     if(user.status === 200){\n            //         updateUser(User(user.data));\n    \n            //         setToken(true);\n            //     }\n            // }\n\n            if(Token.exist()){\n                setToken(true);\n            }\n            \n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const MasterCodes        = \"MasterCodes\";\nexport const Category           = \"Category\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\ntype control = \"home\" | \"products\" | \"product_master_file_maintenance\" | \"suppliers\" | \"users\";\n\ninterface Navigation {\n    title   : string,\n    control : control,\n}\n\nexport const NavigationTitle = (a:Navigation) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us, MasterCodes as ma } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\" | \"master\";\n\ninterface params {\n    page        : number,\n    per_page    : number\n}\n\nexport const Filter = (filter:any,component:component,extra_params:params) => {\n\n        let params = '';\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n\n        params = params+\"&page=\"+extra_params.page+\"&per_page=\"+extra_params.per_page;\n        \n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(params),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(params),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(params),\n                    });\n                }\n            case \"master\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : ma,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : ma,\n                        payload : await Requests.MasterCodes.filter(params),\n                    });\n                }\n        }\n\n        \n}\n","import { MasterCodes as MC } from './Types';\n\nexport const MasterCodes = (a:any) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : MC,\n                payload : a\n            });\n        }\n}\n","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst title = 'Product Inquiry System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n    const updateUser = useDispatch();\n    \n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = async (user:Requests.Format) => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            \n            const id:any = jwt_decode(Token.get());\n            const users:Requests.Format = await Requests.User.get(id.sub);\n            if(users.status === 200){\n                updateUser(User(users.data));\n            }\n\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            \n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { Paper, Typography, Table, TableHead, TableRow, TableCell, TableBody, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, Select, MenuItem, FormControlLabel, DialogActions } from '@material-ui/core';\nimport { Dropbox, VanUtility, Account } from 'mdi-material-ui';\nimport { ArrowForward } from '@material-ui/icons';\nimport {withRouter, Switch} from 'react-router-dom';\nimport { Requests } from 'Services';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport moment from 'moment';\nimport {Suppliers,Users,Products} from \"Redux/Actions\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst Admin = ( props :any ) => {\n\n    const dispatch = useDispatch();\n    const users = useSelector((state:any) => state.Users.data); \n    const products = useSelector((state:any) => state.Products.data); \n    const suppliers = useSelector((state:any) => state.Suppliers.data); \n\n    console.log(products)    \n\n    React.useEffect(()=>{\n        requestLog();\n    },[]);\n\n\n    const requestLog = () => {\n\n        dispatch(Suppliers({page:1,per_page:10}));\n        dispatch(Users({page:1,per_page:10}));\n        dispatch(Products({page:1,per_page:10}));\n\n        setData(null);\n        const a = Requests.Logs.show({per_page:rowsPerPage,page:page}).then((response:any)=>{\n            setData(response.data);\n        });\n    }\n\n\n    const [page, setPage] = React.useState(1);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const [data, setData] = React.useState();\n    const [open, setOpen] = React.useState(false);\n    const [modal,setModal] = React.useState();\n    const [target,setTarget] = React.useState();\n\n\n    const handleChangePage = (event:any, newPage:any) => {\n        setPage(newPage+1);\n        \n        \n\n        //there is a delay when updating state. so instead of {per_page:rowsPerPage,page:page}, we replaced {per_page:rowsPerPage,page:newPage+1} for instant update\n        setData(null);\n        const a = Requests.Logs.show({per_page:rowsPerPage,page:newPage+1}).then((response:any)=>{\n            setData(response.data);\n        });\n\n    };\n    \n    const handleChangeRowsPerPage = (event:any) => {\n        if(event.target.value !== rowsPerPage ){\n            setRowsPerPage(event.target.value);\n            setPage(1);\n\n            setData(null);\n            const a = Requests.Logs.show({per_page:event.target.value,page:1}).then((response:any)=>{\n                setData(response.data);\n            });\n        }        \n    };\n\n    \n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModal = (data:any,target:any) => {\n        setModal(data);\n        setOpen(true);\n        setTarget(target);\n\n        console.log(data);\n    }\n\n    const dataModal = () => {\n\n        const ProductMasterList = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.category.name}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n        \n        const user = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">User Name</TableCell>\n                        <TableCell >{data.username}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Name</TableCell>\n                        <TableCell >{data.first_name+\" \"+data.last_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Company</TableCell>\n                        <TableCell >{data.company}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Level</TableCell>\n                        <TableCell >{data.level.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Activated</TableCell>\n                        <TableCell >{parseInt(data.activated) === 1 ? \"Yes\" : \"No\"}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const supplier = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Name</TableCell>\n                        <TableCell >{data.supplier_name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">TIN</TableCell>\n                        <TableCell >{data.tin}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Address</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact Person</TableCell>\n                        <TableCell >{data.contact_person}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Contact No.</TableCell>\n                        <TableCell >{data.contact_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Email</TableCell>\n                        <TableCell >{data.email}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n        const product = (data:any) => {\n            return(\n                <React.Fragment>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Supplier Code</TableCell>\n                        <TableCell >{data.supplier.supplier_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Code</TableCell>\n                        <TableCell >{data.product.product.product_code}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Product Name</TableCell>\n                        <TableCell >{data.product.product.product_name}</TableCell>\n                    </TableRow>\n                    {/* <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Category</TableCell>\n                        <TableCell >{data.address}</TableCell>\n                    </TableRow> */}\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Serial Number</TableCell>\n                        <TableCell >{data.serial_number}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Date</TableCell>\n                        <TableCell >{moment(data.delivery_date).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty</TableCell>\n                        <TableCell >{data.warranty+\" Month(s)\"}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Warranty Start</TableCell>\n                        <TableCell >{moment(data.warranty_start).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">End Date</TableCell>\n                        <TableCell >{moment(data.warranty_end).format('ll')}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Delivery Doc</TableCell>\n                        <TableCell >{data.reference_delivery_document}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Status</TableCell>\n                        <TableCell >{data.status.name}</TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\">Remarks</TableCell>\n                        <TableCell >{data.remarks}</TableCell>\n                    </TableRow>\n                </React.Fragment>\n            )\n        }\n\n\n        return (\n            <React.Fragment>\n            {\n                modal ?\n                    <Dialog\n                        // fullWidth={fullWidth}\n                        // maxWidth=\"sm\"\n                        open={open}\n                        onClose={() => setOpen(false)}\n                        aria-labelledby=\"max-width-dialog-title\"\n                        className=\"modal-history\"\n                    >\n                        <DialogTitle>History</DialogTitle>\n                        <DialogContent>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {\n                                        target === \"Product\"  ? product(modal)    :\n                                        target === \"Supplier\" ? supplier(modal)   : \n                                        target === \"User\"     ? user(modal)       : \n                                        target === \"ProductMasterList\" ? ProductMasterList(modal) : \"\"\n                                    }\n                                </TableBody>\n                            </Table>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button variant=\"contained\" color=\"primary\" onClick={ () => setOpen(false)}>\n                                Close\n                            </Button>\n                        </DialogActions>\n                    </Dialog> \n                :\n\n                ''\n            }\n            </React.Fragment>\n\n            \n        );\n    }\n\n\n    \n\n    \n\n\n\n    return(\n        <div>\n            {dataModal()}\n            <div className=\"justify-content-center row\" style={{marginTop:'120px'}}>\n                <div className=\"col-lg text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total Products</div>\n                        <div className=\"amount-box\">{products  ? products.data.meta.total : 0 }</div>\n                        <div className=\"info-box\">more info <ArrowForward /> </div>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\">Total Suppliers</div>\n                        <div className=\"amount-box\">{suppliers  ? suppliers.data.meta.total : 0 }</div>\n                        <div className=\"info-box\">more info <ArrowForward /> </div>\n                    </Paper>\n                </div>\n                <div className=\"col-lg text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                    <Paper className=\"wrapper-box\">\n                        <Paper className=\"icon-wrapper-box\">\n                            <div className=\"col\"><Account className=\"home-icon\" /></div>\n                        </Paper>\n                        <div className=\"title-box\"> Total User</div>\n                        <div className=\"amount-box\">{users  ? users.data.meta.total : 0 }</div>\n                        <div className=\"info-box\"> more info <ArrowForward /> </div>\n                    </Paper>\n                </div>\n            </div>\n            <Paper>\n                <Typography variant=\"subtitle1\" component=\"h6\" style={{padding:'10px',fontWeight:'bolder',textTransform:'uppercase'}}>\n                    User Activities\n                </Typography>\n\n                <Table size=\"small\">\n                    <TableHead className=\"user-logs-table-head\">\n                        <TableRow>\n                            <TableCell>Date</TableCell>\n                            <TableCell>Name</TableCell>\n                            <TableCell>Action</TableCell>\n                            <TableCell>Target</TableCell>\n                            <TableCell>Previous</TableCell>\n                            <TableCell>Update</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            data ?\n                            data.data.map( (value:any,key:any) =>\n                                <TableRow key={value.id} hover>\n                                    <TableCell>{moment(value.updated_at).format('ll')}</TableCell>\n                                    <TableCell style={{textTransform:'uppercase'}}>{value.user.first_name+\" \"+value.user.last_name}</TableCell>\n                                    <TableCell  style={{textTransform:'uppercase'}}>{value.action}</TableCell>\n                                    <TableCell  style={{textTransform:'uppercase'}}>{value.target}</TableCell>\n                                    <TableCell>\n                                        {\n                                            value.previous ?\n                                                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.previous,value.target)}>\n                                                    View\n                                                </Button>\n                                            :    \n                                            ''\n                                        }\n                                    </TableCell>\n                                    <TableCell>\n                                        {\n                                            value.update ?\n                                                <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => initModal(value.update,value.target)}>\n                                                    View\n                                                </Button>\n                                            :    \n                                            ''\n                                        }\n                                    </TableCell>\n                                </TableRow>\n                            )\n                            \n                            :\n                            skeletonTable()\n                        }\n                        \n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[10,25,50,100]}\n                    component=\"div\"\n                    count={data ? data.meta.total : 10}\n                    rowsPerPage={rowsPerPage}\n                    page={data ? page-1 : 0}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n} \n\nexport default withRouter(Admin);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle } from 'Redux/Actions';\n// import { AssignmentInd, Assignment, SupervisorAccount } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { withRouter } from 'react-router-dom';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\nimport { Paper } from '@material-ui/core';\nimport Admin from './Admin';\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle({title:'Home', control:'home'}));\n    },[dispatch])\n\n\n    return(\n        <div>\n            { user.level === 1 ?\n                <Admin />\n            :\n                <div className=\"mx-auto\" style={{marginTop:'150px'}}>\n                    <React.Fragment>\n                        <div className=\"justify-content-center row\">\n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                                <Paper>\n                                    <div className=\"col\"><Dropbox className=\"home-icon\" /></div>\n                                    <div className=\"col\">Products</div>\n                                </Paper>\n                            </div>\n                            \n                            <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                                <Paper>\n                                    <div className=\"col\"><VanUtility className=\"home-icon\" /></div>\n                                    <div className=\"col\">Suppliers</div>\n                                </Paper>\n                            </div>\n                            \n                        </div>\n                    </React.Fragment>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/user.png\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/user.png\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        \n                                        {props.user.first_name && props.user.last_name ? props.user.first_name+\" \"+props.user.last_name : ''}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        {props.user.first_name && props.user.last_name ? \" Logout\" : \" Login\" }\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover, makeStyles, Theme, createStyles } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\nimport {useSelector} from 'react-redux';\n\n\n\nconst styles = {\n    hidden : {\n        visibility:'hidden',\n    },\n    inherited : {\n        position : 'inherit',\n    },\n    shadowed : {\n        boxShadow : '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)',\n    },\n    icon : {\n        backgroundColor : '#3f50b5',\n        color           : 'white',\n        borderRadius    : '20px',\n        padding         : '2px',\n    }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position : 'inherit'\n        },\n        list : {\n            root : {\n                visibility : 'hidden',\n                '&:hover' : {\n                    visibility : 'visible'\n                }\n            }\n        }\n\n    }),\n);\n\nconst SidebarList = (props:any) => {\n    const control = useSelector( (state:any) => state.NavigationTitle.control);\n    const classes = useStyles(props);\n\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List /*className={!props.sidebar ? classes.root : ''}*/>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem className={text.control === control ? \"active-nav\" : \"\"} button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}\n                    >\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon style={styles.icon} />}</ListItemIcon>\n                                    <ListItemText /*className={classes.list}*/>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings, List} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token, Requests} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search,MasterCodes} from 'Redux/Actions';\nimport { Dropbox, VanUtility, Account, ProgressWrench  } from 'mdi-material-ui';\n\nconst Navigation = (props:any) => {\n\t\n\tconst logo = \"/img/ideaserv.png\";\n\tlet sidebar_properties = [\n\t\t{\n\t\t\tname : \"Home\",\n\t\t\tcontrol : \"home\",\n\t\t\ticon : Home,\n\t\t\turl  : \"/\",\n\t\t\t\n\t\t},{\n\t\t\tname : \"Products\",\n\t\t\tcontrol : \"products\",\n\t\t\ticon : Dropbox,\n\t\t\turl  : '/products',\n\t\t\t\n\t\t},{\n\t\t\tname :\t\"Product Maintenance\",\n\t\t\tcontrol : \"product_master_file_maintenance\",\n\t\t\ticon :  ProgressWrench,\n\t\t\turl  :  '/summary'\n\t\t},{\n\t\t\tname : \"Suppliers\",\n\t\t\tcontrol : \"suppliers\",\n\t\t\ticon :  VanUtility,\n\t\t\turl  : \"/suppliers\", \n\t\t},{\n\t\t\tname : \"Users\",\n\t\t\tcontrol : \"users\",\n\t\t\ticon :  Account,\n\t\t\turl  : \"/users\", \n\t\t\tprops: '',\n\t\t}\n\t];\n\n\n\n\n\n\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title);\n\tconst dispatch = useDispatch();\n\t\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[reduxUser]);\n\t\n\n\tif(reduxUser.level !== 1){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\tcontrol : 'home',\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\tcontrol : \"products\",\n\t\t\t\ticon : Dropbox,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\tcontrol : \"suppliers\",\n\t\t\t\ticon :  VanUtility,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t}/*,{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}*/\n\t\t]\n\t}\n\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\t// window.location.reload();\n\t\tToken.remove();\n\n\t\t// if(!Token.exist){\n\t\t\twindow.location.href = \"/login\";\n\t\t\treturn\n\t\t// \treturn;\n\t\t// }\n\t\t// props.history.push('/login');\n\n\t\t\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n \n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\" | \"status\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier            : React.useRef(null),\n        product             : React.useRef(null),\n        product_description : React.useRef(null),\n        serial_number       : React.useRef(null),\n        warranty            : React.useRef(null),\n        warranty_start      : React.useRef(null),\n        warranty_end        : React.useRef(null),\n        status              : React.useRef(null),\n    };\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product             : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n        status              : null,\n    });\n\n    // const [filter, setFilter] = useState({\n    //     supplier            : {filter:'iet',key:''},\n    //     product_code        : {filter:'iet',key:''},\n    //     product_description : {filter:'iet',key:''},\n    //     serial_number       : {filter:'iet',key:''},\n    //     warranty            : {filter:'iet',key:''},\n    //     warranty_start      : {filter:'iet',key:''},\n    //     warranty_end        : {filter:'iet',key:''}\n    // });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product               = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        a.status                = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        \n        // setPopper({\n        //     ...popper,\n        //     [control] : null,\n        // })\n\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"product\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {props.filter.supplier.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            {props.filter.supplier.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")} disabled={props.filter.supplier.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product\"\n                    value = {props.filter.product.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product)? \"simple-popper\" : undefined} open={Boolean(popper.product)} anchorEl={popper.product}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product.filter}\n                                onChange={setFilterControl}\n                                name = \"product\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product\")}>\n                            {props.filter.product.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product\")} disabled={props.filter.product.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {props.filter.product_description.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.product_description}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.product_description.filter}\n                                onChange={setFilterControl}\n                                name = \"product_description\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            {props.filter.product_description.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")} disabled={props.filter.product_description.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {props.filter.serial_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.serial_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.serial_number.filter}\n                                onChange={setFilterControl}\n                                name = \"serial_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            {props.filter.serial_number.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")} disabled={props.filter.serial_number.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {props.filter.warranty.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.warranty}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            {props.filter.warranty.key === '' ?'Close' : 'Clear'}                                                    \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")} disabled={props.filter.warranty.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_start: {\n                                ...props.filter['warranty_start'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_start.key == '' ? null : moment(props.filter.warranty_start.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_start.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_start\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            {props.filter.warranty_start.key === '' ?'Close' : 'Clear'}                             \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")} disabled={props.filter.warranty_start.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => props.setFilter({\n                            ...props.filter,\n                            warranty_end:{\n                                ...props.filter['warranty_end'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {props.filter.warranty_end.key == '' ? null : moment(props.filter.warranty_end.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.warranty_end.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_end\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            {props.filter.warranty_end.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")} disabled={props.filter.warranty_end.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.status.key}\n                        onChange={setText}\n                        name=\"status\"\n                        onFocus = {(event)=>controller(event,\"status\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>New</MenuItem>\n                        <MenuItem value={2}>Replaced</MenuItem>\n                        <MenuItem value={3}>Returned</MenuItem>\n                        <MenuItem value={4}>Repaired</MenuItem>                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.status)? \"simple-popper\" : undefined} open={Boolean(popper.status)} anchorEl={popper.status}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,status:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"status\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport { useSnackbar } from 'notistack';\nimport Close from '@material-ui/icons/Close';\n\ninterface Category{\n    \n    params : any,\n    open : any,\n\n    setOption : any,\n    setOpen : any,\n}\n\nconst Category = (props:Category) => {\n\n\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ error, setError ] = React.useState(false);\n    const [ message, setMessage ] = React.useState('');\n    const [category, setCategory ] = React.useState('');\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const handleClose = () => {\n        props.setOpen(!props.open);\n    }\n\n\n    const handleOption = async () => {\n        const a = await Requests.Category.show(props.params);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            opti = b.data.data;\n            props.params.page = 1;\n            props.params.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        props.setOption(opt);\n    }\n\n    const submitForm = async () => {\n        setError(false);\n        setSubmit(true);\n        if(category === ''){\n            setSubmit(false);\n            setError(true);\n            setMessage('Category name is required');\n            return;\n        }\n\n        let a = await Requests.Category.add({name:category});\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                handleOption();\n                handleClose();\n                enqueueSnackbar(\"Product category successfull added\",{variant:\"success\",action:actions});\n            }else{\n \n                if(a.status === 406){\n                    setSubmit(false);\n                    setError(true);\n                    setMessage('Category name already exists');\n                    return;\n                }else{\n                    enqueueSnackbar(\"Something went wrong. Please try again.\",{variant:\"error\",action:actions});\n                }\n            }\n        }\n\n        setSubmit(false);\n        setError(false);\n        setMessage('');\n    }\n\n    return(\n        <React.Fragment>\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Category</DialogTitle>\n                <DialogContent >\n                    <TextField\n                        id=\"outlined-email-input\"\n                        label=\"Category Name\"\n                        // className={classes.textField}\n                        type=\"text\"\n                        name=\"category\"\n                        value = {category}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onChange = {(event) => setCategory(event.target.value)}\n                        error = {error}\n                        helperText = {message}\n                        disabled={submit}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={handleClose} color=\"secondary\" variant=\"contained\">\n                        Cancel\n                    </Button>\n\n                    <Button disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>        \n            </Dialog>\n        </React.Fragment>\n    );\n\n}\n\nexport default Category;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none',\n\n            \"&:focus\": {\n                outline: 'none'\n            }\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Add = (props:Add) => {\n\n    const initError = {\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    }\n\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    const [input, setInput] = React.useState({\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState(initError);\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        setInput({\n            ...input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError(initError); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.add(input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully added Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Add new product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Add New Product</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                \n                                // defaultValue = {options[0]}\n                                // onChange = {props.updateInput}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      );\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\ninterface Add{\n    modalAdd                    :   boolean,\n    updateInput                 :   any,\n    productInput                :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n    supplierState               :   any,\n    setProductInput             :   any,\n    params                      :   any,\n\n\n    setModalAdd(a:boolean)      :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Add = (props:Add) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n    React.useEffect( () => {\n        if(productCode && props.modalAdd){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n       \n    //    console.log(productCode.data);\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    if(props.modalAdd){\n        let options;\n\n        if(props.supplierState){\n            options = props.supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        let status = [\n            {\n                label : 'New',\n                value : 1,\n                target: {\n                    name : 'status',\n                    value : 1,\n                }\n            },{\n                label : 'Replaced',\n                value : 2,\n                target: {\n                    name : 'status',\n                    value : 2,\n                }\n            },{\n                label : 'Returned',\n                value : 3,\n                target: {\n                    name : 'status',\n                    value : 3,\n                }\n            },{\n                label : 'Repaired',\n                value : 4,\n                target: {\n                    name : 'status',\n                    value : 4,\n                }\n            }\n        ];\n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalAdd}\n                    onClose={ () =>props.setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.supplier.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.supplier.error} style = {styles.select}>{props.responseMessage.supplier.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                // defaultValue = {options[0]}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                                // defaultValue={new Date()}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                    \n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport { Edit, Close } from '@material-ui/icons';\n\n\ninterface Show{\n    product       : any,\n    modalShow     : boolean,\n    user          : any,\n\n\n\n    initModalEdit() : void\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) => {\n\n    if(props.product){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () => props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.product.product_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.product.product_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Category</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.product.category.name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.serial_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{moment(props.product.delivery_date).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.warranty > 1 ? props.product.warranty + ' Months ' : props.product.warranty + \" Month\"}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{moment(props.product.warranty_start).format(\"LL\")}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{moment(new Date(props.product.warranty_end)).format(\"LL\")}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.reference_delivery_document}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.created_by.first_name + \" \" + props.product.created_by.last_name}</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Status</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{\n                                            props.product.status === 1 ? 'New' :\n                                            props.product.status === 2 ? 'Replaced'  :\n                                            props.product.status === 3 ? 'Returned' : \"Repaired\"\n                                        }</TableCell>\n                                    </TableRow>\n\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Remarks</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.product.remarks}</TableCell>\n                                    </TableRow>\n\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() => props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n    \n}\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress, Fab } from '@material-ui/core';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport {useSelector} from 'react-redux';\nimport {default as ProductCode} from '../Summary/Add';\n\n\ninterface Edit{\n    supplierState   : any,\n    modalEdit       : boolean,\n    updateInput     : any,\n    submit          : boolean,\n    responseMessage : any,\n    product         : any,\n    productInput    : any\n    params          :   any,\n\n    \n    submitForm(a:any, b:string) : void,\n    setModalEdit(a:boolean) : void,\n}\n\nconst styles = {\n    select : {\n        fontSize: '0.75rem',\n        color   : '#f11111',\n    }\n}\n\nconst buttonStyle = {\n    transform: 'scale(0.7)',\n    marginLeft: '-30px',\n    outline: 'none'\n}\n\nconst Edit = (props:Edit) => {\n\n\n    const productCode = useSelector( (state:any) => state.MasterCodes.data.data);\n    const [productOption, setProductOption] = React.useState();\n    const [openAddProduct, setOpenAddProduct] = React.useState(false);\n\n\n    React.useEffect( () => {\n        if(productCode && props.modalEdit){\n            initProduct();\n        }\n    },[productCode,props]);\n\n    const initProduct = () => {\n        let opt = productCode.data.map((value:any) => {\n            return {\n                label : value.product_code,\n                value : value.id,\n                target: {\n                    name  : 'product',\n                    value : value.id \n                }\n            }\n        })\n\n        setProductOption(opt);\n    }\n\n    const handleProductAdd = () => {\n        setOpenAddProduct(!openAddProduct);\n    }\n\n\n    let options;\n    if(props.supplierState){\n        options = props.supplierState.data.data.map((value:any) => {\n            return {\n                label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                value : value.id,\n                target: {\n                    name  : 'supplier',\n                    value : value.id \n                }\n            }\n        })\n    }else{\n        options = {\n            label : '',\n            value : '',\n            target: {\n                name : 'supplier',\n                value : ''\n            }\n        }\n    }\n\n    let status = [\n        {\n            label : 'New',\n            value : 1,\n            target: {\n                name : 'status',\n                value : 1,\n            }\n        },{\n            label : 'Replaced',\n            value : 2,\n            target: {\n                name : 'status',\n                value : 2,\n            }\n        },{\n            label : 'Returned',\n            value : 3,\n            target: {\n                name : 'status',\n                value : 3,\n            }\n        },{\n            label : 'Repaired',\n            value : 4,\n            target: {\n                name : 'status',\n                value : 4,\n            }\n        }\n    ];\n\n    if(props.product && productOption){\n        \n\n        return(\n            <React.Fragment>\n               <ProductCode open={openAddProduct} handleClose={handleProductAdd} per_page={props.params.per_page} page={props.params.page} />\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={props.modalEdit}\n                    onClose={ () =>props.setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === props.productInput.supplier)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\" style={{position:'relative'}}>\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-7\">\n                                            <Select\n                                                options={productOption}\n                                                // isClearable\n                                                name = 'product'\n                                                defaultValue = {productOption? productOption.find((element:any) => element.value === props.productInput.product): ''}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.product.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.product.error} style = {styles.select}>{props.responseMessage.product.message}</div>\n                                        </div>\n                                        <div className=\"col-md-1\">\n                                            <Fab color=\"primary\" aria-label=\"add\" style={buttonStyle} onClick = {handleProductAdd}>\n                                                <AddIcon />\n                                            </Fab>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.serial_number}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.serial_number.error}\n                                                helperText = {props.responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Status\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={status}\n                                                // isClearable\n                                                name = 'status'\n                                                defaultValue = {status.find((element:any) => element.value === props.productInput.status)}\n                                                onChange = {props.updateInput}\n                                                isDisabled = {props.submit}\n                                                className={props.responseMessage.status.error? \"select-error\" : \"\" }\n                                                required\n                                            />\n                                            <div hidden={!props.responseMessage.status.error} style = {styles.select}>{props.responseMessage.status.message}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"delivery_date\")}\n                                                value = {props.productInput.delivery_date}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.delivery_date.error}\n                                                helperText = {props.responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.reference_delivery_document}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.reference_delivery_document.error}\n                                                helperText = {props.responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(month)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.warranty}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty.error}\n                                                helperText = {props.responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"dd/MM/yyyy\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => props.updateInput(event,\"warranty_start\")}\n                                                value = {props.productInput.warranty_start}\n                                                // minDate = {new Date(props.productInput.delivery_date)}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.warranty_start.error}\n                                                helperText = {props.responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Remarks\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                // type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"remarks\"\n                                                onChange = {props.updateInput}\n                                                value = {props.productInput.remarks}\n                                                disabled = {props.submit}\n                                                required\n                                                error = {props.responseMessage.remarks.error}\n                                                helperText = {props.responseMessage.remarks.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => props.submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={props.submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </React.Fragment>\n        );\n    }else{\n        return null;\n    }\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.data.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.remarks} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    {/* <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell> */}\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Date</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Delivery Doc. </TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Serial Number</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty Start</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Warranty End</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Status</TableCell>   \n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                {/* <TableCell className=\"noWrap\" align=\"center\">{value.product_description}</TableCell> */}\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.delivery_date}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.reference_delivery_document}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.serial_number} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_start} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.warranty_end} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.status} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.remarks} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            {/* <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell> */}\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Button, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux,Filter as Filterer,NavigationTitle,MasterCodes} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport moment from 'moment';\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Show from './Show';\nimport Edit from './Edit';\nimport Upload from './Upload';\n\nconst Products = (props:any) =>{\n\n    const initErrroMessage = {\n        id                          : {error:false,message:''},\n        supplier                    : {error:false,message:''},\n        product                     : {error:false,message:''},\n        // product_description         : {error:false,message:''},\n        delivery_date               : {error:false,message:''},\n        reference_delivery_document : {error:false,message:''},\n        serial_number               : {error:false,message:''},\n        warranty                    : {error:false,message:''},\n        warranty_start              : {error:false,message:''},\n        status                      : {error:false,message:''},\n        remarks                     : {error:false,message:''},\n    };\n    \n    const initProductInput = {\n        id                  : '',\n        supplier            : '',\n        product             : '',\n        // product_description : '', \n        delivery_date       : '',\n        reference_delivery_document : '',\n        serial_number       : '',\n        warranty            : '',\n        warranty_start      : '',\n        status              : '',\n        remarks             : '',\n    \n    }\n\n    \n    // const [ page, setPage ] = React.useState(0);\n    const [ params, setParams ] = React.useState({\n        page     : 1,\n        per_page : 10\n    });\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n    const [filter, setFilter] = React.useState({\n        supplier            : {filter:'iet',key:''},\n        product             : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''},\n        status              : {filter:'iet',key:''}\n    });\n    const [ productCodeParam, setProductCodeParam ] = React.useState();\n\n\n    // const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n    const dispatch = useDispatch();\n\n\n    const getMasterCode = async () => {\n\t\tconst a = await Requests.MasterCodes.show({page:1,per_page:10});\n\n\t\tlet meta = a.data.meta;\n\n\t\tlet b;\n\n\t\tif(meta.per_page < meta.total){\n            b = await Requests.MasterCodes.show({page:1,per_page:meta.total});\n            setProductCodeParam({\n                page : 1,\n                per_page : meta.total\n            })    \n\t\t}else{\n            b = a;\n            setProductCodeParam({\n                page : 1,\n                per_page : 10\n            });    \n\t\t}\n\n        \n\t\tdispatch(MasterCodes(b));\n\n\t}\n\n\n    useEffect(()=>{\n        getMasterCode();\n\n        dispatch(NavigationTitle({title : 'Products',control:'products'}));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));  //for select option\n        dispatch(Filterer(filter,\"product\",params));\n        \n        // return () =>{\n        //     dispatch(NavigationTitle(''));\n        // }\n    },[props]);\n\n    \n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage(initErrroMessage);\n    };\n    \n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"product\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"product\",paran));\n        \n    };\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"product\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : moment(today).format('MM/DD/YYYY'),\n            warranty_start     : moment(today).format('MM/DD/YYYY'),\n        });\n\n        // console.log(productInput);\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n\n        console.log(productInfo);\n\n        setModalShow(true);\n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('MM/DD/YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product                     : product.product.id,\n            // product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n            status                      : product.status,\n            remarks                     : product.remarks,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n\n        \n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Add new product failed!!',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        \n        setResponseMessage(holder);\n    }\n\n    const status = (stat:any) => {\n        switch(stat){\n            case 1 : \n                return \"New\";\n            case 2 :\n                return \"Replaced\";\n            case 3 : \n                return \"Returned\";\n            case 4 :\n                return \"Repaired\";\n        }\n    }\n\n\n    return(\n        <React.Fragment>\n            <Edit\n                supplierState   = {supplierState}\n                modalEdit       = {modalEdit}\n                updateInput     = {updateInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                productInput    = {productInput}\n                product         = {product}\n                submitForm      = {submitForm}\n                setModalEdit    = {setModalEdit}\n                params          = {productCodeParam}\n            />\n            <Add \n                modalAdd        = {modalAdd}\n                setModalAdd     = {setModalAdd}\n                updateInput     = {updateInput}\n                productInput    = {productInput}\n                submit          = {submit}\n                responseMessage = {responseMessage}\n                supplierState   = {supplierState}\n                submitForm      = {submitForm}\n                setProductInput = {setProductInput}\n                params          = {productCodeParam}\n            />\n            <Show \n                product       = {product}\n                modalShow     = {modalShow}\n                user          = {user}\n                initModalEdit = {initModalEdit}\n                setModalShow  = {setModalShow}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>\n                            <TableCell align=\"center\">Status</TableCell>                                     \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params}/>\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_code}>{key.product.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product.product_name}>{key.product.product_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"center\" title={status(key.status)}>{status(key.status)}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                { user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                    \n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n                                            className = \"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                    : ''\n                                }\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={productState ? params.page-1: 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={(handleChangeRowsPerPage)}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const ref:any = {\n        supplier_code       : React.useRef(null),\n        supplier_name       : React.useRef(null),\n        address             : React.useRef(null),\n        contact_person      : React.useRef(null),\n        contact_number      : React.useRef(null),\n        email               : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const reset = () => {\n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"supplier\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"supplier\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"supplier\",props.params));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {props.filter.supplier_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_code}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_code.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            {props.filter.supplier_code.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")} disabled={props.filter.supplier_code.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {props.filter.supplier_name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.supplier_name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.supplier_name.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier_name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            {props.filter.supplier_name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")} disabled={props.filter.supplier_name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {props.filter.address.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.address}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.address.filter}\n                                onChange={setFilterControl}\n                                name = \"address\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            {props.filter.address.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")} disabled={props.filter.address.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {props.filter.contact_person.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_person}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_person.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_person\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            {props.filter.contact_person.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")} disabled={props.filter.contact_person.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {props.filter.contact_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.contact_number}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.contact_number.filter}\n                                onChange={setFilterControl}\n                                name = \"contact_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            {props.filter.contact_number.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")} disabled={props.filter.contact_number.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\n\ninterface Add{\n    modalAdd                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalAdd(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\n\nconst Add  = (props:Add) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalAdd}\n            onClose={ () =>props.setModalAdd(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"add\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact No.\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                        \n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions> {/*className=\"product-modal-footer\"*/}\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"add\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n        \n                <Button onClick={() =>props.setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default Add;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, TextField, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { Save, Close } from '@material-ui/icons';\n\n\ninterface Edit{\n    modalEdit                   :   boolean,\n    updateInput                 :   any,\n    supplierInput               :   any,\n    submit                      :   boolean,\n    responseMessage             :   any,\n\n\n\n    setModalEdit(a:boolean)     :   void,\n    submitForm(a:any,b:string)  :   void,\n}\n\nconst Edit = (props:Edit) =>{\n    return(\n        <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            open={props.modalEdit}\n            onClose={ () =>props.setModalEdit(false) }\n            aria-labelledby=\"max-width-dialog-title\"\n        >\n            <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n            <DialogContent>\n\n                <Paper className=\"text-center\">\n                    <form className =\"form-group\" onSubmit={(event:any) => props.submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Code\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_code\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_code}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.supplier_code.error}\n                                        helperText = {props.responseMessage.supplier_code.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Supplier Name\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"supplier_name\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.supplier_name}\n                                        disabled = {props.submit}\n                                        error = {props.responseMessage.supplier_name.error}\n                                        helperText = {props.responseMessage.supplier_name.message}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Address\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"address\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.address}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.address.error}\n                                        helperText = {props.responseMessage.address.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    TIN\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"tin\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.tin}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.tin.error}\n                                        helperText = {props.responseMessage.tin.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_person\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_person}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_person.error}\n                                        helperText = {props.responseMessage.contact_person.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Contact Person\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"text\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"contact_number\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.contact_number}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.contact_number.error}\n                                        helperText = {props.responseMessage.contact_number.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <div className=\"row align-items-center\">\n                                <div className=\"col-md-4 font-bolder\">\n                                    Email\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <TextField\n                                        type=\"email\"\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        className=\"full-width product-reduce-margin-text\"\n                                        name = \"email\"\n                                        onChange = {props.updateInput}\n                                        value = {props.supplierInput.email}\n                                        disabled = {props.submit}\n                                        required\n                                        error = {props.responseMessage.email.error}\n                                        helperText = {props.responseMessage.email.message}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"submit\" style={{display:'none'}} />\n                    </form>\n                </Paper>\n\n            </DialogContent>\n            <DialogActions className=\"product-modal-footer\">\n                \n                <Button \n                    onClick={(event:any) => props.submitForm(event,\"edit\")} \n                    color=\"primary\" \n                    variant=\"contained\"\n                    disabled={props.submit}\n                    form=\"submit-edit-form\"\n                >  \n                    <Save />\n                    Submit\n                    <CircularProgress style={{display: !props.submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                </Button>\n                <Button onClick={() =>props.setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                    <Close />   \n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, Paper, Table, TableBody, TableRow, TableCell, DialogActions, Button } from '@material-ui/core';\nimport { Edit, Close } from '@material-ui/icons';\n\ninterface Show{\n    supplier                : any,\n    modalShow               : boolean,\n    user                    : any,\n    \n    initModalEdit()         : void,\n    setModalShow(a:boolean) : void,\n}\n\nconst Show = (props:Show) =>{\n\n    if(props.supplier){\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={props.modalShow}\n                onClose={ () =>props.setModalShow(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"product-modal-table\">\n                            <Table className=\"product-modal-list\">\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.supplier_code}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.supplier_name}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.tin}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\" title={props.supplier.address}>{props.supplier.address}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.contact_person}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.contact_number}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                        <TableCell className=\"auto-overflow\" align=\"left\">{props.supplier.email}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    {\n                        props.user.level !== 3 ?\n                            <Button \n                                onClick={props.initModalEdit} \n                                color=\"primary\" \n                                variant=\"contained\"\n                            >  \n                                <Edit />\n                                Edit\n                            </Button>\n                        : null\n                    }\n                   \n                    <Button onClick={() =>props.setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n};\n\n\nexport default Show;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n\n\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Remarks</TableCell>   \n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.email} </TableCell>   \n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Supplier Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Address</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact Person</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Contact No.</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Email</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.supplier_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.address}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_person}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.contact_number}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.email}</TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Filter as Filterer } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogContent, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport Show from './Show';\nimport Upload from './Upload';\n\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const [filter, setFilter] = React.useState({\n        supplier_code       : {filter:'iet',key:''},\n        supplier_name       : {filter:'iet',key:''},\n        address             : {filter:'iet',key:''},\n        contact_person      : {filter:'iet',key:''},\n        contact_number      : {filter:'iet',key:''},\n        email               : {filter:'iet',key:''},\n    });\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n    const [params, setParams] = React.useState({page:1,per_page:10});\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        result      : [],\n        open        : false,\n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n    const user  = useSelector( (state:any) => state.UserAccount.data);\n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Suppliers', control:'suppliers' }));\n        dispatch(Filterer(filter,\"supplier\",params));\n        \n\n        // return () =>{\n        //     dispatch(NavigationTitle(''));\n        // };\n    },[props]);\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    ); \n\n    const uploadFile = () => {\n        togglePointerEvents(false)\n\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n        \n    }\n\n\n    const uploadSheet = async (file:File) => {\n\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"supplier\",params));\n\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n\n                return;\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage(initSupplierError);\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number) =>{\n\n        let param = params;\n        param.page = newPage+1;\n        setParams(param);\n\n        dispatch(Filterer(filter,\"supplier\",param));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"supplier\",paran));\n    };\n\n    const updateInput = (event:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    type action = \"edit\" | \"add-file\" | \"add\";\n\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Add new supplier failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            <Show \n                supplier        =   {supplier}\n                modalShow       =   {modalShow}\n                user            =   {user}\n                initModalEdit   =   {initModalEdit}\n                setModalShow    =   {setModalShow}\n            />\n            <Edit\n                modalEdit       =   {modalEdit}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalEdit    =   {setModalEdit}\n                submitForm      =   {submitForm}\n            />\n            <Add\n                modalAdd        =   {modalAdd}\n                updateInput     =   {updateInput}\n                supplierInput   =   {supplierInput}\n                submit          =   {submit}\n                responseMessage =   {responseMessage}\n                setModalAdd     =   {setModalAdd}\n                submitForm      =   {submitForm}\n            />\n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n\n            {uploadFileModal()}\n\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                {\n                                    user.level !== 3 ?\n                                    <React.Fragment>\n                                        <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                            ADD NEW\n                                        </Button>\n\n                                        <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                        <Button \n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={(event)=>{\n                                                event.persist();\n                                                file.click()\n                                            }}\n\n                                            className=\"product-add-file\"\n                                        >\n                                            <CloudUpload />&nbsp;  \n                                            Import file\n                                        </Button>\n                                    </React.Fragment>\n                                : null\n                            }\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={supplierState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = (props:any) => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n    const ref:any = {\n        username        : React.useRef(null),\n        name            : React.useRef(null),\n        company         : React.useRef(null),\n        email           : React.useRef(null),\n        level           : React.useRef(null),\n        activated       : React.useRef(null)\n    }\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        props.setFilter({\n            ...props.filter,\n            [event.target.name] : {\n                ...props.filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        // reset();\n        if(action === \"filter\"){\n            reset();\n            if(props.filter[control].key !== ''){\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }else{\n            if(props.filter[control].key !== ''){\n                let a = props.filter;\n\n                props.setFilter({\n                    ...props.filter,\n                    [control] : {\n                        ...props.filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"user\",props.params));\n            }else{\n                setPopper({\n                    ...popper,\n                    [control] : null,\n                })\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n\n                // reset();\n                \n                let a:any = props.filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"user\",props.params));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                ref[e.target.name].current.blur();\n                dispatch(Filterer(props.filter,\"user\",props.params));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {props.filter.username.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = { ref.username }\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.username.filter}\n                                onChange={setFilterControl}\n                                name = \"username\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            {props.filter.username.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")} disabled={props.filter.username.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {props.filter.name.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.name}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.name.filter}\n                                onChange={setFilterControl}\n                                name = \"name\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            {props.filter.name.key === '' ?'Close' : 'Clear'}                            \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")} disabled={props.filter.name.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {props.filter.company.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.company}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.company.filter}\n                                onChange={setFilterControl}\n                                name = \"company\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            {props.filter.company.key === '' ?'Close' : 'Clear'}                                                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")} disabled = { props.filter.company.key === '' }>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"anyrandomstring\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {props.filter.email.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                    inputRef = {ref.email}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={props.filter.email.filter}\n                                onChange={setFilterControl}\n                                name = \"email\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            {props.filter.email.key === '' ?'Close' : 'Clear'}                        \n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")} disabled={props.filter.email.key === ''}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.level.key}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={0}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        <MenuItem value={3}>Viewer</MenuItem>\n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,level:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={props.filter.activated.key}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={0} >All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={2}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>setPopper({...popper,activated:null})}>\n                            Close\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search,Filter as Filterer } from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n\n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        username        : {filter:'iet',key:''},\n        name            : {filter:'iet',key:''},\n        company         : {filter:'iet',key:''},\n        email           : {filter:'iet',key:''},\n        level           : {filter:'iet',key:0},\n        activated       : {filter:'iet',key:0},\n    });\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : 1,\n        level               : 1,\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Users',control:'users'}));\n        dispatch(Filterer(filter,\"user\",params));\n\n        // return () => {\n        //     dispatch(NavigationTitle(''));\n        // }\n    },[props]);\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        console.log(newPage);\n\n        dispatch(Filterer(filter,\"user\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        \n        let paran = {page:1,per_page:val};\n\n        setParams(paran);\n        dispatch(Filterer(filter,\"user\",paran));\n    };\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow> */}\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : users.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}},\n                {label:'Viewer', value : 3,target:{name:'level',value:3}},\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => element.value === usersInput.activated)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter filter={filter} setFilter={setFilter} params={params} />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}>{key.level === 1 ? 'Admin' : key.level == 2 ? 'Encoder' : 'Viewer'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={usersState ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React from 'react';\nimport \"./style.scss\";\n\nconst NotFound = () => {\n    return (\n        <div id=\"notfound\">\n\t\t    <div className=\"notfound\">\n                <div className=\"notfound-404\">\n                    <h1>:(</h1>\n                </div>\n                <h2>404 - Page not found</h2>\n                <p>The page you are looking for might have been removed had its name changed or is temporarily unavailable.</p>\n                <a href=\"/\">home page</a>\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound;","import React from 'react';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, FormControl, InputLabel, MenuItem, FormControlLabel, DialogActions, TextField, makeStyles, Theme, createStyles, Fab } from '@material-ui/core';\nimport { Requests } from 'Services';\nimport Select from 'react-select';\nimport AddIcon from '@material-ui/icons/Add';\nimport Close from '@material-ui/icons/Close';\nimport { useSnackbar } from 'notistack';\nimport {MasterCodes} from 'Redux/Actions'\nimport {useDispatch} from 'react-redux';\nimport Category from './Category';\nimport { inputCSS } from 'react-select/src/components/Input';\n\ninterface Add {\n    open : boolean,\n    handleClose : any,\n\n    per_page : number,\n    page : number,\n    input : any,\n    setInput : any,\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: 0,\n            marginRight: 0,\n            width : '100%',\n            marginBottom: '10px',\n            marginTop:'0'\n            \n        },\n        dense: {\n            marginTop: theme.spacing(0),\n        },\n        menu: {\n            width: 200,\n        },\n        dialog : {\n            overflow: 'visible'\n        },\n        select : {\n            background : 'white',\n            position : 'absolute',\n            color : '#757575',\n            marginTop : '-10px',\n            left : '14px',\n            zIndex : 1,\n            // marginLeft : '40px',\n            // fontSize : '12px', \n        },\n        category : {\n            width : '85%'\n        },\n        addCategory : {\n           marginTop : '-46px',\n           right : '15px',\n           position : 'absolute',\n           transform : 'scale(0.7)',\n           outline:'none'\n        },\n        categoryError : {\n            fontSize: '0.75rem',\n            color   : '#f11111',\n            position : 'absolute',\n        }\n    }),\n);\n\n\nconst Edit = (props:Add) => {\n    const classes = useStyles(props);\n\n    const dispatch = useDispatch();\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ category, setCategory ] = React.useState();\n    const [ option, setOption ] = React.useState();\n    // const [input, setInput] = React.useState({\n    //     product_code : '',\n    //     product_name : '',\n    //     category     : '',\n    // });\n    const [submit, setSubmit ] = React.useState(false);\n    const [error, setError] = React.useState({\n        product_code : {error: false, message : ''},\n        product_name : {error: false, message : ''},\n        category     : {error: false, message : ''}\n    });\n    const [ categoryHandle, setCategoryHandler ] = React.useState(false);\n\n\n    const categoryParams = {\n        per_page : 10,\n        page : 1,\n    }\n\n\n    React.useEffect( () => {\n        if(props.open){\n            queryCategory();\n        }\n    },[props]);\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const queryCategory = async () => {\n        const a = await Requests.Category.show(categoryParams);\n\n        let meta = a.data.meta;\n\n        let opti:any;\n\n        if(meta.total > meta.per_page){\n            let b =  await Requests.Category.show({per_page:meta.total,page:1});\n            setCategory(b.data.data);\n            opti = b.data.data;\n            categoryParams.page = 1;\n            categoryParams.per_page = meta.total; \n        }else{\n            setCategory(a.data.data);\n            opti = a.data.data;\n        }\n\n\n\n        let opt = opti.map((value:any) => {\n            return {\n                label : value.name,\n                value : value.id,\n                target: {\n                    name  : 'category',\n                    value : value.id \n                }\n            }\n        })\n\n        setOption(opt);\n    }\n\n    const handleChangeText = (event:any) => {\n        props.setInput({\n            ...props.input,\n            [event.target.name] : event.target.value\n        });\n    }\n\n    // const reset = () => {\n\n    //     // let a = {\n            \n    //     // }\n\n\n        \n\n    //     console.log(error);\n    // }\n\n\n    // const checkNull = () => {\n    //     if(input.product_code === ''){\n    //         setError({\n    //             ...error,\n    //             product_code : {error: true, message : 'Product Code is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.product_name === ''){\n    //         setError({\n    //             ...error,\n    //             product_name : {error: true, message : 'Product Name is required'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     if(input.category === ''){\n    //         setError({\n    //             ...error,\n    //             category : {error: true, message : 'Please select category'}\n    //         });\n    //         setSubmit(false);\n    //         return true;\n    //     }\n\n    //     setSubmit(false);\n    //     return false;\n    // }\n\n\n\n\n\n    const submitForm = async (event:any) => {\n              \n        setError({\n            product_code : {error: false, message : ''},\n            product_name : {error: false, message : ''},\n            category : {error: false, message : ''}\n        }); \n        setSubmit(true);  \n        event.preventDefault();\n        \n\n        // if(!checkNull()){\n        //     return;\n        // }\n\n        let a = await Requests.MasterCodes.update(props.input);\n\n\n        if(a.network_error){\n            enqueueSnackbar(\"Something went wrong. Plese try again later.\",{variant:'error',action:actions});\n        }else{\n            if(a.status === 200){\n                enqueueSnackbar(\"Successfully Updated Product Code\",{variant:\"success\",action:actions});\n\n                let a = await Requests.MasterCodes.show({per_page:props.per_page,page:props.page});\n\n                if(a.status === 200 ){\n                    dispatch(MasterCodes(a));\n                }\n\n                \n                props.handleClose();\n            }else{\n\n                if(a.status === 406){\n                    updateErrorState(a.data.errors);\n                }\n                enqueueSnackbar(\"Update product code failed\",{variant:'error',action:actions});\n            }\n        }\n\n        setSubmit(false);\n        return;\n    }\n\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = error;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setError(holder);\n    }\n\n    \n    return (\n        props.open ?\n        <React.Fragment>\n            <Category\n                params = {categoryParams}\n                open = {categoryHandle}\n                setOpen = {setCategoryHandler}\n                setOption = {setOption}\n            />\n            <Dialog\n                disableBackdropClick\n                maxWidth=\"xs\"\n                open={props.open}\n                onClose={props.handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                classes = {{ paperScrollPaper: classes.dialog }}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Edit Product Code</DialogTitle>\n                <DialogContent className={classes.dialog}>\n                    <form onSubmit={submitForm} id=\"master-file\">\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Code\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_code\"\n                            value = {props.input.product_code}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_code.error}\n                            helperText = {error.product_code.error ? error.product_code.message : ''}\n                            disabled={submit}\n                        />\n                        \n                        <TextField\n                            id=\"outlined-email-input\"\n                            label=\"Product Name\"\n                            className={classes.textField}\n                            type=\"text\"\n                            name=\"product_name\"\n                            value = {props.input.product_name}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange = {handleChangeText}\n                            error = {error.product_name.error  ? true : false}\n                            helperText = {error.product_name.message}\n                            disabled={submit}\n                        />\n\n                        <div style={{position:'relative'}}>\n                            <label className={classes.select}>Category</label>\n                            <Select\n                                options={option}\n                                // isClearable\n                                name = 'category'\n                                onChange = {handleChangeText}\n                                // isDisabled = {props.submit}\n                                className={/*error.category.error? */classes.category/* + \"select-error\" : classes.category */}\n                                required\n                                disabled={submit}\n                            />\n                            <div hidden={!error.category.error} /*style = {styles.select}*/ className={classes.categoryError}>{error.category.message}</div>\n                        </div>\n\n                        <Fab color=\"primary\" aria-label=\"add\" className={classes.addCategory} onClick = { () => setCategoryHandler(true) }>\n                            <AddIcon />\n                        </Fab>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button disabled={submit} onClick={props.handleClose} color=\"secondary\" variant=\"contained\">\n                        Close\n                    </Button>\n\n                    <Button form=\"id\" disabled={submit} onClick={submitForm} color=\"primary\" variant=\"contained\">\n                        Submit\n                    </Button>\n                </DialogActions>\n          </Dialog>\n        </React.Fragment>\n\n        : null\n      );\n}\n\nexport default Edit;","import React from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button, Table, TableHead, TableRow, TableCell, TableBody, Paper, Collapse } from '@material-ui/core';\n\ninterface Upload{\n    upload : any,\n    setUpload : any;\n}\n\nconst Upload = (props:Upload) => {\n\n    const handleClose = () => {\n        props.setUpload({\n            ...props.upload,\n            open    : false\n        });\n    };\n\n\n    const skipped = {\n        overflow : 'auto',\n        maxHeight : '250px',\n        maxWidth : '100%'\n    }\n\n    const noWrap = {\n        whiteSpace : 'nowrap',\n    }\n\n\n\n    if(props.upload.open){\n\n        return (\n            <Dialog\n                fullWidth\n                maxWidth=\"md\"\n                open={props.upload.open}\n                onClose={handleClose}\n                aria-labelledby=\"max-width-dialog-title\"\n                disableBackdropClick={true}\n            >\n                <DialogTitle id=\"max-width-dialog-title\">Result</DialogTitle>\n                <DialogContent>\n                    <h5>Skipped Rows</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor : '#bdbdda'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Error Message</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.errors.length !== 0 ?\n                                        props.upload.result.errors.map((value:any,key:any) => (\n                                            <TableRow hover  key={key}>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.data.category} </TableCell>\n                                                <TableCell className=\"noWrap\" align=\"left\">{value.message} </TableCell>                                            \n                                            </TableRow>\n                                        ))\n                                    :\n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                      \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                            \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                    <br />\n                    <h5>Successfully Imported</h5>\n                    <Paper style={skipped}>\n                        <Table size=\"small\">\n                            <TableHead style={{backgroundColor:'#ed143d'}}>\n                                <TableRow>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Code</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Product Name</TableCell>\n                                    <TableCell className=\"noWrap\" align=\"center\">Category</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {\n                                    props.upload.result.success.length !== 0 ?\n                                        props.upload.result.success.map((value:any,key:any) => (\n                                            <TableRow key={key} hover>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_code}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.product_name}</TableCell>\n                                                <TableCell className=\"noWrap\" align=\"center\">{value.category} </TableCell>                                       \n                                            </TableRow>\n                                        ))\n                                    : \n                                        <TableRow>\n                                            <TableCell className=\"noWrap\" align=\"center\">Empty</TableCell>\n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                            \n                                            <TableCell className=\"noWrap\" align=\"center\">&nbsp;</TableCell>                                           \n                                        </TableRow>\n                                }\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }else{\n        return null;\n    }\n}\n\n\nexport default Upload;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {NavigationTitle,MasterCodes,Filter as Filterer} from 'Redux/Actions';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, CircularProgress, DialogContent } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Filter from './Filter';\nimport Add from './Add';\nimport Edit from './Edit';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from '../../../Services';\nimport { Close, CloudUpload } from '@material-ui/icons';\nimport Upload from './Upload';\n\n\n\nconst Summary = (props:any) => {\n\n    const dispatch = useDispatch();\n    const masterCode = useSelector( (state:any) => state.MasterCodes.data );\n\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar    \n    const [ params, setParams] = React.useState({page:1,per_page:10});\n    const [filter, setFilter] = React.useState({\n        product_code     : {filter:'iet',key:''},\n        product_name     : {filter:'iet',key:''},\n        category         : {filter:'iet',key:''},\n    });\n    const [ open, setOpen ] = React.useState(false);\n    \n    /**for file upload */\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        open       : false,\n        result    : [], \n    });\n\n    let file:HTMLInputElement;\n\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = () => {\n        togglePointerEvents(false);\n        if(file.files.length !== 0){\n            const selectedFile = file.files[0];\n            let filename = selectedFile.name.split('.').pop();\n            \n            if( !(filename === 'xls' || filename === 'xlsx')) {\n                enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }else{\n                uploadSheet(selectedFile);\n            }\n        }\n    }\n\n    const uploadSheet = async (file:File) => {\n\n        \n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.MasterCodes.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(\"Spreadsheet format is invalid\",{variant:'error',action:actions});\n                togglePointerEvents(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n                \n                enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                togglePointerEvents(true);\n                dispatch(Filterer(filter,\"master\",params));\n                setUpload({\n                    open      : true,\n                    uploading : false,\n                    result    : response.data\n                });\n                return;\n\n            default :\n                enqueueSnackbar('Something went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{textAlign:\"center\"}}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    /**********************/\n\n\n\n\n    //************** for edit\n\n    const [input, setInput] = React.useState({\n        id           : '',\n        product_code : '',\n        product_name : '',\n        category     : '',\n    });\n    const [openEdit, setOpenEdit] = React.useState(false);\n\n    const handleEdit = () => {\n        setOpenEdit(!openEdit)\n    }\n\n    //**************\n\n\n\n    React.useEffect(()=>{\n        dispatch(NavigationTitle({title : 'Product Master File Maintenance',control:\"product_master_file_maintenance\"}));\n        dispatch(Filterer(filter,\"master\",params));\n        \n        // return () => {\n        //     dispatch(NavigationTitle(''));\n        // }\n    },[])\n\n    const handleAdd = () => {\n        setOpen(!open);\n    }\n\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        // setPage(newPage);\n\n        let pams:any = params;\n        params.page=newPage+1;\n        setParams(pams);\n\n        dispatch(Filterer(filter,\"master\",pams));\n    }\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const val:any = event.target.value;\n        let paran = {page:1,per_page:val};\n        setParams(paran);\n        dispatch(Filterer(filter,\"master\",paran));\n    };\n\n    const initEdit = (a:any) => {\n\n        setInput({\n            id : a.id,\n            product_code : a.product_code,\n            product_name : a.product_name,\n            category : a.category.id\n        });\n        setOpenEdit(true);\n    }\n\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"center\"><Skeleton variant=\"rect\" /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n    \n    return(\n        <React.Fragment>\n            <Add open={open} handleClose={handleAdd} per_page={params.per_page} page={params.page} />\n            <Edit open={openEdit} handleClose={handleEdit} per_page={params.per_page} page={params.page}  input = {input} setInput = {setInput}/>\n           \n            <Upload\n                upload      = {upload}\n                setUpload   = {setUpload}\n            />\n            {uploadFileModal()}\n            \n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\" size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"left\">Product Code</TableCell>\n                            <TableCell align=\"left\">Product Name</TableCell>\n                            <TableCell align=\"left\">Category</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        {/* <Filter filter={filter} setFilter={setFilter} params={params} /> */}\n                        {\n                            masterCode ?\n                                masterCode.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initEdit(key)} >\n                                        <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_name}>{key.product_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.category}>{key.category.name}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   \n                            skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () => handleAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[10,25,50,100]}\n                                colSpan={0}\n                                count={masterCode ? masterCode.data.meta.total : 10}\n                                rowsPerPage={params.per_page}\n                                page={masterCode ? params.page-1 : 0}\n                                onChangePage={handleChangePage}\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n\n}\n\nexport default Summary;","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.exist()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home,\n        exact : true\n    },{\n        path : \"/products\",\n        component : Component.Products,\n        exact : false\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers,\n        exact : false\n    },{\n        path : \"/users\",\n        component : Component.Users,\n        exact : false\n    },{\n        path : \"/reports\",\n        component : Component.Reports,\n        exact : false\n    },{\n        path : '/settings',\n        component : Component.Settings,\n        exact : false\n    },{\n        path : '/summary',\n        component : Component.Summary,\n        exact : false\n    }\n];\n","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\nimport { Token, Requests } from 'Services';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { UserAccount as User } from 'Redux/Actions';\n\nconst Navigations = (props:any) =>{\n\n\n    const [ initialized, setInitialized ] = React.useState(false);\n    const updateUser = useDispatch();\n\n    React.useEffect(()=>{\n        if(!initialized){\n            checkToken();\n        }\n    },[initialized]);\n\n\n    const checkToken = async () => {\n        if(Token.exist()){\n            const id:any = jwt_decode(Token.get());\n            const user:Requests.Format = await Requests.User.get(id.sub);\n            if(user.status === 200){\n                updateUser(User(user.data));\n            }else{\n                Token.remove();\n            }\n        }\n\n        setInitialized(true);\n    }\n\n\n\n    if(!initialized){\n        return null;\n    }\n\n\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n            \n                <Switch>\n                   {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                    \n                    \n                    <Route path =\"/\">\n                            <Component.Navigation>\n                            <Switch>\n                                {\n                                    InsideNav.map((element,index) => \n                                        <Route exact={element.exact} path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                        // <Route exact path ={element.path} component={element.component} key={index} />\n                                    )\n                                }\n                            \n                                {/* <Route exact path =\"/\" render= {(props) => <ComponentMiddleware {...props} component={Component.Home} />}/>\n                                <Route exact path =\"/products\" render= {(props) => <ComponentMiddleware {...props} component={Component.Products} />}/>\n                                <Route exact path =\"/suppliers\" render= {(props) => <ComponentMiddleware {...props} component={Component.Suppliers} />}/>\n                                <Route exact path =\"/users\" render= {(props) => <ComponentMiddleware {...props} component={Component.Users} />}/>\n                                <Route exact path =\"/reports\" render= {(props) => <ComponentMiddleware {...props} component={Component.Reports} />}/>\n                                <Route exact path =\"/settings\" render= {(props) => <ComponentMiddleware {...props} component={Component.Settings} />}/> */}\n                                <Route component={Component.NotFound} />\n                                </Switch>\n\n\n                            </Component.Navigation>\n                            \n                    </Route>\n                    \n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT} from '../Actions/Types';\n\nconst initialState = {\n\ttitle \t: '',\n\tcontrol : '', \n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttitle : action.payload.title,\n\t\t\t\tcontrol : action.payload.control,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { MasterCodes as MC } from '../Actions/Types';\n\nconst initialState:any = {\n\tdata : ''\n};\n\nconst MasterCodes = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase MC:\n\t\t\treturn {\n\t\t\t\tdata : action.payload,\n\t\t\t}\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default MasterCodes;","import { Category as ct } from '../Actions/Types';\n\nconst initialState:any = [];\n\nconst Category = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase ct:\n      \t\treturn state = action.payload;\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Category;","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\nimport MasterCodes from './MasterCodes';\nimport Category from './Category';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search,\n    MasterCodes,\n    Category,\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst a = (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__();\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  a ? \n    compose(\n      applyMiddleware(...middleware),a\n    )\n    :\n    compose(\n      applyMiddleware(...middleware),\n    )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}