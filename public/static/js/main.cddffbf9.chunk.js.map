{"version":3,"sources":["Services/Token.ts","Services/ServerUrl.ts","Services/Requests/StaticMethods.ts","Services/Requests/Auth.ts","Services/Requests/User.ts","Services/Requests/Products.ts","Services/Requests/Suppliers.ts","Redux/Actions/Types.ts","Redux/Actions/UserAccount.ts","Redux/Actions/NavigationTitle.ts","Redux/Actions/Products.ts","Redux/Actions/Suppliers.ts","Redux/Actions/Users.ts","Redux/Actions/Search.ts","Redux/Actions/Filter.ts","Middleware/ComponentMiddleware.tsx","Components/Login/index.tsx","Components/Main/Home/index.tsx","Components/Main/Navigation/Topbar.tsx","Components/Main/Navigation/SidebarDesktop.tsx","Components/Main/Navigation/SidebarMobile.tsx","Components/Main/Navigation/SidebarList.tsx","Components/Main/Navigation/index.tsx","Components/Main/Products/Filter.tsx","Components/Main/Products/index.tsx","Components/Main/Reports/index.tsx","Components/Main/Settings/index.tsx","Components/Main/Suppliers/Filter.tsx","Components/Main/Suppliers/index.tsx","Components/Main/Users/Filter.tsx","Components/Main/Users/index.tsx","Middleware/LoginMiddleware.tsx","Routes/OutsideNav.ts","Routes/InsideNav.ts","Routes/index.tsx","Redux/Reducers/UserAccount.ts","Redux/Reducers/NavigationTitle.ts","Redux/Reducers/Products.ts","Redux/Reducers/Suppliers.ts","Redux/Reducers/Users.ts","Redux/Reducers/Search.ts","Redux/Reducers/index.ts","Redux/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Token","token","a","Date","setMinutes","getMinutes","Cookies","set","expires","get","this","save","remove","exist","update","undefined","Requests","Auth","check","network_error","status","prefix","Url","login","logout","refresh","user","products","suppliers","StaticMethods","Object","classCallCheck","createClass","key","value","_recall","recall","_x","apply","arguments","toString","_ref","asyncToGenerator","regenerator_default","mark","_callee","format","wrap","_context","prev","next","error","response","abrupt","Promise","resolve","setTimeout","params","callback","data","stop","_x2","_handle_error","_callee2","b","_context2","retry","localStorage","getItem","parseInt","_x3","_retry","_callee3","counter","_context3","setItem","String","delay","_x4","_x5","_delay","_callee4","ms","_context4","_x6","Content-Type","Accept","Authorization","_refresh","_callee5","header","_context5","axios","method","url","headers","then","catch","sleeper","x","username","password","esm_get","getPrototypeOf","_this","call","sent","_ref2","_this2","User","page","per_page","show","id","_ref3","_this3","_ref4","_callee7","_context7","_this4","add","_x8","search","_ref5","_callee9","_context9","_this5","_x10","filter","URLSearchParams","_ref6","_callee11","_context11","_this6","_x12","Products","product","file","formData","FormData","append","post","addFile","Suppliers","supplier","Search","UserAccount","dispatch","type","payload","NavigationTitle","t0","t1","t2","t3","Users","Actions_Search","sr","target","query","Filter","component","keys","forEach","ComponentMiddleware","props","_React$useState","React","useState","_React$useState2","slicedToArray","finish","setFinish","_React$useState3","_React$useState4","setToken","updateUser","useDispatch","useEffect","_check","valid","jwt_decode","sub","react_default","createElement","react_router","to","pathname","state","from","location","withRouter","submit","setSubmit","credentials","setCredentials","_React$useState5","message","_React$useState6","setError","update_input_text","event","_objectSpread","defineProperty","name","submitForm","jwt","preventDefault","checkUser","activated","returnUrl","history","push","Container","maxWidth","className","src","alt","Card","CardHeader","avatar","Avatar","AccountCircle","CardContent","onSubmit","TextField","label","autoComplete","margin","variant","disabled","onChange","required","helperText","dangerouslySetInnerHTML","__html","Button","color","CircularProgress","useSelector","style","marginTop","level","Fragment","onClick","AssignmentInd","Assignment","AssignmentTurnedIn","Assessment","SupervisorAccount","esm_Settings","Topbar","initUsersError","first_name","last_name","company","email","confirm_password","usersInput","setUsersInput","modalEdit","setModalEdit","_React$useState7","_React$useState8","responseMessage","setResponseMessage","_useSnackbar","useSnackbar","enqueueSnackbar","closeSnackbar","actions","Close","updateInput","Topbar_objectSpread","resetError","persist","document","getElementsByTagName","pointerEvents","cursor","action","window","reload","updateErrorState","errors","holder","Dialog","fullWidth","open","onClose","aria-labelledby","DialogTitle","textAlign","DialogContent","overflow","Paper","display","DialogActions","form","Save","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","width","sidebar","toggleSidebar","swipeDrawer","Typography","noWrap","textTransform","menu_title","toggleUser","ArrowDropDown","FormGroup","row","FormControlLabel","control","Checkbox","checked","SearchControl","marginLeft","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","Edit","ExitToApp","SidebarDesktop","Drawer","sidebar_list","Divider","SidebarMobile","role","logo","list","sidebar_properties","List","map","text","index","ListItem","button","setSidebarProps","sidebarProps","ListItemIcon","icon","ListItemText","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ArrowRightAlt","Home","Laptop","Commute","SupervisedUserCircle","Settings","setSidebar","swipe","setSwipe","innerWidth","setWidth","_React$useState9","_React$useState10","setSearch","_React$useState11","_React$useState12","setUser","reduxUser","title","addEventListener","updateBrowserWidth","sidebars","checkQueryParams","removeEventListener","param","toggleSearch","material_ui_pickers_esm","utils","DateFnsUtils","SwipeableDrawer","onOpen","Navigation_SidebarMobile","Navigation_SidebarList","Navigation_Topbar","currentTarget","navigate","Navigation_SidebarDesktop","Backdrop","children","_useState","product_code","product_description","serial_number","warranty","warranty_start","warranty_end","_useState2","popper","setPopper","_useState3","_useState4","setFilter","reset","controller","Filter_objectSpread","setText","setFilterControl","submitFilter","Filterer","onKey","e","length","TableRow","TableCell","align","onFocus","onKeyDown","Popper","FormControl","Select","MenuItem","selected","allowKeyboardControl","animateYearScrolling","moment","initErrroMessage","delivery_date","reference_delivery_document","initProductInput","setPage","modalShow","setModalShow","modalAdd","setModalAdd","setProduct","_React$useState13","uploading","_React$useState14","upload","setUpload","_React$useState15","_React$useState16","productInput","setProductInput","_React$useState17","_React$useState18","productState","supplierState","supplierRedux","checkParams","productRedux","checkExcelFormat","_loop","i","_ret","date","togglePointerEvents","v","Products_objectSpread","element","initModalEdit","Table","TableBody","supplier_code","setFullYear","getFullYear","created_by","options","supplier_name","react_select_browser_esm","defaultValue","find","isDisabled","minDate","modaledit","modaladd","disableBackdropClick","TableHead","Products_Filter","hover","onDoubleClick","tableCell","Skeleton","height","skeletonTable","TableFooter","today","initModalAdd","hidden","accept","ref","input","files","selectedFile","filename","split","pop","FileReader","onload","result","workbook","xlsx","read","cellDates","cellNF","cellText","sheet_to_json","Sheets","SheetNames","dateNF","readAsBinaryString","_unused","click","CloudUpload","TablePagination","rowsPerPageOptions","colSpan","count","meta","total","rowsPerPage","onChangePage","newPage","ActionsComponent","TablePaginationActions","Reports","address","contact_person","contact_number","Suppliers_Filter_objectSpread","console","log","initSupplierError","tin","initSupplier","setSupplier","supplierInput","setSupplierInput","supplierAction","Suppliers_objectSpread","Suppliers_Filter","Users_Filter_objectSpread","initUsers","users","setUsers","usersState","Users_objectSpread","Users_Filter","initModalShow","Components_Login","OutsideNav","path","LoginMiddleware","InsideNav","Component","Navigations","react_router_dom","exact","strict","Main_Navigation","render","Middleware_ComponentMiddleware","assign","initialState","Search_objectSpread","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","es","build","maxSnack","autoHideDuration","Routes","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cddffbf9.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\nimport { Requests } from 'Services';\n\nexport default class Token{\n    \n    public static save(token:any):void{\n        let a = new Date();\n        a.setMinutes(a.getMinutes() + 120);\n\n        const cookies = new Cookies();\n        cookies.set('token',token,{\n            expires: a,\n            // maxAge : 1800,\n        })\n    }\n\n    public static update():void{\n        const cookies = new Cookies();\n\n        const token = cookies.get('token');\n        this.save(token);\n    }\n\n    public static remove():void{\n        const cookies = new Cookies();\n        cookies.remove('token');\n    }\n\n    //check and update time expiration of the token\n    public static get():any{\n\n        if(Token.exist()){\n            this.update();\n            return new Cookies().get('token');\n        }\n        \n        return null;\n    }\n\n    //check without updating token\n    public static exist():any{\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n \n        if(token === undefined || token === null || token === ''){\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Check token's validity and refreshes if invalid\n     * \n     * @returns bool\n     */\n\n    public static async valid(){\n\n        if(Token.exist()){ \n            const a:any = await Requests.Auth.check();\n\n            if(a.network_error || a.status !== 200 ){\n                this.remove();\n                return false;\n            }else{\n                this.update();\n                return true;\n            }\n\n        }\n        return false;\n    }\n\n}","const server_url = '/api/';\n\nconst prefix={\n    auth        : 'auth/',\n    user        : 'users/',\n    products    : 'products/',\n    supplier    : 'suppliers/',\n}\n\nconst Url = {\n    //auth\n    'login'     :   server_url+prefix.auth+'login',\n    'logout'    :   server_url+prefix.auth+'logout',\n    'refresh'   :   server_url+prefix.auth+'refresh',\n    'check'     :   server_url+prefix.auth+'check',\n\n    //user\n    'user'       : server_url+prefix.user,\n    'products'   : server_url+prefix.products,\n    'suppliers'  : server_url+prefix.supplier,\n}\n\nexport default Url;\n","import Token from \"../Token\";\nimport axios from 'axios';\nimport Url from \"Services/ServerUrl\";\n\nexport interface Format{\n    network_error : boolean,\n    status        : number,\n    data          : any,\n}\n\ninterface handleError{\n    response : any,\n    format   : any,\n    callback : any,\n    auth     ?: boolean,\n    params   ?: any,\n}\n\ninterface recall{\n    error : any,\n    callback : any,\n    format   : any,\n    params   ?: any,\n}\n\nexport class StaticMethods{\n\n\n    static async recall(a:recall){\n        let format = a.format;\n\n        if(!a.error.response){\n            format.network_error = true;\n            return format;\n        }\n\n        if(a.error.response.status === 401){\n            await new Promise( resolve => setTimeout(resolve, 60000) );\n            if(a.params){\n                return a.callback(a.params);\n            }\n\n            return a.callback();\n        }\n\n        format.status = a.error.response.status;\n        format.data   = a.error.response.data;\n        \n        return format;        \n\n    }\n\n\n    static async handle_error(b:handleError){\n        const format = b.format;\n        //if network error\n        \n        if(!b.response){\n           format.network_error = true;\n           return format;\n        }\n        \n        //refresh token if expired, skip if token is invalid\n        // if( b.auth !== undefined && b.auth === true && b.response.status === 401 ){\n\n        //     if(Token.valid()){\n        //         if(b.params === undefined || b.params === null){\n        //             return this.retry(b.callback,undefined);\n        //         }\n\n        //         return this.retry(b.callback,b.params);\n        //     }\n        // }\n\n\n\n        if(b.response.status === 401 ){\n\n            // if(Token.exist()){\n            //     await this.refresh().then((response) => {\n            //         Token.save(response.data.token);\n            //     }).catch(() => {\n            //         Token.remove();\n            //         format.status = 401;\n            //         format.data   = b.response.data;\n            //         return format;\n            //     });\n            // }\n\n            if(!b.params){\n                return this.retry(b.callback,undefined);\n            }\n\n            return this.retry(b.callback,b.params);\n            \n        }\n\n\n        //if too many request\n        if(b.response.status === 429){\n            let a:any = localStorage.getItem(Token.get());\n            \n            if(!a){\n                a = 0;\n            }\n\n            if( parseInt(a) <= 3){\n                return this.retry(b.callback,b.params);\n            }\n        }\n        \n        //return this if above condition doesn't met and if token is invalid\n        format.status = b.response.status;\n        format.data   = b.response.data;\n        return format;\n    }\n\n\n    static async retry(callback:Function,params:any){\n        if(Token.exist()){\n            if(!localStorage.getItem(Token.get())){\n                localStorage.setItem(Token.get(),String(0));\n            }else{\n                let a:any = localStorage.getItem(Token.get());\n                let counter = parseInt(a);\n                localStorage.setItem(Token.get(),String(counter+1));\n            }\n        }\n        \n        await this.delay(1000);\n\n        if(!params){\n            return callback();\n        }\n\n        return callback(params);\n    }\n\n\n    static async delay(ms:number){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n\n\n    static header(token?:any){\n\n        if(!token){\n            return {\n                'Content-Type' : 'application/json',\n                'Accept'       :  'application/json',\n            };\n        }\n        \n        return {\n            'Content-Type'         :    'application/json',\n            'Accept'               :    'application/json',\n            'Authorization'        :    'Bearer '+token\n        };\n    }\n\n    static sleeper = (ms:number) => {\n        return function(x:any) {\n            return new Promise(resolve => setTimeout(() => resolve(x), ms));\n        };\n    }\n\n    public static async refresh(){\n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n        const header = this.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.refresh,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( () =>{\n            format= {\n                network_error : false,\n                status : 0,\n                data : '',\n            }\n        });\n\n        return format;\n\n    }\n}","import {StaticMethods, Format} from './StaticMethods';\nimport axios from 'axios';\nimport Url from '../ServerUrl';\nimport {Token} from 'Services';\n\n\n\nclass Auth extends StaticMethods{\n\n    public static async login(a:any){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        const header = super.header();\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.login,\n            headers :   header,\n            data    :   {\n                username : a.username,\n                password : a.password,\n            }\n        }).then( response => {\n            format = {\n                network_error : false,\n                status        : response.status,\n                data          : response.data,\n            }\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.login,\n                format : format,\n                params : a\n            });\n        })\n\n        return format;\n    }\n\n    // public static async refresh(){\n    //     let format:Format = {\n    //         network_error : false,\n    //         status : 0,\n    //         data : '',\n    //     }\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"POST\",\n    //         url     :   Url.refresh,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.refresh,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    public static async check(){\n        \n        let format:Format = {\n            network_error : false,\n            status : 0,\n            data : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'nothing';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.check,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.check,\n                format : format,\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default Auth;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\n\ninterface Show{\n    page        : number,\n    per_page    : number\n}\n\n\n\ninterface Users{\n    id         : any,\n    first_name : string,\n    last_name  : string,\n    username   : string,\n    company    : string,\n    email      : string,\n    activated  : any,\n    level      : any,\n}\n\n\n\nclass User extends StaticMethods{\n\n    static async show(user?:Show){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async get(id:number){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+id,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.get,\n                format : format,\n                params : id\n            });\n        })\n        return format;\n\n    }\n\n    static async update(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.user+user.id,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async add(user:Users){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"POST\",\n            url     :   Url.user,\n            headers :   header,\n            params  :   user\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?search='+search,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n\n        const header = super.header(Token.get());\n\n        await axios({\n            method  :   \"GET\",\n            url     :   Url.user+'?filter=true&'+params,\n            headers :   header,\n        }).then( response => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n}\n\nexport default User;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\n\ninterface Product{\n    id                          : any,\n    supplier                    : any,\n    product_code                : string,\n    product_description         : string,\n    delivery_date               : string,\n    reference_delivery_document : string,\n    serial_number               : string,\n    warranty                    : any,\n    warranty_start              : string,\n    created_by                  ?: any,\n    updated_by                  ?: any,\n    created_at                  ?: any,\n    updated_at                  ?: any\n}\n\n\ninterface Products extends Product{\n    created_by                  ?: never,\n    updated_by                  ?: never,\n    created_at                  ?: never,\n    updated_at                  ?: never\n}\n\ninterface showProduct{\n    page : number,\n    per_page : number,\n}\n\n\n\nclass Products extends StaticMethods{\n\n    static async show(user?:showProduct){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(product:Products){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.products+product.id,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(product:Products){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.products,\n            headers :   header,\n            params  :   product\n        })\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : product\n            });\n          \n        })\n        return format;\n    }\n\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.products,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?search='+search,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.products+'?filter=true&'+params,\n            headers :   header,\n        })\n        // .then(this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Products;","import {StaticMethods, Format} from './StaticMethods';\nimport Token from \"../Token\";\nimport Url from '../ServerUrl';\nimport axios from 'axios';\nimport { userInfo } from 'os';\n\ninterface Supplier{\n    id              : any,\n    supplier_code   : string,\n    supplier_name   : string,\n    address         : string,\n    tin             : string,\n    contact_person  : string,\n    contact_number  : string,\n    email           : string\n}\n\ninterface showSupplier{\n    page : number,\n    per_page : number,\n}\n\n\n\n\nclass Suppliers extends StaticMethods{\n\n    static async show(user?:showSupplier){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(user === undefined || user === null){\n            user = {\n                page : 1,\n                per_page : 10,\n            }\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?page='+user.page+'&per_page='+user.per_page,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.show,\n                format : format,\n                params : user\n            });\n        })\n        return format;\n    }\n\n    // static async get(id:number){\n    //     if(!Token.exist()){\n    //         format.status = 401;\n    //         format.data = 'Cookies Not Found';\n    //         return format;\n    //     }\n\n    //     const header = this.header(Token.get());\n\n    //     await axios({\n    //         method  :   \"GET\",\n    //         url     :   Url.user+id,\n    //         headers :   header,\n    //     }).then( response => {\n    //         format.status = response.status;\n    //         format.data = response.data.data;\n    //     }).catch( async (error) =>{\n    //         format = await this.handle_error({\n    //             response : error.response,\n    //             format : format,\n    //             callback : this.get,\n    //             auth    : true,\n    //         });\n    //     })\n    //     return format;\n\n    // }\n\n    static async update(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"PATCH\",\n            url     :   Url.suppliers+supplier.id,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.update,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    // static async patch(user:Update){\n\n    // }\n\n    static async add(supplier:Supplier){\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = super.header(Token.get());\n        \n        await axios({\n            method  :   \"POST\",\n            url     :   Url.suppliers,\n            headers :   header,\n            params  :   supplier,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.add,\n                format : format,\n                params : supplier\n            });\n        })\n        return format;\n    }\n\n    static async addFile(file:File){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n\n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const token = Token.get();\n        const formData = new FormData();\n        formData.append('file',file);\n\n        await axios.post(Url.suppliers,formData,{\n            headers: {\n                'Content-Type'         :    'application/x-www-form-urlencoded',\n                'Accept'               :    'application/json',\n                'Authorization'        :    'Bearer '+token\n            }})\n        .then( (response:any) => {\n            format.status = response.status; \n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.addFile,\n                format : format,\n                params : file\n            });\n          \n        })\n        return format;\n    }\n\n    static async search(search:string){\n        \n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?search='+search,\n            headers :   header,\n        })\n        // .then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.search,\n                format : format,\n                params : search\n            });\n        })\n        return format;\n    }\n\n\n    static async filter(filter:any){\n\n        let params = new URLSearchParams(filter).toString();\n\n        let format:Format = {\n            network_error : false,\n            status        : 0,\n            data          : '',\n        }\n        \n        if(!Token.exist()){\n            format.status = 401;\n            format.data = 'Cookies Not Found';\n            return format;\n        }\n        \n        const header = this.header(Token.get());\n        \n        await axios({\n            method  :   \"GET\",\n            url     :   Url.suppliers+'?filter=true&'+params,\n            headers :   header,\n        }).then( this.sleeper(1000))\n        .then( (response:any) => {\n            format.status = response.status;\n            format.data = response.data;\n        }).catch( async (error) =>{\n            format = await super.recall({\n                error : error,\n                callback : this.filter,\n                format : format,\n                params : filter\n            });\n        })\n        return format;\n    }\n\n    // static async delete(id:number){\n\n    // }\n\n}\n\nexport default Suppliers;","export const UserAccount        = \"UserAccount\";\nexport const NavigationTitle    = \"NavigationTitle\";\nexport const Products           = \"Products\";\nexport const Suppliers          = \"Suppliers\";\nexport const Users              = \"Users\";\nexport const Search             = {\n    open    : 'SearchOpen',\n    target  : 'SearchType',\n    value   : 'SearchValue',\n    data    : 'SearchData'\n};\n","import { UserAccount as UA } from './Types';\n\nexport const UserAccount = (a:JSON) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : UA,\n                payload : a\n            });\n        }\n}\n","import { NavigationTitle as NT } from './Types';\n\nexport const NavigationTitle = (a:string) => {\n        return (dispatch:any) => {\n            dispatch({\n                type    : NT,\n                payload : a\n            });\n        }\n}\n","import { Products as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Products = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.Products.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Suppliers as sp } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\nexport const Suppliers = (params ?:params) => {\n        return async (dispatch:any) => {\n\n            dispatch({\n                type    : sp,\n                payload : '',\n            });\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : sp,\n                payload : await Requests.Suppliers.show(params),\n            });\n        }\n}\n","import { Users as pr } from './Types';\nimport { Requests } from '../../Services';\n\ninterface params{\n    page        :  number,\n    per_page    :  number,\n}\n\nexport const Users = (params ?:params) => {\n        \n        return async (dispatch:any) => {\n\n            if(!params){\n                params.page     = 1;\n                params.per_page = 10;\n            }\n\n            dispatch({\n                type    : pr,\n                payload : '',\n            });\n\n\n\n            await Requests.User.show(params).then((response)=>dispatch({\n                type    : pr,\n                payload : response,\n            }));\n\n        }\n}\n","import { Search as sr, Users, Products, Suppliers } from './Types';\nimport {Requests} from 'Services';\n\ninterface params{\n    target      ?:  string,\n    open        ?:  boolean,\n    value       ?:  string\n}\n\nconst open = (params :boolean) => {\n        \n        return (dispatch:any) => {\n            dispatch({\n                type    : sr.open,\n                payload : params,\n            });\n        }\n}\n\ntype targets = \"users\" | \"products\" | \"suppliers\";\nconst target = (params :targets) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.target,\n            payload : params,\n        });\n    }\n}\n\nconst value = (params :string) => {\n\n    return (dispatch:any) => {\n        dispatch({\n            type    : sr.value,\n            payload : params,\n        });\n    }\n}\n\ninterface param {\n    query   : string,\n    target  : targets,\n}\n\nconst data = (params:param) =>{\n\n    switch (params.target){\n        case \"users\" :\n            return async (dispatch:any) => {\n\n                dispatch({\n                    type    : Users,\n                    payload : '',\n                });\n\n                await Requests.User.search(params.query).then((response)=>dispatch({\n                    type    : Users,\n                    payload : response,\n                }));\n            }\n\n        case \"products\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Products,\n                    payload : '',\n                });\n\n                await Requests.Products.search(params.query).then((response)=>dispatch({\n                    type    : Products,\n                    payload : response,\n                }));\n            }\n        case \"suppliers\":\n            return async (dispatch:any) => {\n                dispatch({\n                    type    : Suppliers,\n                    payload : '',\n                });\n\n                await Requests.Suppliers.search(params.query).then((response)=>dispatch({\n                    type    : Suppliers,\n                    payload : response,\n                }));\n            }\n    }\n\n}\n\nexport default {\n    open,\n    target,\n    value,\n    data\n}","import { Suppliers as sp, Products as pr, Users as us } from './Types';\nimport { Requests } from '../../Services';\n\ntype component = \"supplier\" | \"product\" | \"user\";\n\nexport const Filter = (filter:any,component:component) => {\n\n        let params = '';\n        Object.keys(filter).forEach( (a:any) => {\n            if(filter[a].key){\n                if(params === ''){\n                    params = a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }else{\n                    params = params+\"&\"+a+\"[filter]=\"+filter[a].filter+\"&\"+a+\"[key]=\"+filter[a].key;\n                }\n            }\n        });\n\n        switch(component){\n            case \"supplier\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : sp,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : sp,\n                        payload : await Requests.Suppliers.filter(params),\n                    });\n                }\n            case \"product\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : pr,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : pr,\n                        payload : await Requests.Products.filter(params),\n                    });\n                }\n            case \"user\" :\n                return async (dispatch:any) => {\n\n                    dispatch({\n                        type    : us,\n                        payload : '',\n                    });\n        \n    \n                    dispatch({\n                        type    : us,\n                        payload : await Requests.User.filter(params),\n                    });\n                }\n        }\n\n        \n}\n","import React, { useEffect } from 'react';\nimport {Token, Requests} from 'Services';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // for connecting redux;\nimport { UserAccount as User } from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\nconst ComponentMiddleware =(props:any) =>{\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    const updateUser = useDispatch();\n    \n    useEffect(()=>{\n        async function check(){\n            if(await Token.valid()){\n    \n                const id:any = jwt_decode(Token.get());\n                const user:Requests.Format = await Requests.User.get(id.sub);\n                if(user.status === 200){\n                    updateUser(User(user.data));\n    \n                    setToken(true);\n                }\n            }\n            setFinish(true);\n        }\n\n        check();\n\n    },[updateUser]);\n\n   \n    \n    if(!finish){\n        return null;\n    }\n\n    if(token){\n        return <props.component {...props}  />;\n        // return null;\n    }\n    \n    return <Redirect to={{pathname:'/login', state: { from : props.location.pathname}}} />;\n}\n\n\n\nexport default ComponentMiddleware;","import React from 'react';\nimport {Card, CardHeader, CardContent, Avatar, TextField, Button, CircularProgress, Container} from '@material-ui/core'\nimport {AccountCircle} from '@material-ui/icons';\nimport './LoginStyle.scss';\nimport {Requests,Token} from 'Services';\nimport { withRouter } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\n\nconst title = 'Product Inquery System';\nconst logo  = '/img/ideaserv.png'; \n\nconst Login = (props:any) => {\n    const [ submit, setSubmit ] = React.useState(false);\n    const [ credentials, setCredentials ] = React.useState({username : '',password : ''});\n    const [ error, setError ] = React.useState({status : false,message: ''});\n\n\n    const update_input_text = (event:any) => {\n        setCredentials({\n            ...credentials,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const submitForm = async (event:any) => {\n        event.preventDefault();\n        setSubmit(true);\n        setError({\n            status : true,\n            message: ''\n        });\n\n        const a:any = await Requests.Auth.login({\n            username : credentials.username,\n            password : credentials.password,\n        });\n\n        if(!a.network_error){\n            switch(a.status){\n                case 401 : \n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Credentials does not exist!!\"\n                    });\n                    break;\n                case 200 :\n                    Token.save(a.data.token);\n                    const jwt:any = jwt_decode(Token.get()); // get id of current user using JWT payload\n                    const user =await Requests.User.get(jwt.sub);\n                    checkUser(user);\n                    break;\n                default :\n                    setCredentials({\n                        ...credentials,\n                        password : \"\",\n                    });\n                    setSubmit(false);\n                    setError({\n                        status : true,\n                        message: \"Something wrong with the server, please try again later!!!!\"\n                    });\n                    break;\n            }\n        }else{\n            setSubmit(false);\n            setCredentials({\n                ...credentials,\n                password : \"\",\n            });\n            setError({\n                status : true,\n                message : \"Something wrong with the server. <br /> Please contact Administrator!!!!\"\n            });\n        }\n\n        return;\n    }\n\n\n    const checkUser = (user:Requests.Format):any => {\n\n        if(user.status === 200){\n            if(!user.data.activated){\n                setSubmit(false);\n                setCredentials({\n                    ...credentials,\n                    password : \"\",\n                });\n                setError({\n                    status : true,\n                    message : \"The account is not authorized to log in. <br /> Please contact Administator\"\n                });\n                Token.remove();\n                return;\n            }\n\n            const returnUrl = props.location.state;\n            \n            if(returnUrl === undefined || returnUrl === null ){\n                props.history.push('/');\n                return;\n            }\n            props.history.push(returnUrl.from);\n\n            return;\n        }\n\n        setSubmit(false);\n        setCredentials({\n            ...credentials,\n            password : \"\",\n        });\n        setError({\n            status : true,\n            message : \"Something went wrong.!!!<br /> Please contact Administator!!!\"\n        });\n\n        Token.remove();\n        return;\n\n    }\n\n    return(\n        <Container maxWidth=\"lg\">\n            <div className=\"logo-login\">\n                <img src={logo} alt=\"logo\" />\n                <div className=\"logo-title\">\n                    {title}  \n                </div>\n            </div>\n            <Card className=\"card-login\">\n                <CardHeader\n                    className = \"header-login\"\n                    avatar = {\n                        <div className=\"wrap-user-icon\">\n                            <Avatar className=\"user-icon-login\">\n                                <AccountCircle className=\"user-icon-login1\"/>\n                            </Avatar>\n                        </div>\n                    }\n                />\n                            \n                <CardContent className=\"card-content-login\">\n                    <form onSubmit={submitForm}>\n                        <TextField\n                            className=\"username-login\"\n                            label=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            autoComplete=\"username\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.username}\n                            error = {error.status}\n                            required\n                        />\n        \n                        <TextField\n                            className=\"password-login\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            disabled={submit}\n                            onChange={update_input_text}\n                            value={credentials.password}\n                            error = {error.status}\n                            helperText = { error.status ? <b dangerouslySetInnerHTML={{__html:error.message}}></b> : '' }\n                            required\n                        />\n                        \n                        <div className=\"submit-login\">\n                            <Button variant=\"contained\" color=\"primary\" disabled={submit} type=\"submit\">\n                                Submit\n                                { \n                                    submit ? <CircularProgress /> : ''\n                                }\n                            </Button>\n                        </div>\n                    </form>\n                </CardContent>\n            </Card>\n        </Container>\n    );\n}\n\nexport default withRouter(Login);","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { AssignmentInd, Assessment, AssignmentTurnedIn, Assignment, SupervisorAccount, Settings } from '@material-ui/icons';\nimport './HomeStyle.scss';\nimport { Button } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\n\n\nconst Home = (props:any) =>{\n    const dispatch = useDispatch();\n    const user = useSelector( (state:any) => state.UserAccount.data);\n\n    useEffect( () =>{\n        dispatch(NavigationTitle('Home'));\n        \n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n\n    },[dispatch])\n    return(\n        <div className=\"mx-auto\" style={{marginTop:'100px'}}>\n            { user.level === 1 ?\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/user-logs')}>\n                            <div className=\"col\"><AssignmentTurnedIn className=\"home-icon\" /></div>\n                            <div className=\"col\">User Logs</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/users')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Users</div>\n                        </div>\n                    \n                        <div className=\"col text-center iconButton\"  onClick={ () => props.history.push('/settings')}>\n                            <div className=\"col\"><Settings className=\"home-icon\" /></div>\n                            <div className=\"col\">Settings</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            :\n                <React.Fragment>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/suppliers')}>\n                            <div className=\"col\"><AssignmentInd className=\"home-icon\" /></div>\n                            <div className=\"col\">Suppliers</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/products')}>\n                            <div className=\"col\"><Assignment className=\"home-icon\" /></div>\n                            <div className=\"col\">Products</div>\n                        </div>\n                    </div>\n                    <div className=\"justify-content-center row\">\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/reports')}>\n                            <div className=\"col\"><Assessment className=\"home-icon\"/></div>\n                            <div className=\"col\">Reports</div>\n                        </div>\n                        <div className=\"col-sm text-center iconButton\" onClick={ () => props.history.push('/profile')}>\n                            <div className=\"col\"><SupervisorAccount className=\"home-icon\" /></div>\n                            <div className=\"col\">Profile</div>\n                        </div>\n                    </div>\n                </React.Fragment>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(Home);","import React from 'react';\nimport {InputBase, IconButton, Typography,CssBaseline, Toolbar, AppBar, Button, Avatar, Popover, Checkbox, FormGroup, FormControlLabel, Paper, Dialog, DialogTitle, DialogContent, TextField, DialogActions, CircularProgress } from '@material-ui/core';\nimport {Assignment, Search, ArrowDropDown,AssignmentReturned, Edit, ExitToApp, Close, Save} from '@material-ui/icons';\nimport './NavigationStyle.scss';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Search as SearchControl} from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Requests, Token } from 'Services';\nimport {UserAccount,Users} from 'Redux/Actions';\nimport jwt_decode from 'jwt-decode';\n\ninterface Props{\n    \n    state           :   {\n        width       :   number,\n        sidebar     :   boolean,\n        user        :   any,\n        search      :   boolean\n    },\n    logo            :   string,\n    menu_title      :   string,\n    user            :   any,\n    location        :   string,\n\n    navigate(a:string)      : void,\n    toggleSidebar() :   void,\n    toggleSearch(a:boolean)  :   void,\n    toggleUser(event:React.MouseEvent<HTMLElement>)             :   void,\n    swipeDrawer(event: React.KeyboardEvent | React.MouseEvent)   :   void,\n    logout()         :   void, \n}\n\n\nconst Topbar = (props:Props) => {\n\n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [submit,setSubmit]        = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n\n    const search = useSelector((state:any)=>state.Search);\n    const dispatch = useDispatch();\n\n    const submitSearch = (event:any) => {\n        event.preventDefault();\n        \n        if(search.value !== ''){\n            props.navigate('/'+search.target+'?search='+search.value);\n            props.toggleSearch(false);\n        }\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n\n    const close = () => {\n\n        if(props.state.search){\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }else{ \n            props.toggleSearch(false);\n            dispatch(SearchControl.value(''));\n            props.navigate(props.location);\n        }\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : props.user.id,\n            first_name : props.user.first_name,\n            last_name  : props.user.last_name,\n            username   : props.user.username,\n            company    : props.user.company,\n            email      : props.user.email,\n        });\n\n        setModalEdit(true);\n    };\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const submitForm = async (event:any) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n        await Requests.User.update(usersInput).then( \n            async (response:any) =>{\n                if(response.network_error){\n                    enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                }else{\n                    if(response.status === 200){\n                        enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                        setModalEdit(false);\n\n                        window.location.reload();\n                        // dispatch(user(params));\n                    }\n                    else{\n                        \n                        enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                        updateErrorState(response.data.errors);\n                    }\n                }\n            }\n        );\n\n        \n              \n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    const modaledit = ()=>{\n        if(modalEdit){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Profile</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={submitForm} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={submitForm} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n\n\n\n    return(\n        <React.Fragment>\n            {modaledit()}\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className=\"appbar\"\n            >\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        className={ props.state.width < 600  ? \n                            \"hamburger\" \n                            :\n                            props.state.sidebar ? \"hamburger hamburger--squeeze is-active\" : \"hamburger\"\n                        } \n                        onClick={props.state.width > 600 ? props.toggleSidebar : props.swipeDrawer}\n                    >\t\n                        <span className=\"hamburger-box\">\n                            <span className=\"hamburger-inner\"></span>\n                        </span>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap style={{textTransform : \"uppercase\"}}>\n                        {/* <img className=\"navigation-logo\" src={props.logo} alt={props.menu_title} /> */}\n                        {props.menu_title}\n                    </Typography>\n                        {/* <div className={props.state.search?'search-active' : 'search'} >\n                            <div className=\"search-icon\">\n                                <Search />\n                            </div>\n                            <form onSubmit={submitSearch}>\n                                <InputBase\n                                    className=\"search-input\"\n                                    name=\"search\"\n                                    value = {search.value}\n                                    placeholder=\"Search…\"\n                                    inputProps={{ 'aria-label': 'search' }}\n                                    onFocus={ () => props.toggleSearch(true) }\n                                    // onBlur = { () => props.toggleSearch(false) }\n                                    autoComplete = \"off\"\n                                    onChange={(event:any) => {\n                                        dispatch(SearchControl.value(event.target.value))\n                                    }}\n                                />\n                            </form>\n                            <IconButton onClick={close} className=\"search-close-desktop\" style={{color:props.state.search ? '#f15454' : 'white',display:search.value === ''?'none':'unset'}}>\n                               <Close /> \n                            </IconButton>\n                        </div> */}\n                        <div className=\"user-account\">\n                            <Button\n                                color = \"inherit\"\n                                onClick = {props.toggleUser}\n                            >\n                                <Avatar \n                                    alt=\"Jobel Racines\" \n                                    src=\"/img/sample.jpg\"\n                                    className = \"user-avatar\"\n                                />\n                                <div className=\"user-name\">\n                                    {props.user.first_name}\n                                </div>\n\n                                <ArrowDropDown />\n                            </Button>\n                        </div>\n\n\n\n                        <div className=\"search-choices\" style={{display:!props.state.search ? 'none' : 'unset'}}>\n                                <Paper>\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'users' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('users'))}\n                                                />\n                                            }\n                                            label=\"User\"\n                                            style={{marginLeft:0}}\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'products' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('products'))}\n                                                />\n                                            }\n                                            label=\"Product\"\n                                        />\n                                        <FormControlLabel\n                                            control={\n                                                <Checkbox\n                                                    color=\"primary\"\n                                                    checked = {search.target === 'suppliers' ? true : false}\n                                                    onChange = {()=>dispatch(SearchControl.target('suppliers'))}\n                                                />\n                                            }\n                                            label=\"Supplier\"\n                                        />\n                                    </FormGroup>\n                                </Paper>\n                            </div>\n\n\n                        <Popover \n                            open={Boolean(props.state.user)} \n                            anchorEl={props.state.user}\n                            onClose={props.toggleUser}\n                            anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'right',\n                            }}\n                            className=\"user-menu\"\n                            // anchorPosition={\n                            // \t{\n                            // \t\ttop : 200,\n                            // \t\tleft: 400\n                            // \t}\n                            // }\n                            \n                        >\t\n                            <div className=\"user-menu-profile\">\n                                <div className=\"header-user-profile\">\n                                    <Avatar \n                                        alt=\"User Image\" \n                                        src=\"/img/sample.jpg\"\n                                        className=\"header-user-profile-avatar\"\n                                    />\n\n                                    <div className=\"header-user-profile-name\" onClick={initModalEdit}>\n                                        {props.user.first_name+\" \"+props.user.last_name}\n                                        <Edit className=\"edit-icon\" />\n                                    </div>\n                                    <div className=\"header-user-profile-description\">\n                                        {\n                                            props.user.email !== null || props.user.email !== undefined ?\n                                                props.user.email\n                                            : \"\"\n                                        }\n                                    </div>\n                                </div>\n\n                                <div className=\"body-user-profile\">\n                                    <ul>\n{/* \n                                        <li>\n                                            <div>Assigned</div>\n                                            <div><AssignmentReturned /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Requested</div>\n                                            <div><Assignment /></div>\n                                        </li>\n\n                                        <li>\n                                            <div>Edit Profile</div>\n                                            <div><Edit /></div>\n                                        </li> */}\n\n                                    </ul>\n                                </div>\n\n                                <div className=\"footer-user-profile\">\n                                    <Button\n                                        variant =\"outlined\"\n                                        color   =\"primary\"\n                                        onClick = {props.logout}\n                                    >\n                                        <ExitToApp />\n                                        &nbsp;Logout\n                                    </Button>\n                                </div>\n                            </div>\n                                \n                            \n                        </Popover>\n\n\n\n\n                        {/* <div className=\"mobile-search\" style={{display: !props.state.search ? 'none' : ''}}>\n                            <div className=\"mobile-search-icon\">\n                                <Search />\n                            </div>\n                            <InputBase\n                                name=\"searchBox\"\n                                id =\"searchBox\"\n                                className=\"mobile-search-input\"\n                                placeholder=\"Search…\"\n                                autoFocus={props.state.search}\n                                inputProps={{ 'aria-label': 'search' }}\n                            />\n\n                        </div>\n\n\n                        <IconButton\n                            color=\"inherit\"\n                            aria-haspopup=\"true\"\n                            edge=\"end\"\n                            className=\"search-toggle\"\n                            onClick={ () => props.toggleSearch(true)}\n                        >\n                            <Search />\n                        </IconButton> */}\n                </Toolbar>\n                \n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default Topbar;","import React from 'react'\nimport {Drawer, Divider} from '@material-ui/core';\n\n\ninterface Props{\n    \n    state           :   {\n\t\tsidebar\t\t: boolean\n\t},\n    sidebar_list    :   any,\n\n    toggleSidebar() :   void,\n}\n\n\nconst SidebarDesktop = (props:Props) => {\n\n    return(\n        <Drawer\n        \tvariant=\"permanent\"\n        \tclassName={props.state.sidebar ? \"sidebar-open\" : \"sidebar-close\"}\n\t\t\topen={props.state.sidebar}\n\t\t\t// onMouseEnter={()=> props.toggleSidebar()}\n\t\t\t// onMouseLeave={()=> this.toggleSidebar()}\n      \t>\n\t\t\t{props.sidebar_list}\n\t\t\t<Divider />\n      \t</Drawer>\n    );\n}\n\nexport default SidebarDesktop;\n","import React from 'react'\nimport { Divider } from '@material-ui/core';\n\n\ninterface Props{\n    logo            :   string,\n    menu_title      :   string,\n    sidebar_list    :   any,\n}\n\nconst SidebarMobile = (props:Props) => {\n    return(\n        <div\n            className=\"swipe-list\"\n              role=\"presentation\"\n        >\n            <div className=\"mobile-logo\">\n                <img src={props.logo} alt={props.menu_title} />\n                <p>{props.menu_title}</p>\n            </div>\n\n            <Divider />\n            {props.sidebar_list}\n            <Divider />\n        </div>\n    );\n}\n\nexport default SidebarMobile;","import React from 'react';\nimport {Collapse, ListItemText, ListItemIcon, ListItem, List, Popover } from '@material-ui/core';\nimport {ExpandLess, ExpandMore, ArrowRightAlt} from '@material-ui/icons';\nimport { withRouter } from 'react-router-dom';\n\nconst SidebarList = (props:any) => {\n\n    let list = props.sidebar_properties;\n    const [anchorEl, setAnchorEl] = React.useState<HTMLElement | null>(null);\n\n    function handlePopoverOpen(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n        setAnchorEl(event.currentTarget);\n    }\n\n    function handlePopoverClose() {\n        setAnchorEl(null);\n    }\n\n    const open = Boolean(anchorEl);\n\n    return(\n        <List>\n            {list.map((text:any, index:number) => (\n                <React.Fragment key={index} >\n                    <ListItem button onClick={()=>{\n                        \n                        // if(!props.sidebar){\n                        //     props.toggleSidebar();\n                        // }\n\n                        if(!text.props){\n                            if(props.location.pathname !== text.url){\n                                props.history.push(text.url);\n                            }\n                        }else{\n                            \n                            props.setSidebarProps({\n                                [text.name] : !props.sidebarProps[text.name],\n                            });\n                        \n                        }\n\n                    }}>\n                        {\n                            (!text.props) ? \n                                <React.Fragment>\n                                    <ListItemIcon>{<text.icon />}</ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                </React.Fragment>\n                            : \n                                <React.Fragment>\n                                    <ListItemIcon>  \n                                        {<text.icon />}\n                                    </ListItemIcon>\n                                    <ListItemText>{text.name}</ListItemText>\n                                    {props.sidebarProps[text.name] ? <ExpandLess /> : <ExpandMore />}\n                                </React.Fragment>\n\n                        }\n                    </ListItem>\n\n                    {\n                        (text.props) ? \n                            <Collapse in={props.sidebarProps[text.name]} timeout=\"auto\" unmountOnExit className={!props.sidebar ? \"hide-sidebar\" : \"\"}>\n                                <List component=\"div\" disablePadding>\n                                    {\n                                        text.props.map((value:any,key:number)=>(\n                                            <ListItem button key={key} className=\"nestedSidebar\" \n                                                \n                                            >\n                                                <ListItemIcon><ArrowRightAlt /></ListItemIcon>\n                                                <ListItemText >\n                                                    {value.name}\n                                                </ListItemText>\t\t\t\t\t\t\t\t\n                                            </ListItem>\n                                        ))\n                                    }\n                                </List>\n                            </Collapse>\n                            : ''\n                    }\n                </React.Fragment>\n            ))}\n        </List>\n    );\n}\n\nexport default withRouter(SidebarList);","import React, { useEffect } from 'react';\nimport {Backdrop, SwipeableDrawer } from '@material-ui/core';\nimport {Assignment, Home, Laptop, Commute, SupervisedUserCircle, Settings} from '@material-ui/icons';\nimport Topbar from './Topbar';\nimport SidebarDesktop from './SidebarDesktop';\nimport './NavigationStyle.scss';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {Token} from 'Services';\nimport SidebarMobile from './SidebarMobile';\nimport SidebarList from './SidebarList';\nimport { withRouter } from 'react-router';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport {Search} from 'Redux/Actions';\n\n// const menu_title = \"Product Inquery System\";\nconst logo = \"/img/ideaserv.png\";\nlet sidebar_properties = [\n\t{\n\t\tname : \"Home\",\n\t\ticon : Home,\n\t\turl  : \"/\" \n\t},{\n\t\tname : \"Products\",\n\t\ticon : Laptop,\n\t\turl  : '/products',\n\t},{\n\t\tname : \"Suppliers\",\n\t\ticon :  Commute,\n\t\turl  : \"/suppliers\", \n\t},{\n\t\tname : \"Users\",\n\t\ticon :  SupervisedUserCircle,\n\t\turl  : \"/users\", \n\t},{\n\t\tname : \"Reports\",\n\t\ticon :  Assignment,\n\t\turl  : \"/reports\", \n\t},{\n\t\tname : \"Settings\",\n\t\ticon :  Settings,\n\t\turl  : \"/settings\",\n\t\tprops: ''\n\t}\n]\n\n\nconst Navigation = (props:any) => {\n\t\n\tconst [ sidebar , setSidebar ] = React.useState(false);\n\tconst [ sidebarProps, setSidebarProps ] = React.useState({});\n\tconst [ swipe, setSwipe ] = React.useState(false);\n\tconst [ width, setWidth ] = React.useState( window.innerWidth );\n\tconst [ search, setSearch ] = React.useState( false );\n\tconst [ user, setUser ] = React.useState(null);\n\tconst reduxUser = useSelector( (state:any) => state.UserAccount.data);\n\tconst menu_title = useSelector( (state:any) => state.NavigationTitle.title );\n\tconst dispatch = useDispatch();\n\t\n\tif(reduxUser.level === 2){\n\t\tsidebar_properties = [\n\t\t\t{\n\t\t\t\tname : \"Home\",\n\t\t\t\ticon : Home,\n\t\t\t\turl  : \"/\" \n\t\t\t},{\n\t\t\t\tname : \"Products\",\n\t\t\t\ticon : Laptop,\n\t\t\t\turl  : '/products',\n\t\t\t},{\n\t\t\t\tname : \"Suppliers\",\n\t\t\t\ticon :  Commute,\n\t\t\t\turl  : \"/suppliers\", \n\t\t\t},{\n\t\t\t\tname : \"Reports\",\n\t\t\t\ticon :  Assignment,\n\t\t\t\turl  : \"/reports\", \n\t\t\t},{\n\t\t\t\tname : \"Profile Settings\",\n\t\t\t\ticon :  Settings,\n\t\t\t\turl  : \"/users\", \n\t\t\t}\n\t\t]\n\t}\n\n\tuseEffect(()=>{\n\n\t\t//subscribe to window event listener \n\t\twindow.addEventListener('resize', updateBrowserWidth);\n\n\t\tlet sidebars:any = {};\n\t\tsidebar_properties.forEach((value) =>{\n\t\t\tif(value.props){\n\t\t\t\tsidebars[value.name] = false;\n\t\t\t}\n\t\t});\n\n\t\tsetSidebarProps(sidebars);\n\t\tcheckQueryParams();\n\t\t\n\t\t//clean it up when unmounted\n\t\treturn () => {\n\t\t\twindow.removeEventListener('resize', updateBrowserWidth);\n\t\t}\n\t},[]);\n\n\n\tconst checkQueryParams = () => {\n\t\tconst param = new URLSearchParams(props.location.search);\n\t\t\n\t\tif(param.get('search')){\n\t\t\tdispatch(Search.value(param.get('search')));\n\t\t}\n\t}\n\t\n\n\t//functions ----------------------------------------\n\tconst updateBrowserWidth = () =>{\n\t\tsetWidth( window.innerWidth );\n\t}\n\n\tconst toggleUser = (event: React.MouseEvent<HTMLElement>):void => {\n\t\tsetUser(user ? null : event.currentTarget);\n\t}\n\n\tconst toggleSidebar = ():void =>{\n\t\t\n\t\t//toggle backdrop in search when toggling sidebar\n\t\tif(search){\n\t\t\ttoggleSearch(false);\n\t\t}\n\t\tsetSidebar(!sidebar);\n\t}\n\n\tconst toggleSearch = (a:boolean):void=>{\n\n\t\t//toggle backdrop in sidebar when toggling search\n\t\tif(sidebar){\n\t\t\ttoggleSidebar();\n\t\t}\n\t\tsetSearch(a);\n\t}\n\n\tconst swipeDrawer = (event: React.KeyboardEvent | React.MouseEvent) => {\n\t\tif ( event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\t\tsetSwipe(!swipe);\n\t};\n\n\tconst logout = () =>{\n\t\tToken.remove();\n\t\twindow.location.reload();\n\t\tprops.history.push('/login');\n\t\t\n\t}\n\n\tconst checkToken =()=>{\n\t\tif(!Token.exist()){\n\t\t\tprops.history.push('/login');\n\t\t}\n\t}\n\n\tconst navigate = (url:string) => {\n\t\tprops.history.push(url);\n\t\treturn;\n\t}\n\n\n\treturn(\n\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t<div onClick ={checkToken}>\n\t\t\t<SwipeableDrawer\n\t\t\t\topen={swipe}\n\t\t        onClose={swipeDrawer}\n\t\t        onOpen={swipeDrawer}\n\t\t\t>\n\t\t    \t<SidebarMobile\n\t\t\t\t\tlogo \t\t= {logo}\n\t\t\t\t\tmenu_title\t= {menu_title}\n\t\t\t\t\tsidebar_list= {\n\t\t\t\t\t\t<SidebarList\n\t\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t    </SwipeableDrawer>\n\t\t\t\t\t\t\n\t\t\n\t\t\t<Topbar \n\t\t\t\tstate \t\t\t= {{width,sidebar,user,search}}\n\t\t\t\tlogo  \t\t\t= {logo}\n\t\t\t\tmenu_title \t\t= {menu_title}\n\t\t\t\tuser \t\t\t= {reduxUser}\n\t\t\t\ttoggleSearch\t= {toggleSearch}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t\ttoggleUser\t\t= {toggleUser}\n\t\t\t\tswipeDrawer\t\t= {swipeDrawer}\n\t\t\t\tlogout\t\t\t= {logout}\n\t\t\t\tlocation\t\t= {props.location.pathname}\n\t\t\t\tnavigate \t\t= {navigate}\n\t\t\t/>\n\t\t\n\t\t\t<SidebarDesktop\n\t\t\t\tstate\t\t\t= {{sidebar}}\n\t\t\t\tsidebar_list\t= {\n\t\t\t\t\t<SidebarList\n\t\t\t\t\t\tsidebar \t\t\t= {sidebar}\n\t\t\t\t\t\tsidebar_properties \t= {sidebar_properties}\n\t\t\t\t\t\tsidebarProps \t\t= {sidebarProps}\n\t\t\t\t\t\tsetSidebarProps \t= {setSidebarProps}\n\t\t\t\t\t\ttoggleSidebar\t\t= {toggleSidebar}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\ttoggleSidebar\t= {toggleSidebar}\n\t\t\t/>\n\t\t\n\t\t\t<div className=\"container-body\">\n\t\t\t\t<Backdrop open={sidebar} onClick={toggleSidebar} className=\"backdrop-desktop disable-z-index\"/>\n\t\t\t\t<Backdrop open={search} onClick={ () => toggleSearch(false) } className=\"backdrop-search disable-z-index\"/>\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t{props.children}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t\t</MuiPickersUtilsProvider>\n\t)\n}\n\nexport default withRouter(Navigation);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier\" | \"product_code\" | \"product_description\" | \"serial_number\" | \"warranty\" | \"warranty_start\" | \"warranty_end\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier            : null,\n        product_code        : null,\n        product_description : null,\n        serial_number       : null,\n        warranty            : null,\n        warranty_start      : null,\n        warranty_end        : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier            : {filter:'iet',key:''},\n        product_code        : {filter:'iet',key:''},\n        product_description : {filter:'iet',key:''},\n        serial_number       : {filter:'iet',key:''},\n        warranty            : {filter:'iet',key:''},\n        warranty_start      : {filter:'iet',key:''},\n        warranty_end        : {filter:'iet',key:''}\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier              = null;\n        a.product_code          = null;\n        a.product_description   = null;\n        a.serial_number         = null;\n        a.warranty              = null;\n        a.warranty_end          = null;\n        a.warranty_start        = null;\n        a.warranty_end          = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        let a:control = event.target.name;\n        setFilter({\n            ...filter,\n            [event.target.name] : {\n                ...filter[a],\n                key : event.target.value,\n            }\n        });\n    }\n\n    const setFilterControl=(event:any) =>{\n        let a:control = event.target.name;\n        setFilter({\n            ...filter,\n            [event.target.name] : {\n                ...filter[a],\n                filter : event.target.value,\n            }\n        });\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control].key !== ''){\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }else{\n            if(filter[control].key !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : {\n                        ...filter[control],\n                        key : ''\n                    }\n                });\n                \n                a[control].key = \"\";\n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name].key = '';    \n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"product\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier\"\n                    value = {filter.supplier.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier)? \"simple-popper\" : undefined} open={Boolean(popper.supplier)} anchorEl={popper.supplier}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"supplier\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        \n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_code\"\n                    value = {filter.product_code.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_code)? \"simple-popper\" : undefined} open={Boolean(popper.product_code)} anchorEl={popper.product_code}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"product_code\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"product_description\"\n                    value = {filter.product_description.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"product_description\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.product_description)? \"simple-popper\" : undefined} open={Boolean(popper.product_description)} anchorEl={popper.product_description}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"product_description\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"product_description\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"product_description\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"serial_number\"\n                    value = {filter.serial_number.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"serial_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.serial_number)? \"simple-popper\" : undefined} open={Boolean(popper.serial_number)} anchorEl={popper.serial_number}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"serial_number\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"serial_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"serial_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type = \"number\"\n                    name = \"warranty\"\n                    value = {filter.warranty.key}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"warranty\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty)? \"simple-popper\" : undefined} open={Boolean(popper.warranty)} anchorEl={popper.warranty}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({\n                            ...filter,\n                            warranty_start: {\n                                ...filter['warranty_start'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {filter.warranty_start.key == '' ? null : moment(filter.warranty_start.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_start\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_start)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_start)} anchorEl={popper.warranty_start}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_start\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_start\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_start\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <DatePicker\n                    format=\"yyyy/MM/dd\"\n                    allowKeyboardControl\n                    animateYearScrolling\n                    variant = \"outlined\"\n                    className=\"input\"\n                    onChange = {(event) => setFilter({\n                            ...filter,\n                            warranty_end:{\n                                ...filter['warranty_end'],\n                                key : moment(event).format(\"YYYY-MM-DD\")\n                            }\n                        }\n                    )}\n                    value = {filter.warranty_end.key == '' ? null : moment(filter.warranty_end.key).format()}\n                    onFocus = {(event)=>controller(event,\"warranty_end\",\"open\")}\n                    // onKeyDown = {onKey}\n                />\n\n\n                \n                <Popper className=\"text-center\" id={Boolean(popper.warranty_end)? \"simple-popper\" : undefined} open={Boolean(popper.warranty_end)} anchorEl={popper.warranty_end}>\n                    <Paper className=\"popper-paper\">\n                        <FormControl variant=\"outlined\" className=\"selector\">\n                            <Select\n                                value={filter.supplier.filter}\n                                onChange={setFilterControl}\n                                name = \"warranty_end\"\n                            >\n                                <MenuItem value=\"iet\" selected>Is Equal To </MenuItem>\n                                <MenuItem value=\"inet\">Is Not Equal To</MenuItem>\n                                <MenuItem value=\"c\">Contains</MenuItem>\n                                <MenuItem value=\"dnc\">Does not Contains</MenuItem>\n                                <MenuItem value=\"sw\">Starts With</MenuItem>\n                                <MenuItem value=\"ew\">Ends With</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"warranty_end\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"warranty_end\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React, { useEffect, ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavigationTitle, Search } from 'Redux/Actions';\nimport { Paper, Table, TableBody, TableRow, TableCell, TableFooter, TablePagination, TableHead, Grid, Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport { Products as productRedux, Suppliers as supplierRedux} from 'Redux/Actions';\nimport { withRouter } from 'react-router-dom';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport './ProductsStyle.scss';\nimport { Close, Edit, Save, Cancel, SaveAlt, CloudUpload } from '@material-ui/icons';\nimport Select from 'react-select';\nimport moment from 'moment';\nimport { DatePicker } from \"material-ui-pickers\";\nimport { Requests } from '../../../Services';\nimport { useSnackbar } from 'notistack';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst initErrroMessage = {\n    id                          : {error:false,message:''},\n    supplier                    : {error:false,message:''},\n    product_code                : {error:false,message:''},\n    product_description         : {error:false,message:''},\n    delivery_date               : {error:false,message:''},\n    reference_delivery_document : {error:false,message:''},\n    serial_number               : {error:false,message:''},\n    warranty                    : {error:false,message:''},\n    warranty_start              : {error:false,message:''}\n};\n\nconst initProductInput = {\n    id                  : '',\n    supplier            : '',\n    product_code        : '',\n    product_description : '', \n    delivery_date       : '',\n    reference_delivery_document : '',\n    serial_number       : '',\n    warranty            : '',\n    warranty_start      : '',\n}\n\n\nconst Products = (props:any) =>{\n    \n    const [ page, setPage ] = React.useState(0);\n    const [ modalEdit, setModalEdit ] = React.useState(false);  // for showing edit modal\n    const [ modalShow, setModalShow ] = React.useState(false);\n    const [ modalAdd, setModalAdd ] = React.useState(false);    \n    const [ product, setProduct ] = React.useState();   // for holding product info by id\n    const [ submit, setSubmit ] = React.useState(false);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n\n    const params = {page : 1,per_page : 10};\n    let file:HTMLInputElement;\n\n    const [ productInput, setProductInput ] = React.useState(initProductInput);\n\n    const [responseMessage, setResponseMessage] = React.useState(initErrroMessage);\n\n    const productState = useSelector( (state:any) => state.Products.data );\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data );\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n\n    \n        dispatch(NavigationTitle('Products'));        \n        dispatch(supplierRedux({page : 1, per_page : 10000}));\n        dispatch(Search.target('products'));\n        checkParams();\n\n        return () =>{\n            // clearInterval(productInterval);\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"products\"}));\n            return;\n        }\n\n        dispatch(productRedux(params));\n        return;\n    }\n\n\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n    \n    \n    const resetError = () =>{\n        setResponseMessage({\n            id                          : {error:false,message:''},\n            supplier                    : {error:false,message:''},\n            product_code                : {error:false,message:''},\n            product_description         : {error:false,message:''},\n            delivery_date               : {error:false,message:''},\n            reference_delivery_document : {error:false,message:''},\n            serial_number               : {error:false,message:''},\n            warranty                    : {error:false,message:''},\n            warranty_start              : {error:false,message:''}\n        });\n    };\n    // const productInterval = setInterval( async () =>{\n    //     if(productState !== '' && productState.status!== 200){\n    //         props.history.push('/login');\n    //     }\n    //     products(productRedux(params));\n    // },30000);\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(productRedux(params));\n    }\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            let date:any = true;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n                if(counter === 4 || counter === 8 || counter === 9){\n                    if(!(data[i][key] instanceof Date)) date = false; \n                }\n            });\n\n            if(counter !== 9 || !date){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        // setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Products.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length != 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                //console.log(errors);\n                togglePointerEvents(true);\n                //setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    const skeletonTable = () => {\n\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const initModalAdd = () => {\n        \n        const today  = new Date().toString();\n        setProductInput({\n            ...initProductInput,\n            delivery_date       : today,\n            warranty_start     : today, \n        });\n        // setResponseMessage(initErrroMessage);\n        resetError();\n        setModalAdd(true);\n    }\n\n    const modaladd = () => {\n\n        if(modalAdd){\n            let options;\n            if(supplierState){\n                options = supplierState.data.data.map((value:any) => {\n                    return {\n                        label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                        value : value.id,\n                        target: {\n                            name  : 'supplier',\n                            value : value.id \n                        }\n                    }\n                })\n            }else{\n                options = {\n                    label : '',\n                    value : '',\n                    target: {\n                        name : 'supplier',\n                        value : ''\n                    }\n                }\n            }\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Product</DialogTitle>\n                    <DialogContent>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc.\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions>\n\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n\n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                       \n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n\n\n    const initModalShow = (productInfo:any) =>{\n        setProduct(productInfo);\n        setModalShow(true);\n    }\n\n    const modalshow = () => {\n\n        if(product){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{product.supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Code</TableCell>\n                                            <TableCell align=\"left\">{product.product_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Product Name</TableCell>\n                                            <TableCell align=\"left\">{product.product_description}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Serial Number</TableCell>\n                                            <TableCell align=\"left\">{product.serial_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Date</TableCell>\n                                            <TableCell align=\"left\">{moment(product.delivery_date).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty</TableCell>\n                                            <TableCell align=\"left\">{product.warranty > 1 ? product.warranty + ' Years ' : product.warranty + \" Year\"}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Warranty Start</TableCell>\n                                            <TableCell align=\"left\">{moment(product.warranty_start).format(\"LL\")}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >End Date</TableCell>\n                                            <TableCell align=\"left\">{moment(new Date(product.warranty_start).setFullYear(new Date(product.warranty_start).getFullYear() + product.warranty)).format(\"LL\")}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Delivery Doc</TableCell>\n                                            <TableCell align=\"left\">{product.reference_delivery_document}</TableCell>\n                                        </TableRow>\n    \n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Created By</TableCell>\n                                            <TableCell align=\"left\">{product.created_by.first_name + \" \" + product.created_by.last_name}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n        \n    }\n\n    const updateInput = (event:any, value?:any) => {\n\n        if(event){\n            if(event instanceof Date){\n                setProductInput({\n                    ...productInput,\n                    [value] : moment(event).format('DD-MM-YYYY'),\n                })\n            }else{\n                setProductInput({\n                    ...productInput,\n                    [event.target.name] : event.target.value,\n                })\n            }\n        }\n    }\n\n\n    const initModalEdit = () =>{\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before mounting modal;\n\n        setProductInput({\n            id                          : product.id,\n            supplier                    : product.supplier.id,\n            product_code                : product.product_code,\n            product_description         : product.product_description,\n            delivery_date               : product.delivery_date,\n            reference_delivery_document : product.reference_delivery_document,\n            serial_number               : product.serial_number,\n            warranty                    : product.warranty,\n            warranty_start              : product.warranty_start,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    }\n\n    \n    const modaledit = () => {\n\n        let options;\n        if(supplierState){\n            options = supplierState.data.data.map((value:any) => {\n                return {\n                    label : value.supplier_code + \" ( \"+ value.supplier_name +\" ) \",\n                    value : value.id,\n                    target: {\n                        name  : 'supplier',\n                        value : value.id \n                    }\n                }\n            })\n        }else{\n            options = {\n                label : '',\n                value : '',\n                target: {\n                    name : 'supplier',\n                    value : ''\n                }\n            }\n        }\n\n        if(product){\n        \n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Product Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Supplier\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={options}\n                                                // isClearable\n                                                name = 'supplier'\n                                                defaultValue = {options.find((element:any) => element.value === productInput.supplier)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Code\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_code\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_code}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.product_code.error}\n                                                helperText = {responseMessage.product_code.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Product Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"product_description\"\n                                                onChange = {updateInput}\n                                                value = {productInput.product_description}\n                                                disabled = {submit}\n                                                error = {responseMessage.product_description.error}\n                                                helperText = {responseMessage.product_description.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Serial Number\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"serial_number\"\n                                                onChange = {updateInput}\n                                                value = {productInput.serial_number}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.serial_number.error}\n                                                helperText = {responseMessage.serial_number.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Date\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"delivery_date\")}\n                                                value = {productInput.delivery_date}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.delivery_date.error}\n                                                helperText = {responseMessage.delivery_date.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Delivery Doc\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"reference_delivery_document\"\n                                                onChange = {updateInput}\n                                                value = {productInput.reference_delivery_document}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.reference_delivery_document.error}\n                                                helperText = {responseMessage.reference_delivery_document.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty(*year)\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"number\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"warranty\"\n                                                onChange = {updateInput}\n                                                value = {productInput.warranty}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty.error}\n                                                helperText = {responseMessage.warranty.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Warranty Start\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <DatePicker\n                                                format=\"yyyy/MM/dd\"\n                                                allowKeyboardControl\n                                                animateYearScrolling\n                                                variant = \"outlined\"\n                                                className = \"full-width product-reduce-margin-text\"\n                                                onChange = {(event) => updateInput(event,\"warranty_start\")}\n                                                value = {productInput.warranty_start}\n                                                minDate = {new Date(productInput.delivery_date)}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.warranty_start.error}\n                                                helperText = {responseMessage.warranty_start.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any, action:action) => {\n\n        resetError();\n        // setResponseMessage(initErrroMessage);    // reset error message state before submiting;\n\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        togglePointerEvents(false);\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n                await Requests.Products.update(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n            case \"add\" :\n                await Requests.Products.add(productInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Product successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(productRedux(params));\n                            }\n                            else{\n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        \n        setSubmit(false);\n        togglePointerEvents(true);\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initErrroMessage;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Product Code</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">Serial Number</TableCell>\n                            <TableCell align=\"center\">Warranty</TableCell>\n                            <TableCell align=\"center\">Warranty Start</TableCell>\n                            <TableCell align=\"center\">End Date</TableCell>                                      \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n\n                        {\n                            productState ?\n                                productState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier.supplier_code}>{key.supplier.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_code}>{key.product_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.product_description}>{key.product_description}</TableCell>\n                                        <TableCell align=\"left\" title={key.serial_number}>{key.serial_number}</TableCell>\n                                        <TableCell align=\"center\" title={key.warranty}>{key.warranty}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_start)).format(\"ll\")}>{moment(new Date(key.warranty_start)).format(\"ll\")}</TableCell>\n                                        <TableCell align=\"left\" title={moment(new Date(key.warranty_end)).format(\"ll\")}>{moment(new Date(key.warranty_end)).format(\"ll\")}</TableCell>\n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                {/* for uploads */}\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n                                    className = \"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n                            <td>\n                                \n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={productState ? productState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={productState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Products);","import React from 'react';\n\nconst Reports = (props:any) => {\n    return(\n        <div>\n            Hi im Reports\n        </div>\n    );\n}\n\nexport default Reports;","import React from 'react';\n\nconst Settings = (props:any) => {\n    return(\n        <div>Hey im settings</div>\n    );\n}\n\nexport default Settings;","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"supplier_code\" | \"supplier_name\" | \"address\" | \"contact_person\" | \"contact_number\" | \"email\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        supplier_code       : null,\n        supplier_name       : null,\n        address             : null,\n        contact_person      : null,\n        contact_number      : null,\n        email               : null,\n    });\n\n    const [filter, setFilter] = useState({\n        supplier_code       : \"\",\n        supplier_name       : \"\",\n        address             : \"\",\n        contact_person      : \"\",\n        contact_number      : \"\",\n        email               : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.supplier_code       = null;\n        a.supplier_name       = null;\n        a.address             = null;\n        a.contact_person      = null;\n        a.contact_number      = null;\n        a.email               = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n\n        console.log(filter);\n    }\n\n    const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }else{\n            if(filter[control] !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : '',\n                });\n                \n                a[control] = \"\";\n                dispatch(Filterer(a,\"supplier\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name] = '';    \n                dispatch(Filterer(a,\"supplier\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"supplier\"));\n            }\n        }\n    }\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_code\"\n                    value = {filter.supplier_code}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_code\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_code)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_code)} anchorEl={popper.supplier_code}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_code\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_code\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"supplier_name\"\n                    value = {filter.supplier_name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"supplier_name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.supplier_name)? \"simple-popper\" : undefined} open={Boolean(popper.supplier_name)} anchorEl={popper.supplier_name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"supplier_name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"supplier_name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"address\"\n                    value = {filter.address}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"address\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.address)? \"simple-popper\" : undefined} open={Boolean(popper.address)} anchorEl={popper.address}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"address\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"address\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_person\"\n                    value = {filter.contact_person}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_person\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_person)? \"simple-popper\" : undefined} open={Boolean(popper.contact_person)} anchorEl={popper.contact_person}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_person\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_person\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"contact_number\"\n                    value = {filter.contact_number}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"contact_number\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.contact_number)? \"simple-popper\" : undefined} open={Boolean(popper.contact_number)} anchorEl={popper.contact_number}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"contact_number\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"contact_number\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.email}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { NavigationTitle,Suppliers as supplierAction, Search } from 'Redux/Actions';\nimport { useSnackbar } from 'notistack';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress } from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save, CloudUpload } from '@material-ui/icons';\nimport { Requests } from 'Services';\nimport xlsx from 'xlsx';\nimport Filter from './Filter';\n\n\nconst Suppliers = (props:any) => {\n\n    const initSupplierError = {\n        supplier_code : {error: false, message : ''},\n        supplier_name : {error: false, message : ''},\n        address       : {error: false, message : ''},\n        tin           : {error: false, message : ''},\n        contact_person: {error: false, message : ''},\n        contact_number: {error: false, message : ''},\n        email         : {error: false, message : ''}\n    };\n\n    const initSupplier = {\n        id            : '',\n        supplier_code : '',\n        supplier_name : '',\n        address       : '',\n        tin           : '',\n        contact_person: '',\n        contact_number: '',\n        email         : '',\n    };\n\n    //static variable\n    const params = {page:1,per_page:10};\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [supplier, setSupplier]   = React.useState();\n    const [ upload,setUpload ] = React.useState({ \n        uploading   : false,\n        error       : false,\n        response    : [], \n    });\n\n    const [supplierInput, setSupplierInput] = React.useState(initSupplier);\n    const [responseMessage, setResponseMessage] = React.useState(initSupplierError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const supplierState =  useSelector ( (state:any) => state.Suppliers.data ); \n\n\n    //dispatcher\n    const dispatch = useDispatch();\n\n    let file:HTMLInputElement;\n\n\n    React.useEffect(()=>{\n        // dispatch when mounting ...\n        dispatch(NavigationTitle('Suppliers'));\n        dispatch(Search.target(\"suppliers\"));\n        checkParams();\n\n        return () =>{\n            //dispatch when unmouting ...\n            dispatch(NavigationTitle(''));\n        };\n    },[props]);\n\n    const checkParams = () => {\n\n        const param =  new URLSearchParams(props.location.search);\n    \n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"suppliers\"}));\n            return;\n        }\n\n        dispatch(supplierAction(params));\n        return;\n    }\n\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n    const togglePointerEvents = (event:boolean) => {\n        if(event){\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        }else{\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        }\n        return;\n    }\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const uploadFile = (event:any) => {\n        togglePointerEvents(false);\n        try{\n            if(file.files.length !== 0){\n                const selectedFile = file.files[0];\n                let filename = selectedFile.name.split('.').pop();\n                \n                if( !(filename === 'xls' || filename === 'xlsx')) {\n                    enqueueSnackbar('Please select xlsx or xls file only !!!. ',{variant:'error',action:actions});\n                    togglePointerEvents(true);\n                    return;\n                }\n    \n                const files = new FileReader();\n                files.onload =(e:any)=>{\n                    const data = e.target.result;\n                    const workbook = xlsx.read(data,{type:'binary',cellDates:true,cellNF:false, cellText:false});\n                    checkExcelFormat(xlsx.utils.sheet_to_json(workbook.Sheets[workbook.SheetNames[0]],{dateNF:'YYYY-MM-DD'}),selectedFile);\n                    return;\n                };\n                files.readAsBinaryString(selectedFile);\n            }\n        }catch{\n            enqueueSnackbar('Ooops, di ko alam kung anung error dito !!!. ',{variant:'error',action:actions});\n            togglePointerEvents(true);\n            return;\n        }\n        \n    }\n\n\n    const checkExcelFormat = async (data:any,file:File) => {\n        for(let i=0;i<data.length;i++){\n            let counter = 0;\n            Object.keys(data[i]).forEach((key)=>{\n                counter++;\n            });\n\n            if(counter !== 7){\n                enqueueSnackbar('Invalid sheet column format !!!. ',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                return;\n            }\n        };\n\n        // setModalAdd(false);\n        setUpload({\n            ...upload,\n            uploading : true,\n        });\n\n        let response = await Requests.Suppliers.addFile(file);\n\n        switch(response.status){\n            case 406 :\n                enqueueSnackbar(response.data.errors[0].message,{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            case 200 :\n\n                let errors = response.data.errors;\n                if(errors.length !== 0){\n                    errors.forEach((element:any) => {\n                        enqueueSnackbar(element.message,{variant:'warning',action:actions});\n                    });\n                }else\n                    enqueueSnackbar('Sheet successfully imported!!',{variant:'success',action:actions});\n\n                // console.log(errors);\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n            default :\n                enqueueSnackbar('Somethin went wrong. Please try again',{variant:'error',action:actions});\n                togglePointerEvents(true);\n                // setModalAdd(true);\n                setUpload({\n                    ...upload,\n                    uploading : false,\n                });\n                return;\n        }\n    }\n\n    const uploadFileModal = () =>{\n        if(upload.uploading){\n            return (\n                <Dialog\n                    maxWidth=\"xs\"\n                    open={upload.uploading}\n                    disableBackdropClick\n                    className=\"uploading-processing\"\n                >\n                    <DialogContent>\n                        <div>\n                            <div className=\"loading-submit-upload\" style={{margin:'auto'    }}>\n                                <CircularProgress />\n                            </div>\n                            <div className=\"status-submit-upload\">\n                                Uploading\n                            </div>\n                        </div>\n                    </DialogContent>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    }\n\n    const resetError = () => {\n        setResponseMessage({\n            supplier_code : {error: false, message : ''},\n            supplier_name : {error: false, message : ''},\n            address       : {error: false, message : ''},\n            tin           : {error: false, message : ''},\n            contact_person: {error: false, message : ''},\n            contact_number: {error: false, message : ''},\n            email         : {error: false, message : ''}\n        });\n    };\n    \n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(supplierAction(params));\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        setSupplierInput({\n            ...supplierInput,\n            [event.target.name] : event.target.value,\n        })\n    }\n\n    const initModalShow = (details:any) =>{\n        setSupplier(details);\n        setModalShow(true);\n    };\n\n    const initModalEdit = () =>{\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before mounting modal;\n        \n        setSupplierInput({\n            id            : supplier.id,\n            supplier_code : supplier.supplier_code,\n            supplier_name : supplier.supplier_name,\n            address       : supplier.address,\n            tin           : supplier.tin,\n            contact_person: supplier.contact_person,\n            contact_number: supplier.contact_number,\n            email         : supplier.email,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n    const initModalAdd = () =>{\n        setSupplierInput(initSupplier);\n        resetError();\n        setModalAdd(true);\n    };\n\n    \n    const modalshow = () =>{\n\n        if(supplier){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Supplier Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Supplier Code</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_code}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Supplier Name</TableCell>\n                                            <TableCell align=\"left\">{supplier.supplier_name}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >TIN</TableCell>\n                                            <TableCell align=\"left\">{supplier.tin}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Address</TableCell>\n                                            <TableCell align=\"left\" title={supplier.address}>{supplier.address}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact Person</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_person}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Contact No.</TableCell>\n                                            <TableCell align=\"left\">{supplier.contact_number}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\">{supplier.email}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n\n    };\n    const modaledit = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalEdit}\n                onClose={ () =>setModalEdit(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit Supplier Details</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions className=\"product-modal-footer\">\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"edit\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n                    <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    const modaladd  = () =>{\n        return(\n            <Dialog\n                fullWidth\n                maxWidth=\"sm\"\n                open={modalAdd}\n                onClose={ () =>setModalAdd(false) }\n                aria-labelledby=\"max-width-dialog-title\"\n            >\n                <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New Supplier</DialogTitle>\n                <DialogContent>\n\n                    <Paper className=\"text-center\">\n                        <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Code\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_code\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_code}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.supplier_code.error}\n                                            helperText = {responseMessage.supplier_code.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Supplier Name\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"supplier_name\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.supplier_name}\n                                            disabled = {submit}\n                                            error = {responseMessage.supplier_name.error}\n                                            helperText = {responseMessage.supplier_name.message}\n                                            required\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Address\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"address\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.address}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.address.error}\n                                            helperText = {responseMessage.address.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        TIN\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"tin\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.tin}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.tin.error}\n                                            helperText = {responseMessage.tin.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact Person\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_person\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_person}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_person.error}\n                                            helperText = {responseMessage.contact_person.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Contact No.\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"text\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"contact_number\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.contact_number}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.contact_number.error}\n                                            helperText = {responseMessage.contact_number.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <div className=\"row align-items-center\">\n                                    <div className=\"col-md-4 font-bolder\">\n                                        Email\n                                    </div>\n                                    <div className=\"col-md-8\">\n                                        <TextField\n                                            type=\"email\"\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            className=\"full-width product-reduce-margin-text\"\n                                            name = \"email\"\n                                            onChange = {updateInput}\n                                            value = {supplierInput.email}\n                                            disabled = {submit}\n                                            required\n                                            error = {responseMessage.email.error}\n                                            helperText = {responseMessage.email.message}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <input type=\"submit\" style={{display:'none'}} />\n                            \n                        </form>\n                    </Paper>\n\n                </DialogContent>\n                <DialogActions> {/*className=\"product-modal-footer\"*/}\n                    \n                    <Button \n                        onClick={(event:any) => submitForm(event,\"add\")} \n                        color=\"primary\" \n                        variant=\"contained\"\n                        disabled={submit}\n                        form=\"submit-edit-form\"\n                    >  \n                        <Save />\n                        Submit\n                        <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                    </Button>\n            \n                    <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                        <Close />   \n                        Cancel\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError();\n        // setResponseMessage(initSupplierError);    // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.Suppliers.update(supplierInput).then( \n                    (response:any) =>{\n                        console.log(initSupplierError);\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.Suppliers.add(supplierInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully added!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(supplierAction(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    };\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initSupplierError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            {uploadFileModal()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Supplier Code</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Address</TableCell>\n                            <TableCell align=\"center\">Contact Person</TableCell>\n                            <TableCell align=\"center\">Contact No.</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            supplierState ?\n                                supplierState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.supplier_code}>{key.supplier_code}</TableCell>\n                                        <TableCell align=\"left\" title={key.supplier_name}>{key.supplier_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.address}>{key.address}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_person}>{key.contact_person}</TableCell>\n                                        <TableCell align=\"left\" title={key.contact_number}>{key.contact_number}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n\n                                <input type=\"file\" hidden name=\"xlsx_upload\" accept=\".xlsx\" ref={input => file=input } onChange={uploadFile}/>\n                                <Button \n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    onClick={(event)=>{\n                                        event.persist();\n                                        file.click()\n                                    }}\n\n                                    className=\"product-add-file\"\n                                >\n                                    <CloudUpload />&nbsp;  \n                                    Import file\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={supplierState ? supplierState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={supplierState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Suppliers);","import { TableRow, TableCell, Popper, Paper, Typography, TextField, Button, FormControl, Select, MenuItem } from \"@material-ui/core\"\nimport React, { useState } from \"react\";\nimport { DatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\nimport {Filter as Filterer} from \"Redux/Actions\";\nimport {useDispatch} from 'react-redux';\n\n\nconst Filter = () => {\n\n\n\n    const dispatch = useDispatch();\n\n    type control = \"username\" | \"name\" | \"company\" | \"email\" | \"level\" | \"activated\";\n    type action = \"close\" | \"open\";\n    type submit = \"clear\" | \"filter\";\n\n\n    const [popper,setPopper] = useState({\n        username        : null,\n        name            : null,\n        company         : null,\n        email           : null,\n        level           : null,\n        activated       : null,\n    });\n\n    const [filter, setFilter] = useState({\n        username        : \"\",\n        name            : \"\",\n        company         : \"\",\n        email           : \"\",\n        level           : \"\",\n        activated       : \"\",\n    });\n\n\n    const reset = () => {\n        \n        let a = popper;\n        a.username        = null;\n        a.name            = null;\n        a.company         = null;\n        a.email           = null;\n        a.level           = null;\n        a.activated       = null;\n        setPopper(a);\n    }\n    \n    const controller = (event:any,control:control,action:action) => {\n\n        reset();\n        \n        if(action === \"open\"){\n            setPopper({\n                ...popper,\n                [control] : event.currentTarget,\n            })\n        }else{\n            setPopper({\n                ...popper,\n                [control] : null,\n            })\n        }\n    }\n\n    const setText=(event:any) =>{\n        setFilter({\n            ...filter,\n            [event.target.name] : event.target.value,\n        });\n    }\n\n        const submitFilter = async (action:submit,control:control) =>{\n        reset();\n        if(action === \"filter\"){\n            if(filter[control] !== ''){\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }else{\n            if(filter[control] !== ''){\n                let a = filter;\n\n                setFilter({\n                    ...filter,\n                    [control] : '',\n                });\n                \n                a[control] = \"\";\n                dispatch(Filterer(a,\"product\"));\n            }\n        }\n    }\n\n    const onKey = (e:any) => {\n\n        if(e.key === \"Backspace\"){\n            if(e.target.value.length === 1){\n                reset();\n                \n                let a:any = filter;\n                a[e.target.name] = '';    \n                dispatch(Filterer(a,\"user\"));\n            }\n        }\n\n        if(e.key === 'Enter'){\n            if(e.target.value !== ''){\n                reset();\n                dispatch(Filterer(filter,\"user\"));\n            }\n        }\n    }\n\n\n    return(\n        <TableRow>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"username\"\n                    value = {filter.username}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"username\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.username)? \"simple-popper\" : undefined} open={Boolean(popper.username)} anchorEl={popper.username}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"username\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"username\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n\n            <TableCell align=\"center\" className=\"filter\">\n                \n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"name\"\n                    value = {filter.name}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"name\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.name)? \"simple-popper\" : undefined} open={Boolean(popper.name)} anchorEl={popper.name}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"name\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"name\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"company\"\n                    value = {filter.company}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"company\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.company)? \"simple-popper\" : undefined} open={Boolean(popper.company)} anchorEl={popper.company}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"company\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"company\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\" className=\"filter\">\n                <TextField\n                    id=\"outlined-email-input\"\n                    className=\"input\"\n                    autoComplete=\"off\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    name = \"email\"\n                    value = {filter.email}\n                    onChange = {setText}\n                    onFocus = {(event)=>controller(event,\"email\",\"open\")}\n                    onKeyDown = {onKey}\n                />\n                \n                <Popper className=\"text-center\" id={Boolean(popper.email)? \"simple-popper\" : undefined} open={Boolean(popper.email)} anchorEl={popper.email}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"email\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"email\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.level}\n                        onChange={setText}\n                        name=\"level\"\n                        onFocus = {(event)=>controller(event,\"level\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Admin</MenuItem>\n                        <MenuItem value={2}>Encoder</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.level)? \"simple-popper\" : undefined} open={Boolean(popper.level)} anchorEl={popper.level}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"level\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"level\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n\n            <TableCell align=\"center\">\n                <FormControl variant=\"outlined\" style={{width:'100%'}}>\n                    <Select\n                        value={filter.activated}\n                        onChange={setText}\n                        name=\"activated\"\n                        onFocus = {(event)=>controller(event,\"activated\",\"open\")}\n                    >\n                        <MenuItem value={\"\"}>All</MenuItem>\n                        <MenuItem value={1}>Yes</MenuItem>\n                        <MenuItem value={0}>No</MenuItem>\n                        \n                    </Select>\n                \n                </FormControl>\n                <Popper className=\"text-center\" id={Boolean(popper.activated)? \"simple-popper\" : undefined} open={Boolean(popper.activated)} anchorEl={popper.activated}>\n                    <Paper className=\"popper-paper\">\n                        <Button variant=\"contained\" color=\"primary\" onClick={()=>submitFilter(\"clear\",\"activated\")}>\n                            Clear\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={()=>submitFilter(\"filter\",\"activated\")}>\n                            Filter\n                        </Button>\n                    </Paper>\n                </Popper>\n            </TableCell>\n        \n        </TableRow>\n    );\n}\n\nexport default Filter;","import React from 'react';\nimport { NavigationTitle,Users as user, Search} from 'Redux/Actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { useSnackbar } from 'notistack';\nimport { Requests } from 'Services';\nimport { Paper, Table, TableHead, TableRow, TableCell, TableBody, TableFooter, Button, TablePagination, Dialog, DialogTitle, DialogContent, DialogActions, TextField, CircularProgress} from '@material-ui/core';\nimport TablePaginationActions from '@material-ui/core/TablePagination/TablePaginationActions';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Edit, Close, Save } from '@material-ui/icons';\nimport Select from 'react-select';\nimport Filter from './Filter';\n\nconst Users = (props:any) =>{\n    const params = {page:1,per_page:10};\n    \n    const initUsers:any = {\n        id                  : '',\n        first_name          : '',\n        last_name           : '',\n        username            : '',\n        company             : '',\n        email               : '',\n        activated           : null ,\n        level               : '',\n        password            : '',\n        confirm_password    : ''\n    };\n\n    const initUsersError = {\n        first_name          : {error: false, message : ''},\n        last_name           : {error: false, message : ''},\n        username            : {error: false, message : ''},\n        company             : {error: false, message : ''},\n        email               : {error: false, message : ''},\n        activated           : {error: false, message : ''},\n        level               : {error: false, message : ''},\n        password            : {error: false, message : ''},\n        confirm_password    : {error: false, message : ''},\n    };\n\n\n    //states\n    const [modalShow, setModalShow] = React.useState(false);\n    const [modalEdit, setModalEdit] = React.useState(false);\n    const [modalAdd, setModalAdd]   = React.useState(false);\n    const [submit,setSubmit]        = React.useState(false);\n    const [users, setUsers]   = React.useState();\n    const [usersInput, setUsersInput] = React.useState(initUsers);\n    const [responseMessage, setResponseMessage] = React.useState(initUsersError);\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar(); //snackbar\n    const [ page, setPage ] = React.useState(0);\n\n    //global state\n    const usersState =  useSelector ( (state:any) => state.Users.data );\n\n    const dispatch = useDispatch();\n\n    React.useEffect(()=>{\n        \n        checkParams();\n\n        return () => {\n            dispatch(NavigationTitle(''));\n        }\n    },[props]);\n\n\n    const checkParams = () => {\n        const param =  new URLSearchParams(props.location.search);\n        dispatch(Search.target('users'));\n        dispatch(NavigationTitle('Users'));\n\n\n        if(param.get('search')){\n            dispatch(Search.data({query:param.get('search'),target:\"users\"}));\n            return;\n        }\n\n        dispatch(user(params));\n        return;\n    }\n\n\n\n    const resetError = () => {\n        setResponseMessage({\n            first_name : {error: false, message : ''},\n            last_name  : {error: false, message : ''},\n            username   : {error: false, message : ''},\n            company    : {error: false, message : ''},\n            email      : {error: false, message : ''},\n            activated  : {error: false, message : ''},\n            level      : {error: false, message : ''},\n            password            : {error: false, message : ''},\n            confirm_password    : {error: false, message : ''},\n        });\n    }\n\n    const updateInput = (event:any, value?:any) => {\n        if(event)\n            setUsersInput({\n                ...usersInput,\n                [event.target.name] : event.target.value,\n            })\n    }\n\n    const handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null,newPage: number,) =>{\n        setPage(newPage)\n        params.page = newPage +1;\n        dispatch(user(params));\n    }\n\n    const skeletonTable = () => {\n        let a:any = [];\n\n        const tableCell = <TableCell align=\"right\"><Skeleton variant=\"rect\" width={118} height={20} /></TableCell>;\n        for(let i = 0;i < 10;i++ ){\n            a.push(\n                <TableRow key={i}>\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                    {tableCell}\n                </TableRow>\n            );\n        }\n        return a;\n    }\n\n\n    const initModalShow = (key:any) =>{\n        setUsers(key);\n        setModalShow(true);\n    };\n\n    const initModalAdd  = () =>{\n        const add = initUsers;\n        setUsersInput(initUsers);\n        resetError();\n        setModalAdd(true);\n    };\n\n    const actions = (key:any) => (\n        <Button onClick={() => { closeSnackbar(key) }}>\n            <div style={{color:\"white\"}}><Close /></div>\n        </Button>\n    );\n\n    const initModalEdit = () =>{\n        resetError();\n        setUsersInput({\n            id         : users.id,\n            first_name : users.first_name,\n            last_name  : users.last_name,\n            username   : users.username,\n            company    : users.company,\n            email      : users.email, \n            activated  : Boolean(users.activated) ? 1 : 0,\n            level      : users.level,\n        });\n\n        setModalShow(false);\n        setModalEdit(true);\n    };\n\n    type action = \"edit\" | \"add-file\" | \"add\";\n    const submitForm = async (event:any,action:action) => {\n        resetError(); // reset error message state before submiting;\n        event.persist();  //to access the event properties in an asynchronous way. https://reactjs.org/docs/events.html#event-pooling\n        event.preventDefault();\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"none\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"progress\";\n        setSubmit(true);\n\n        if(usersInput.password !== usersInput.confirm_password){\n            \n            setSubmit(false);\n            document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n            document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n            \n            setResponseMessage({\n                ...responseMessage,\n                confirm_password : {error:true,message:'Confirmed password incorrect!!'} \n            })\n            \n            enqueueSnackbar('Please confirm password correctly!!!',{variant:'error',action:actions});\n            return;\n        }\n\n        switch(action){\n            case \"edit\" :\n\n                await Requests.User.update(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalEdit(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalEdit(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch(()=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!',{variant:'error',action:actions});\n                    setModalEdit(false);\n                });\n                break;\n        \n        \n                \n            case \"add\" :\n\n                await Requests.User.add(usersInput).then( \n                    (response:any) =>{\n                        if(response.network_error){\n                            enqueueSnackbar('Network error, please contact administrator!!!',{variant:'error',action:actions});\n                            setModalAdd(false);\n                        }else{\n                            if(response.status === 200){\n                                enqueueSnackbar('Supplier successfully updated!!!',{variant:'success',action:actions});\n                                setModalAdd(false);\n                                dispatch(user(params));\n                            }\n                            else{\n                                \n                                enqueueSnackbar('Update failed',{variant:'error',action:actions});\n                                updateErrorState(response.data.errors);\n                            }\n                        }\n                    }\n                ).catch((e:any)=>{\n                    enqueueSnackbar('Something went wrong. Please try again!!!. '+ e ,{variant:'error',action:actions});\n                    setModalAdd(false);\n                });\n                break;\n        }\n        setSubmit(false);\n        document.getElementsByTagName(\"html\")[0].style.pointerEvents = \"unset\";\n        document.getElementsByTagName(\"html\")[0].style.cursor = \"unset\";\n        return;\n    }\n\n    const updateErrorState = (response:[]) => {\n        let holder:any = initUsersError;\n        response.forEach( (value:any) =>{\n            holder[value.name] = {error : true,message: value.message};\n        });\n        setResponseMessage(holder);\n    }\n    \n\n    const modalshow = ()=>{\n        if(users){\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalShow}\n                    onClose={ () =>setModalShow(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>User Details</DialogTitle>\n                    <DialogContent>\n    \n                        <Paper className=\"product-modal-table\">\n                                <Table className=\"product-modal-list\">\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\">Username</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Name</TableCell>\n                                            <TableCell align=\"left\">{users.username}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Company</TableCell>\n                                            <TableCell align=\"left\">{users.company}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Email</TableCell>\n                                            <TableCell align=\"left\" >{users.email}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Last Login</TableCell>\n                                            <TableCell align=\"left\"></TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Level</TableCell>\n                                            <TableCell align=\"left\">{users.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell align=\"left\" variant=\"head\" >Activated</TableCell>\n                                            <TableCell align=\"left\">{users.activated? 'Yes' : 'No'}</TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                </Table>\n                        </Paper>\n    \n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={initModalEdit} \n                            color=\"primary\" \n                            variant=\"contained\"\n                        >  \n                            <Edit />\n                            Edit\n                        </Button>\n                        <Button onClick={() =>setModalShow(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Close\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaledit = ()=>{\n        if(modalEdit){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalEdit}\n                    onClose={ () =>setModalEdit(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Edit User Details</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"edit\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level.find((element:any) => element.value === usersInput.level)}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated.find((element:any) => \n                                                    element.value === usersInput.activated\n                                                )}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"edit\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalEdit(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    const modaladd  = ()=>{\n        if(modalAdd){\n            let level = [\n                {label:'Admin', value : 1,target:{name:'level',value:1}},\n                {label:'Encoder', value : 2,target:{name:'level',value:2}}\n            ];\n\n            let activated = [\n                {label:'Yes', value : 1,target:{name:'activated',value:1}},\n                {label:'No', value : 0,target:{name:'activated',value:0}},\n            ]\n\n            return(\n                <Dialog\n                    fullWidth\n                    maxWidth=\"sm\"\n                    open={modalAdd}\n                    onClose={ () =>setModalAdd(false) }\n                    aria-labelledby=\"max-width-dialog-title\"\n                >\n                    <DialogTitle id=\"max-width-dialog-title\" style={{textAlign:'center'}}>Add New User</DialogTitle>\n                    <DialogContent style={{overflow:'visible'}}>\n\n                        <Paper className=\"text-center\">\n                            <form className =\"form-group\" onSubmit={(event:any) => submitForm(event,\"add\")} id=\"submit-edit-form\">\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Username\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"text\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"username\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.username}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.username.error}\n                                                helperText = {responseMessage.username.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            First Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"first_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.first_name}\n                                                disabled = {submit}\n                                                error = {responseMessage.first_name.error}\n                                                helperText = {responseMessage.first_name.message}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Last Name\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"last_name\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.last_name}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.last_name.error}\n                                                helperText = {responseMessage.last_name.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Company\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"company\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.company}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.company.error}\n                                                helperText = {responseMessage.company.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Level\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={level}\n                                                // isClearable\n                                                name = 'level'\n                                                defaultValue = {level[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Activated\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <Select\n                                                options={activated}\n                                                // isClearable\n                                                name = 'activated'\n                                                defaultValue = {activated[0]}\n                                                onChange = {updateInput}\n                                                isDisabled = {submit}\n                                                required\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Email\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"email\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"email\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.email}\n                                                disabled = {submit}\n                                                required\n                                                error = {responseMessage.email.error}\n                                                helperText = {responseMessage.email.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.password}\n                                                disabled = {submit}\n                                                error = {responseMessage.password.error}\n                                                helperText = {responseMessage.password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-12\">\n                                    <div className=\"row align-items-center\">\n                                        <div className=\"col-md-4 font-bolder\">\n                                            Confirm Password\n                                        </div>\n                                        <div className=\"col-md-8\">\n                                            <TextField\n                                                type=\"password\"\n                                                margin=\"normal\"\n                                                variant=\"outlined\"\n                                                className=\"full-width product-reduce-margin-text\"\n                                                name = \"confirm_password\"\n                                                onChange = {updateInput}\n                                                value = {usersInput.confirm_password}\n                                                disabled = {submit}\n                                                error = {responseMessage.confirm_password.error}\n                                                helperText = {responseMessage.confirm_password.message}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <input type=\"submit\" style={{display:'none'}} />\n                            </form>\n                        </Paper>\n\n                    </DialogContent>\n                    <DialogActions className=\"product-modal-footer\">\n                        \n                        <Button \n                            onClick={(event:any) => submitForm(event,\"add\")} \n                            color=\"primary\" \n                            variant=\"contained\"\n                            disabled={submit}\n                            form=\"submit-edit-form\"\n                        >  \n                            <Save />\n                            Submit\n                            <CircularProgress style={{display: !submit ? 'none' : 'unset' }} className=\"product-circular-progress\"/>\n                        </Button>\n                        <Button onClick={() =>setModalAdd(false)} color=\"secondary\" variant=\"contained\">\n                            <Close />   \n                            Cancel\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            );\n        }else{\n            return null;\n        }\n    };\n    return(\n        <React.Fragment>\n            {modalshow()}\n            {modaledit()}\n            {modaladd()}\n            <Paper className=\"productPaperTable\">\n                <Table className=\"product-list\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\">Username</TableCell>\n                            <TableCell align=\"center\">Name</TableCell>\n                            <TableCell align=\"center\">Company</TableCell>\n                            <TableCell align=\"center\">Email</TableCell>\n                            <TableCell align=\"center\">Level</TableCell>\n                            <TableCell align=\"center\">Activated</TableCell>       \n                        </TableRow>\n                    </TableHead>\n                    \n                    <TableBody>\n                        <Filter />\n                        {\n                            usersState ?\n                                usersState.data.data.map((key:any,id:number)=>(\n                                    <TableRow key={id}  hover={true} style={{cursor:'pointer'}} onDoubleClick={() => initModalShow(key)} >\n                                        <TableCell align=\"left\" title={key.username}>{key.username}</TableCell>\n                                        <TableCell align=\"left\" title={key.first_name+\" \"+key.last_name}>{key.first_name+\" \"+key.last_name}</TableCell>\n                                        <TableCell align=\"left\" title={key.company}>{key.company}</TableCell>\n                                        <TableCell align=\"left\" title={key.email}>{key.email}</TableCell>\n                                        <TableCell align=\"left\" title={key.level === 1 ? 'Admin' : 'Encoder'}>{key.level === 1 ? 'Admin' : 'Encoder'}</TableCell>\n                                        <TableCell align=\"left\" title={key.activated ? 'Yes' :'No'}>{key.activated ? 'Yes' :'No'}</TableCell>                                       \n                                    </TableRow>\n                                ))\n                            :   skeletonTable()\n                        }\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow className=\"product-footer-table\">\n                            <td>\n                                <Button onClick={ () =>initModalAdd()} variant=\"contained\" color=\"primary\" className=\"product-add-new\">\n                                    ADD NEW\n                                </Button>\n                            </td>\n\n                            <TablePagination\n                                rowsPerPageOptions={[]}\n                                colSpan={0}\n                                count={usersState ? usersState.data.meta.total : 10}\n                                rowsPerPage={10}\n                                page={usersState ? page : 0}\n                                onChangePage={handleChangePage}\n                                // onChangeRowsPerPage={handleChangeRowsPerPage}\n                                ActionsComponent={TablePaginationActions}\n                                className=\"product-pagination\"\n                            />\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default withRouter(Users);","import React, { useEffect } from 'react';\nimport { Redirect, withRouter } from 'react-router'\nimport {Token} from 'Services';\nimport {Login} from 'Components';\n\nconst LoginMiddleware=(props:any) => {\n\n    const [ finish, setFinish ] = React.useState(false);\n    const [ token, setToken ] = React.useState(false);\n    \n    async function check(){\n        if (await Token.valid()){\n            setToken(true);\n        }\n        setFinish(true);\n    }\n    \n    useEffect(() => {\n        check();\n    },[]);\n\n    if(!finish){\n        return null;\n    }\n    \n    if(token){\n        return <Redirect to={{ pathname : '/'}} />;\n    }\n\n    return <Login {...props} />;\n}\n\nexport default withRouter(LoginMiddleware);","import { LoginMiddleware } from 'Middleware';\n\nexport const OutsideNav= [\n    {\n        path      : '/login',\n        component : LoginMiddleware\n    }\n];","import * as Component from 'Components';\n\nexport const InsideNav = [\n    {\n        path: \"/\",\n        component: Component.Home\n    },{\n        path : \"/products\",\n        component : Component.Products\n    },{\n        path : \"/suppliers\",\n        component : Component.Suppliers\n    },{\n        path : \"/users\",\n        component : Component.Users\n    },{\n        path : \"/reports\",\n        component : Component.Reports\n    },{\n        path : '/settings',\n        component : Component.Settings\n    }\n];","import React from 'react';\nimport {ComponentMiddleware} from 'Middleware';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport * as Component from 'Components';\nimport {OutsideNav} from './OutsideNav';\nimport {InsideNav} from './InsideNav';\n\nconst Navigations = (props:any) =>{\n    return(\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    {\n                        OutsideNav.map((element,index) => \n                            <Route exact path ={element.path} component={element.component} key={index} />\n                        )\n                    }\n                   \n                    <Route path =\"/\" strict>\n                        <Component.Navigation>\n                            {\n                                InsideNav.map((element,index) => \n                                    <Route exact path ={element.path} render= {(props) => <ComponentMiddleware {...props} component={element.component} />} key={index} />\n                                    // <Route exact path ={element.path} component={element.component} key={index} />\n                                )\n                            }\n                        </Component.Navigation>\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n}\n\nexport default Navigations;","import { UserAccount as UA} from '../Actions/Types';\n\nconst initialState = {\n    data : {}\n};\n\nconst UserAccount = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase UA:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default UserAccount;\n","import { NavigationTitle as NT } from '../Actions/Types';\n\nconst initialState = {\n    title : '',\n};\n\nconst NavigationTitle = (state = initialState, action:any) =>{\n\tswitch (action.type) {\n    \tcase NT:\n      \t\treturn {\n        \t\ttitle :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default NavigationTitle;","import { Products as pr } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Products = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase pr:\n      \t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n\t\t\t// console.log(action,state);\n      \t\treturn state;\n \t}\n}\n\nexport default Products;\n","import { Suppliers as sp } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Suppliers = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sp:\n      \t\treturn {\n        \t\tdata :  action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Suppliers;\n","import { Users as users } from '../Actions/Types';\n\nconst initialState = {\n    data : ''\n};\n\nconst Users = (state = initialState, action:any) => {\n\t\n\tswitch (action.type) {\n    \tcase users:\n\t\t\treturn {\n        \t\tdata : action.payload,\n            }\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Users;\n","import { Search as sr } from '../Actions/Types';\n\nconst initialState = {\n    target  :   \"users\",\n    open    :   false,\n    value   :   '',\n\n};\n\nconst Search = (state = initialState, action:any) => {\n\tswitch (action.type) {\n    \tcase sr.open:\n            return{\n                ...state,\n                open : action.payload\n            };\n        case sr.target:\n            return {\n                ...state,\n                target:action.payload\n            };\n        case sr.value:\n            return{\n                ...state,\n                value : action.payload\n            };\n    \tdefault:\n      \t\treturn state;\n \t}\n}\n\nexport default Search;\n","import { combineReducers } from 'redux';\nimport UserAccount from './UserAccount';\nimport NavigationTitle from './NavigationTitle';\nimport Products from './Products';\nimport Suppliers from './Suppliers';\nimport Users from './Users';\nimport Search from './Search';\n\nexport default combineReducers({\n    UserAccount,\n    NavigationTitle,\n    Products,\n    Suppliers,\n    Users,\n    Search\n});\n","import { createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './Reducers';\n\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //(window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()      //comment this for production\n  )\n);\n\nexport default store;","import React from 'react';\nimport Navigations from 'Routes';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\nimport { SnackbarProvider } from 'notistack';\nconst App = () => {\n    return(\n        <Provider store={store}>\n            <SnackbarProvider \n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                maxSnack={10}\n                autoHideDuration ={4000}\n            >\n                <Navigations />\n            </SnackbarProvider>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}